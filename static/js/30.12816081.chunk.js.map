{"version":3,"sources":["components lazy /^/.//.*$/ groupOptions: {} namespace object","utils/form.tsx","pages/CaseView.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","pad2char","v","setBodyContent","content","path","pageinstructions","casedata","value","origVal","obj","retObj","split","i","key","startParens","indexOf","idx","parseInt","substring","length","el","Array","isArray","getValue","propPath","lastIndexOf","data","target","push","instruction","listIndex","j","setObjectFromRef","CaseViewPage","useParams","casetypeid","caseid","useState","isLoaded","setCaseIsLoaded","caseObj","setCaseObj","isLimited","setIsLimited","assignmentID","setAssignmentID","stepName","setStepName","currentTabId","setCurrentTabId","utilities","setUtilities","utilitiesSummaries","setUtilitiesSummaries","UtilitySummaryCtx","setUtilitySummaryCtx","formField","setformField","useEffect","isMounted","fetchData","response","uiResources","name","root","config","caseInfo","pyViewName","ErrorBoundary","renderView","resources","views","RenderAssignment","onSubmit","onCancel","Form","actions","Button","onClick","variant","getCaseViewRegion","useCallback","pyDetails","children","item","Utility","lazy","type","catch","err","console","error","fallback","Progress","placement","utilityCtx","setUtilitySummaryDetails","caseKey","getCaseTypeClass","toUpperCase","replace","widget","prevState","count","reduce","result","child","label","renderTasklist","assignments","filter","avatar","Avatar","assigneeInfo","imageSrc","getDataUrl","image","meta","MetaList","items","Text","urgency","links","open","href","pageInstructions","form","str","elements","tagName","ref","getAttribute","checked","parentNode","firstElementChild","className","dt","valueAsDate","Date","getTime","getTimezoneOffset","getMonth","getDate","getFullYear","querySelectorAll","editableElems","innerHTML","tag","getFormData","closest","sendData","JSON","stringify","getSummaryFields","index","pyCaseSummary","getField","renderDisplayFieldLabel","renderDisplayFieldValue","CaseView","caseId","heading","pyLabel","icon","Icon","followed","onFollowedChange","onEdit","summary","CaseSummaryFields","primaryFields","secondaryFields","tabs","tabname","inheritedProps","tasks","Tasks","headerText","emptyPlaceholder","EmptyState","onExpandToggle","cur","stages","Stages","complete","visited_status","current","stageLabel","caseTitle","availableActions","text","utilitiesSummaryItems"],"mappings":"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","file":"static/js/30.12816081.chunk.js","sourcesContent":["var map = {\n\t\"./ErrorBoundary\": [\n\t\t127\n\t],\n\t\"./ErrorBoundary.tsx\": [\n\t\t127\n\t],\n\t\"./FileUtility\": [\n\t\t1048,\n\t\t5\n\t],\n\t\"./FileUtility.tsx\": [\n\t\t1048,\n\t\t5\n\t],\n\t\"./Followers\": [\n\t\t1049,\n\t\t6\n\t],\n\t\"./Followers.tsx\": [\n\t\t1049,\n\t\t6\n\t],\n\t\"./Pulse\": [\n\t\t1036,\n\t\t1,\n\t\t7\n\t],\n\t\"./Pulse.tsx\": [\n\t\t1036,\n\t\t1,\n\t\t7\n\t],\n\t\"./RelatedCases\": [\n\t\t1050,\n\t\t8\n\t],\n\t\"./RelatedCases.tsx\": [\n\t\t1050,\n\t\t8\n\t],\n\t\"./Stakeholders\": [\n\t\t1051,\n\t\t2,\n\t\t9\n\t],\n\t\"./Stakeholders.tsx\": [\n\t\t1051,\n\t\t2,\n\t\t9\n\t],\n\t\"./Tags\": [\n\t\t1052,\n\t\t3,\n\t\t10\n\t],\n\t\"./Tags.tsx\": [\n\t\t1052,\n\t\t3,\n\t\t10\n\t],\n\t\"./Worklist\": [\n\t\t1034,\n\t\t11\n\t],\n\t\"./Worklist.tsx\": [\n\t\t1034,\n\t\t11\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 1058;\nmodule.exports = webpackAsyncContext;","/**\n * always make sure that the return value is a string with 2 digits - prepend 0 in front\n */\nexport const pad2char = (v: any) => `0${v}`.slice(-2);\nexport const pad4char = (v: any) => `0${v}`.slice(-4);\n\n/**\n * escape and unescape the HTML entities\n */\nexport const escapeHTML = (str: string) => {\n  if (!str || typeof str !== 'string') return '';\n  return str.replace(\n    /[&<>'\"]/g,\n    tag =>\n      ({\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        \"'\": '&#39;',\n        '(': '&#40;',\n        ')': '&#41;',\n        '\"': '&quot;'\n      }[tag] || tag)\n  );\n};\n\n/**\n * set the value of a property in an object content targeted by the path like 'props(1).pyLabel'\n */\nexport const setObjectFromRef = (content: any, path: string, value: any) => {\n  if (typeof path !== 'string') {\n    return;\n  }\n  const keys = path.split('.');\n  let retObj = content;\n  for (let i = 0; i < keys.length; i++) {\n    let el = keys[i];\n    const startParens = el.indexOf('(');\n    if (startParens === -1) {\n      // regular property - just add it to retObj\n      if (i < keys.length - 1) {\n        if (typeof retObj[el] === 'undefined') {\n          retObj[el] = {};\n        }\n      } else {\n        retObj[el] = value;\n      }\n      retObj = retObj[el];\n    } else {\n      const idx = parseInt(el.substring(startParens + 1, el.length - 1));\n      el = el.substring(0, startParens);\n      if (typeof retObj[el] === 'undefined') {\n        retObj[el] = [];\n      }\n      for (let j = retObj[el].length; j < idx; j++) {\n        retObj[el].push({});\n      }\n      retObj = retObj[el][idx - 1];\n    }\n  }\n};\n\n/**\n * get the value targeted by path - path can be a complex string like 'props(1).pyLabel'\n * Note that path is using 1 as the starting index\n */\nexport const getValue = (obj: any, path: string) => {\n  if (typeof path !== 'string') {\n    return null;\n  }\n  let retObj = obj;\n  const keys = path.split('.');\n  for (const i in keys) {\n    const key = keys[i];\n    const startParens = key.indexOf('(');\n    if (startParens === -1) {\n      if (typeof retObj[key] !== 'undefined') {\n        retObj = retObj[key];\n      } else {\n        return null;\n      }\n    } else {\n      const idx = parseInt(key.substring(startParens + 1, key.length - 1), 10);\n      const el = retObj[key.substring(0, startParens)];\n      if (el && Array.isArray(el) && el.length >= idx) {\n        retObj = el[idx - 1];\n      } else {\n        return null;\n      }\n    }\n  }\n  return retObj;\n};\n\n/**\n * set the content and pageinstructions used to post body update\n */\nexport const setBodyContent = (\n  content: any,\n  path: string,\n  pageinstructions: any,\n  casedata: any,\n  value: any\n) => {\n  if (typeof path !== 'string') {\n    return;\n  }\n  // If no change, just return\n  if (casedata) {\n    const origVal = getValue(casedata, path);\n    // eslint-disable-next-line eqeqeq\n    if (origVal === value || `${origVal}` === `${value}` || (origVal === null && value === ''))\n      return;\n  }\n  const propPath = path.lastIndexOf('.');\n  if (propPath === -1) {\n    content[path] = value;\n    return;\n  }\n  if (!pageinstructions) {\n    setObjectFromRef(content, path, value);\n    return;\n  }\n  const data: any = {};\n  let target = path.substring(0, propPath);\n  data[path.substring(propPath + 1)] = value;\n  const startParens = target.indexOf('(');\n  if (startParens === -1) {\n    pageinstructions.push({\n      instruction: 'UPDATE',\n      target,\n      content: data\n    });\n  } else {\n    const idx = target.substring(startParens + 1, target.length - 1);\n    target = target.substring(0, startParens);\n    pageinstructions.push({\n      instruction: 'UPDATE',\n      target,\n      listIndex: parseInt(idx, 10),\n      content: data\n    });\n  }\n};\n\n/**\n * Retrieve the values of all the form controls in the form and populate them in the content object\n */\nexport const getFormData = (form: any, content: any, pageinstructions: any, casedata: any) => {\n  for (const el of form.elements) {\n    if (el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT') {\n      const ref = el.getAttribute('data-ref');\n      if (ref !== null && ref !== 'pyID') {\n        if (el.tagName === 'INPUT') {\n          const type = el.getAttribute('type');\n          if (type === 'checkbox') {\n            setBodyContent(content, ref, pageinstructions, casedata, el.checked);\n          } else if (type === 'radio') {\n            if (el.checked) {\n              setBodyContent(content, ref, pageinstructions, casedata, el.value);\n            }\n          } else if (type === 'tel') {\n            let value = el.value;\n            if (\n              el.parentNode.firstElementChild.tagName === 'SELECT' &&\n              el.parentNode.firstElementChild.className === 'field-countrycode'\n            ) {\n              value = el.parentNode.firstElementChild.value + value;\n            }\n            setBodyContent(content, ref, pageinstructions, casedata, value);\n          } else if (type === 'date') {\n            let dt;\n            if (el.valueAsDate) {\n              dt = new Date(el.valueAsDate);\n            }\n            // eslint-disable-next-line no-self-compare\n            if (!dt || !(dt instanceof Date) || dt.getTime() !== dt.getTime()) {\n              dt = new Date(el.value);\n            }\n            // eslint-disable-next-line no-self-compare\n            if (dt && dt instanceof Date && dt.getTime() === dt.getTime()) {\n              dt = new Date(dt.getTime() + dt.getTimezoneOffset() * 60000);\n              setBodyContent(\n                content,\n                ref,\n                pageinstructions,\n                casedata,\n                `${pad2char(dt.getMonth() + 1)}/${pad2char(dt.getDate())}/${dt.getFullYear()}`\n              );\n            } else {\n              setBodyContent(content, ref, pageinstructions, casedata, el.value);\n            }\n          } else {\n            setBodyContent(content, ref, pageinstructions, casedata, el.value);\n          }\n        } else {\n          setBodyContent(content, ref, pageinstructions, casedata, el.value);\n        }\n      }\n    }\n  }\n  if (form && form.querySelectorAll) {\n    const editableElems = form.querySelectorAll('[contenteditable]');\n    for (let i = 0; i < editableElems.length; i++) {\n      const el = editableElems[i];\n      const ref = el.getAttribute('data-ref');\n      setBodyContent(content, ref, pageinstructions, casedata, escapeHTML(el.innerHTML));\n    }\n  }\n};\n","import { Suspense, lazy, useEffect, useState, useCallback, FormEvent } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Avatar,\n  Progress,\n  Icon,\n  EmptyState,\n  MetaList,\n  Text,\n  Button,\n  Form\n} from '@pega/cosmos-react-core';\nimport {\n  CaseView as CaseViewComp,\n  CaseSummaryFields,\n  Tasks,\n  Stages\n} from '@pega/cosmos-react-work';\nimport { fetchData, sendData } from '../services';\nimport { getCaseTypeClass } from '../utils/env';\nimport { getField, renderDisplayFieldLabel, renderDisplayFieldValue } from '../utils/field';\nimport { getDataUrl } from '../services';\nimport { renderView } from '../utils/renderer';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport { getFormData } from '../utils/form';\n\nexport default function CaseViewPage() {\n  const { casetypeid, caseid } = useParams() as any;\n  const [isLoaded, setCaseIsLoaded] = useState(false);\n  const [caseObj, setCaseObj] = useState<any>();\n  const [isLimited, setIsLimited] = useState(true);\n  const [assignmentID, setAssignmentID] = useState('');\n  const [stepName, setStepName] = useState('');\n  const [currentTabId, setCurrentTabId] = useState('tab-0');\n  const [utilities, setUtilities] = useState([]);\n  const [utilitiesSummaries, setUtilitiesSummaries] = useState([]);\n  const [UtilitySummaryCtx, setUtilitySummaryCtx] = useState<any>({});\n  const [formField, setformField] = useState<any>();\n\n  useEffect(() => {\n    let isMounted = true;\n    if (assignmentID !== '') {\n      fetchData('assignments', assignmentID).then(response => {\n        if (isMounted) {\n          if (response.uiResources) {\n            const name = response.uiResources.root.config.name;\n            setStepName(response.data.caseInfo.content.pyViewName);\n            setformField(\n              <ErrorBoundary>\n                {renderView(response.uiResources.resources.views[name], false, '', response)}\n              </ErrorBoundary>\n            );\n          }\n        }\n      });\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [assignmentID]);\n\n  const RenderAssignment = ({\n    onSubmit,\n    onCancel\n  }: {\n    onSubmit: (e: FormEvent) => void;\n    onCancel: () => void;\n  }) => {\n    return (\n      <Form\n        actions={\n          <>\n            <Button onClick={onCancel}>Cancel</Button>\n            <Button variant='primary' onClick={onSubmit}>\n              Submit\n            </Button>\n          </>\n        }\n      >\n        {formField}\n      </Form>\n    );\n  };\n\n  const getCaseViewRegion = useCallback(\n    (name: string) => {\n      if (!caseObj || !caseObj.uiResources.resources.views.pyDetails) return [];\n      for (const item of caseObj.uiResources.resources.views.pyDetails.children) {\n        if (item.name === name) return item;\n      }\n      return [];\n    },\n    [caseObj]\n  );\n\n  useEffect(() => {\n    if (!caseObj) return;\n    const utilities = getCaseViewRegion('Utilities');\n    setUtilities(\n      utilities.children.map((item: any, i: number) => {\n        try {\n          const Utility = lazy(() =>\n            import(`../components/${item.type}`).catch((err: string) => {\n              console.error('An error has occured', err);\n            })\n          );\n          return (\n            <Suspense key={`utility-${i}`} fallback={<Progress placement='local' />}>\n              <Utility\n                caseid={caseid}\n                casetypeid={casetypeid}\n                utilityCtx={setUtilitySummaryDetails}\n              />\n            </Suspense>\n          );\n        } catch (e) {\n          return <div key={`utility-${i}`}>Utility {item.type} not found</div>;\n        }\n      })\n    );\n  }, [caseObj, caseid, casetypeid, getCaseViewRegion]);\n\n  useEffect(() => {\n    let caseKey = `${getCaseTypeClass(casetypeid).toUpperCase()}%20${caseid.toUpperCase()}`;\n    caseKey = caseKey.replace(`-${casetypeid.toUpperCase()}%20`, '%20');\n    fetchData('caseview', caseKey).then(response => {\n      setCaseObj(response);\n      setCaseIsLoaded(true);\n    });\n  }, [caseid, casetypeid]);\n\n  const setUtilitySummaryDetails = (widget: any, value: any) => {\n    setUtilitySummaryCtx((prevState: any) => {\n      if (prevState[widget] && prevState[widget].count === value.count) return prevState;\n      return { ...prevState, [widget]: value };\n    });\n  };\n\n  useEffect(() => {\n    if (!caseObj) return;\n    const utilities = getCaseViewRegion('Utilities');\n    setUtilitiesSummaries(\n      utilities.children.reduce((result: any, child: any) => {\n        const label: string = child.type;\n        if (label && UtilitySummaryCtx[label]) {\n          result.push(UtilitySummaryCtx[label]);\n        }\n        return result;\n      }, [])\n    );\n  }, [UtilitySummaryCtx, caseObj, getCaseViewRegion]);\n\n  const renderTasklist = () => {\n    return caseObj.data.caseInfo.assignments\n      .filter((item: any, i: number) => {\n        return !isLimited || i < 3;\n      })\n      .map((item: any, i: number) => {\n        return {\n          avatar: (\n            <Avatar\n              name={item.assigneeInfo.name}\n              imageSrc={getDataUrl('operatorimage', item.assigneeInfo.image)}\n            />\n          ),\n          name: item.name,\n          meta: (\n            <MetaList\n              items={[\n                <Text variant='secondary'>Task in {caseid}</Text>,\n                <Text variant='secondary'>Urgency {item.urgency}</Text>\n              ]}\n            />\n          ),\n          actions: (\n            <Button\n              variant='primary'\n              onClick={() => {\n                setAssignmentID(item.links.open.href);\n              }}\n            >\n              Go\n            </Button>\n          ),\n          content:\n            assignmentID !== '' ? (\n              <RenderAssignment\n                onSubmit={(e: FormEvent) => {\n                  const content = {};\n                  const pageInstructions: any = [];\n                  getFormData(\n                    (e.target as Element).closest('form'),\n                    content,\n                    pageInstructions,\n                    caseObj.data.caseInfo.content\n                  );\n                  sendData(\n                    'assignments',\n                    assignmentID.substring(1) + '/actions/' + stepName,\n                    JSON.stringify({\n                      content,\n                      pageInstructions\n                    })\n                  ).then(response => {\n                    if (response.uiResources) {\n                      const name = response.uiResources.root.config.name;\n                      setformField(\n                        <ErrorBoundary>\n                          {renderView(\n                            response.uiResources.resources.views[name],\n                            false,\n                            '',\n                            response\n                          )}\n                        </ErrorBoundary>\n                      );\n                      setCaseObj((prevState: any) => {\n                        return { ...prevState, data: response.data };\n                      });\n                    }\n                  });\n                  setAssignmentID('');\n                }}\n                onCancel={() => {\n                  setAssignmentID('');\n                }}\n              />\n            ) : null\n        };\n      });\n  };\n\n  const getAssignments = () => {\n    if (!caseObj.data.caseInfo.assignments) return null;\n    return (\n      <Tasks\n        headerText='Tasks'\n        count={caseObj.data.caseInfo.assignments.length}\n        items={renderTasklist()}\n        emptyPlaceholder={<EmptyState />}\n        onExpandToggle={() => {\n          setIsLimited(cur => !cur);\n        }}\n      />\n    );\n  };\n\n  const getStages = () => {\n    const stagelist = caseObj.data.caseInfo.stages;\n    return stagelist.map((item: any) => {\n      return {\n        name: item.name,\n        id: `stage-${item.name}`,\n        complete: item.visited_status === 'completed'\n      };\n    });\n  };\n\n  const renderStages = () => {\n    return (\n      <Stages\n        stages={getStages()}\n        current={`stage-${caseObj.data.caseInfo.stageLabel}`}\n        caseTitle='Stages'\n      />\n    );\n  };\n\n  const getActions = () => {\n    const actionlist = caseObj.data.caseInfo.availableActions;\n    return actionlist.map((item: any, i: number) => {\n      return {\n        text: item.name,\n        id: `action-${i}`,\n        onClick: () => {}\n      };\n    });\n  };\n\n  const getTabItems = () => {\n    const tabs = getCaseViewRegion('Tabs');\n    return tabs.children.map((item: any, i: number) => {\n      let tabname = item.config.label;\n      if (!tabname && item.config.inheritedProps && item.config.inheritedProps.length > 0) {\n        tabname = item.config.inheritedProps[0];\n      }\n      tabname = typeof tabname === 'string' ? tabname.replace('@L ', '') : '';\n      return {\n        name: tabname,\n        id: `tab-${i}`\n      };\n    });\n  };\n\n  const getCaseTabs = () => {\n    return {\n      items: getTabItems(),\n      currentTabId: currentTabId,\n      onClick: (id: string) => setCurrentTabId(id)\n    };\n  };\n\n  const getSummaryFields = (index: number) => {\n    return caseObj.uiResources.resources.views.pyCaseSummary.children[index].children.map(\n      (item: any, i: number) => {\n        getField(caseObj, item);\n        return {\n          id: `p-${i}`,\n          name: renderDisplayFieldLabel(item),\n          value: renderDisplayFieldValue(item)\n        };\n      }\n    );\n  };\n\n  if (!isLoaded) {\n    return <Progress placement='global' />;\n  }\n\n  return (\n    <CaseViewComp\n      caseId={caseid}\n      heading={caseObj ? caseObj.data.caseInfo.content.pyLabel : ''}\n      icon={<Icon name='polaris-solid' />}\n      followed={false}\n      onFollowedChange={() => {}}\n      onEdit={() => {}}\n      summary={\n        <CaseSummaryFields\n          primaryFields={getSummaryFields(0)}\n          secondaryFields={getSummaryFields(1)}\n        />\n      }\n      tabs={getCaseTabs()}\n      tasks={getAssignments()}\n      stages={renderStages()}\n      actions={getActions()}\n      utilities={utilities}\n      utilitiesSummaryItems={utilitiesSummaries}\n    />\n  );\n}\n"],"sourceRoot":""}