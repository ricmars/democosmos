{"version":3,"file":"static/js/78355.017eca73.chunk.js","mappings":"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","sources":["../node_modules/@pega/cosmos-react-core/src/components/Badges/Selection.tsx","../node_modules/@pega/cosmos-react-core/src/components/Badges/Tag.tsx","../node_modules/@pega/cosmos-react-core/src/components/ComboBox/ComboBox.styles.ts","../node_modules/@pega/cosmos-react-core/src/components/ComboBox/MultiSelectInput/MultiSelectInput.tsx"],"sourcesContent":["import { FC, MouseEvent, forwardRef, PropsWithoutRef, Ref, KeyboardEvent } from 'react';\nimport styled, { css } from 'styled-components';\nimport { mix, transparentize } from 'polished';\n\nimport { ForwardProps } from '../../types';\nimport { tryCatch } from '../../utils';\nimport BareButton, { StyledBareButton } from '../Button/BareButton';\nimport Icon, { registerIcon, StyledIcon } from '../Icon';\nimport * as timesIcon from '../Icon/icons/times.icon';\nimport { useConsolidatedRef, useI18n } from '../../hooks';\nimport { defaultThemeProp } from '../../theme';\n\nregisterIcon(timesIcon);\n\nexport interface SelectableProps {\n  /** An id that is used by the onSelect and onRemove functions if they are provided. */\n  id: string;\n  /** The content of the Badge. */\n  children: string;\n  /** Takes an ID that represents the Badge. This function is called when the Badge is clicked. */\n  onSelect?: (id: string) => void;\n  /** Takes an ID that represents the Badge. This function is called when the Badge is closed by clicking the X. */\n  onRemove?: (id: string) => void;\n  /** Event handler called when the Badge is clicked. */\n  onClick?: (event: MouseEvent) => void;\n  /** Event handler fired on every keyup event. */\n  onKeyUp?: (event: KeyboardEvent) => void;\n}\n\nexport const StyledSelectable = styled.button(\n  ({\n    theme: {\n      base: { spacing, palette, 'border-radius': borderRadius },\n      components: {\n        badges: { selectable }\n      }\n    }\n  }) => {\n    const { foreground, background } = selectable.base;\n    const { dark, 'primary-background': primaryBackground, interactive } = palette;\n\n    const displayBackground = tryCatch(() => mix(0.15, background, primaryBackground));\n    const hoverBorder = tryCatch(() => mix(0.3, background, primaryBackground));\n    const boxShadowColor = tryCatch(() => transparentize(0.45, dark));\n\n    const height = 1.125;\n    return css`\n      background: ${displayBackground};\n      border: 0 solid transparent;\n      border-radius: calc(${height} * ${borderRadius});\n      color: ${foreground};\n      cursor: default;\n      display: inline-flex;\n      font-size: 0.75rem;\n      height: ${height}rem;\n      padding: 0 ${spacing};\n      max-width: 100%;\n      line-height: 1;\n\n      span {\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        line-height: normal;\n      }\n\n      &:hover {\n        color: ${interactive};\n        box-shadow: inset 0 0 0 0.0625rem ${hoverBorder};\n\n        ${StyledBareButton} {\n          color: ${interactive};\n        }\n      }\n\n      &:active {\n        box-shadow: inset 0 0 0 0.0625rem ${background};\n      }\n\n      &:focus {\n        color: ${interactive};\n        box-shadow: 0 0 0.5rem -0.125rem ${boxShadowColor}, inset 0 0 0 0.125rem ${background};\n        outline: none;\n\n        ${StyledBareButton} {\n          color: ${interactive};\n        }\n      }\n\n      ${StyledIcon} {\n        margin-inline-start: ${spacing};\n        height: 1em;\n        width: 1em;\n      }\n    `;\n  }\n);\n\nStyledSelectable.defaultProps = defaultThemeProp;\n\nconst Selectable: FC<SelectableProps & ForwardProps> = forwardRef(function Selectable(\n  {\n    id,\n    children,\n    onSelect,\n    onRemove,\n    onClick,\n    onKeyUp,\n    ...restProps\n  }: PropsWithoutRef<SelectableProps>,\n  ref: Ref<HTMLButtonElement>\n) {\n  const consolidatedRef = useConsolidatedRef(ref);\n  const t = useI18n();\n\n  const handleClick = (e: MouseEvent<HTMLButtonElement>) => {\n    onClick?.(e);\n    onSelect?.(id);\n  };\n\n  const handleCloseClick = (e: MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    onRemove?.(id);\n  };\n\n  const handleKeyUp = (e: KeyboardEvent) => {\n    onKeyUp?.(e);\n    if (e.key === 'Enter') {\n      onSelect?.(id);\n    }\n\n    if (e.key === 'Backspace' || e.key === 'Delete') {\n      onRemove?.(id);\n    }\n  };\n\n  return (\n    <StyledSelectable\n      ref={consolidatedRef}\n      onClick={handleClick}\n      onKeyUp={handleKeyUp}\n      {...restProps}\n    >\n      <span>{children}</span>\n      {onRemove && (\n        <BareButton tabIndex='-1' onClick={handleCloseClick} aria-label={t('remove')}>\n          <Icon name='times' />\n        </BareButton>\n      )}\n    </StyledSelectable>\n  );\n});\n\nexport default Selectable;\n","import { FC, forwardRef, Ref, PropsWithoutRef, MouseEventHandler } from 'react';\nimport styled, { css } from 'styled-components';\nimport { mix } from 'polished';\n\nimport { defaultThemeProp } from '../../theme';\nimport { tryCatch } from '../../utils';\nimport { BaseProps, ForwardProps } from '../../types';\nimport BareButton from '../Button/BareButton';\n\nexport interface TagProps extends BaseProps {\n  /** The content of the Badge. */\n  children: string;\n  /** A location to navigate to. Passing an href will render an anchor styled as a Tag. */\n  href?: string;\n  /** Click handler for the badge. Passing an onClick function will render a button styled as a Tag. */\n  onClick?: MouseEventHandler<HTMLAnchorElement | HTMLButtonElement>;\n  /** Ref forwarded to the wrapping element. */\n  ref?: Ref<HTMLSpanElement | HTMLAnchorElement | HTMLButtonElement>;\n}\n\nexport const StyledTag = styled.span(props => {\n  const borderRadius = props.theme.base['border-radius'];\n  const { spacing } = props.theme.base;\n  const { foreground, background } = props.theme.components.badges.tag;\n\n  const borderColor = tryCatch(() =>\n    mix(0.85, props.theme.base.palette['primary-background'], background)\n  );\n  const boxShadow = props.theme.base.shadow.focus;\n\n  return css`\n    border: 0.0625rem solid ${borderColor};\n    border-radius: calc(0.25 * ${borderRadius});\n    color: ${foreground};\n    display: inline-block;\n    font-size: 0.75rem;\n    padding: 0 ${spacing};\n\n    &:hover {\n      border-color: ${background};\n    }\n\n    &:focus {\n      border-color: ${background};\n      box-shadow: ${boxShadow};\n      outline: none;\n    }\n\n    &:active {\n      border: 0.0625rem solid ${borderColor};\n      box-shadow: none;\n    }\n  `;\n});\n\nStyledTag.defaultProps = defaultThemeProp;\n\nconst Tag: FC<TagProps & ForwardProps> = forwardRef(function Tag(\n  { children, href, onClick, ...restProps }: PropsWithoutRef<TagProps>,\n  ref: TagProps['ref']\n) {\n  return (\n    <StyledTag\n      {...restProps}\n      as={onClick || href ? BareButton : undefined}\n      href={href}\n      onClick={onClick}\n      ref={ref}\n    >\n      {children}\n    </StyledTag>\n  );\n});\n\nexport default Tag;\n","import styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../theme';\nimport { StyledButton } from '../Button';\nimport { StyledFormControl } from '../FormControl';\nimport { StyledPopover } from '../Popover';\nimport { StyledMenu, StyledMenuListWrapper } from '../Menu/Menu.styles';\n\nexport const StyledSelectInput = styled.div(({ theme: { base, components } }) => {\n  return css`\n    @media (pointer: coarse) {\n      min-height: ${base['hit-area']['finger-min']};\n    }\n\n    div {\n      min-height: ${components.input.height};\n    }\n\n    &:focus-within {\n      border-color: ${components['form-control'][':focus']['border-color']};\n      box-shadow: ${components['form-control'][':focus']['box-shadow']};\n    }\n\n    &:hover:not([readonly]):not([disabled]):focus-within {\n      border-color: transparent;\n    }\n\n    input {\n      min-width: 0;\n      width: 100%;\n      height: calc(${components.input.height} - 2 * ${components['form-control']['border-width']});\n      color: ${components['form-control']['foreground-color']};\n      text-overflow: ellipsis;\n      margin-inline: ${base.spacing};\n    }\n\n    input,\n    input:focus {\n      border: none;\n      outline: none;\n      flex-grow: 1;\n      background-color: transparent;\n\n      &:read-only {\n        cursor: default;\n      }\n    }\n\n    & > ${StyledButton} {\n      align-self: stretch;\n      height: auto;\n      margin-block: -0.0625rem;\n      margin-inline-end: -0.0625rem;\n      border-start-start-radius: 0;\n      border-start-end-radius: calc(\n        ${base['border-radius']} * ${components['form-control']['border-radius']}\n      );\n      border-end-start-radius: 0;\n      border-end-end-radius: calc(\n        ${base['border-radius']} * ${components['form-control']['border-radius']}\n      );\n    }\n  `;\n});\n\nStyledSelectInput.defaultProps = defaultThemeProp;\n\nexport const StyledComboBox = styled(StyledFormControl)(() => {\n  return css`\n    border: 0;\n\n    ${StyledPopover} {\n      border-top-left-radius: 0;\n      border-top-right-radius: 0;\n\n      ${StyledMenu},\n      ${StyledMenuListWrapper} {\n        max-height: inherit;\n      }\n    }\n  `;\n});\n\nStyledComboBox.defaultProps = defaultThemeProp;\n","import {\n  FunctionComponent,\n  forwardRef,\n  Ref,\n  PropsWithoutRef,\n  KeyboardEvent,\n  useRef,\n  useCallback,\n  useMemo,\n  useState,\n  useEffect,\n  MouseEvent\n} from 'react';\nimport styled, { css } from 'styled-components';\nimport { transparentize } from 'polished';\n\nimport { ForwardProps } from '../../../types';\nimport { defaultThemeProp } from '../../../theme';\nimport Selectable, { StyledSelectable } from '../../Badges/Selection';\nimport { StyledFormControl } from '../../FormControl';\nimport Flex from '../../Flex';\nimport {\n  useConsolidatedRef,\n  useActiveDescendant,\n  useDirection,\n  useI18n,\n  useUID\n} from '../../../hooks';\nimport { cap, tryCatch } from '../../../utils';\nimport { StyledBareButton } from '../../Button/BareButton';\nimport VisuallyHiddenText from '../../VisuallyHiddenText';\nimport { StyledSelectInput } from '../ComboBox.styles';\n\nimport { MultiSelectInputProps } from './MultiSelectInput.types';\n\nexport const StyledMultiSelectInput = styled(StyledSelectInput)(({ theme }) => {\n  const { background } = theme.components.badges.selectable.base;\n  const { 'foreground-color': foreground } = theme.base.palette;\n  const boxShadowColor = tryCatch(() => transparentize(0.45, foreground));\n\n  return css`\n    cursor: text;\n\n    ul {\n      list-style: none;\n      display: contents;\n\n      &[data-active-scope='true'] ${StyledSelectable}[data-current='true'] {\n        color: ${theme.base.palette.interactive};\n        box-shadow: 0 0 0.5rem -0.125rem ${boxShadowColor}, inset 0 0 0 0.125rem ${background};\n        outline: none;\n\n        ${StyledBareButton} {\n          color: ${theme.base.palette.interactive};\n        }\n      }\n    }\n\n    input {\n      width: 8ch;\n      height: 1.125rem;\n    }\n  `;\n});\n\nStyledMultiSelectInput.defaultProps = defaultThemeProp;\n\nconst MultiSelectInput: FunctionComponent<MultiSelectInputProps & ForwardProps> = forwardRef(\n  function MultiSelectInput(\n    props: PropsWithoutRef<MultiSelectInputProps>,\n    ref: Ref<HTMLInputElement>\n  ) {\n    const {\n      selected = [],\n      value,\n      onRemove,\n      onChange,\n      onKeyDown,\n      onResolveSuggestion,\n      actions,\n      readOnly,\n      disabled,\n      status,\n      placeholder,\n      autoFocus,\n      pauseDescendantEvaluation,\n      onSelectedFocus,\n      onSelectedBlur,\n      'aria-controls': ariaControls,\n      ...restProps\n    } = props;\n    const t = useI18n();\n    const id = useUID();\n\n    const inputRef = useConsolidatedRef<HTMLInputElement>(ref);\n    const listRef = useRef<HTMLUListElement>(null);\n    const [focusDescendant, setFocusDescendant] = useState<HTMLElement | null>(null);\n    const [activeItemId, setActiveItemId] = useState<string | null>(null);\n    const { start, end } = useDirection();\n\n    const uadConfig = useMemo(\n      () => ({\n        focusEl: inputRef.current,\n        scope: listRef.current,\n        selector: 'li[role=\"option\"]',\n        orientation: 'horizontal' as const,\n        focusReturnEl: focusDescendant,\n        clearFocusReturn: () => {\n          setFocusDescendant(null);\n        },\n        pauseDescendantEvaluation,\n        onClick: (el: HTMLElement) => {\n          el.click();\n        }\n      }),\n      [pauseDescendantEvaluation, selected, focusDescendant]\n    );\n\n    const { activeDescendant } = useActiveDescendant(uadConfig, [selected]);\n\n    const handleSelectedRemoval = useCallback(\n      (selectionId, idx) => {\n        if (!pauseDescendantEvaluation) {\n          if (idx === selected.length - 1) {\n            // If removing last selected item\n            if (selected.length > 1) {\n              // If other selected items, focus previous\n              setFocusDescendant(\n                (listRef.current?.querySelectorAll(uadConfig.selector)[idx - 1] as HTMLElement) ||\n                  null\n              );\n            } else {\n              // Blur selected if final only item removed\n              onSelectedBlur?.();\n            }\n          } else if (selected.length > 1) {\n            // If not last item removed and other selected items, focus next\n            setFocusDescendant(\n              (listRef.current?.querySelectorAll(uadConfig.selector)[idx + 1] as HTMLElement) ||\n                null\n            );\n          }\n        }\n        onRemove?.(selectionId, idx);\n        inputRef.current?.focus();\n      },\n      [selected, onRemove, onSelectedBlur, uadConfig]\n    );\n\n    useEffect(() => {\n      // Maintain active item & prev. val only as it changes.\n      if (activeDescendant?.id && activeDescendant.id !== activeItemId) {\n        setActiveItemId(activeDescendant.id);\n      }\n    }, [activeDescendant]);\n\n    const onInputKeyDown = useCallback(\n      (e: KeyboardEvent<HTMLInputElement>) => {\n        if (selected.length && inputRef.current?.selectionStart === 0) {\n          const lastIndex = selected.length - 1;\n          if (pauseDescendantEvaluation && e.key === `Arrow${cap(start)}`) {\n            setFocusDescendant(\n              (listRef.current?.querySelectorAll(uadConfig.selector)[lastIndex] as HTMLElement) ||\n                null\n            );\n            onSelectedFocus?.();\n          }\n\n          const lastSelectableId = listRef.current?.querySelectorAll(uadConfig.selector)[lastIndex]\n            ?.id;\n          const onLastItem = activeItemId === lastSelectableId;\n\n          if (\n            !pauseDescendantEvaluation &&\n            ((onLastItem && e.key === `Arrow${cap(end)}`) || e.key === 'ArrowDown')\n          ) {\n            onSelectedBlur?.();\n          }\n\n          if (['Backspace', 'Delete'].includes(e.key) && !(readOnly || disabled)) {\n            handleSelectedRemoval(selected[lastIndex].id, lastIndex);\n          }\n        }\n        onKeyDown?.(e);\n      },\n      [\n        pauseDescendantEvaluation,\n        activeItemId,\n        onKeyDown,\n        handleSelectedRemoval,\n        selected,\n        readOnly,\n        disabled\n      ]\n    );\n\n    const ariaDescribedBy = useMemo(() => {\n      return onChange\n        ? `${id}-inputDescription  ${id}-searchDescription`\n        : `${id}-inputDescription`;\n    }, [id]);\n\n    return (\n      <Flex\n        as={StyledMultiSelectInput}\n        forwardedAs={StyledFormControl}\n        hasSuggestion={status === 'pending' && !!onResolveSuggestion}\n        container={{ alignItems: 'center', justify: 'between' }}\n        {...{\n          readOnly,\n          disabled,\n          status\n        }}\n      >\n        <Flex\n          container={{ alignContent: 'center', wrap: 'wrap', rowGap: 0.5, colGap: 0.25, pad: 0.25 }}\n          item={{ grow: 1 }}\n          onClick={(e: MouseEvent<HTMLDivElement>) => {\n            if (\n              e.target instanceof HTMLElement &&\n              !e.currentTarget.contains(e.target.closest('li'))\n            ) {\n              inputRef.current?.focus();\n              inputRef.current?.click();\n            }\n          }}\n        >\n          {selected.length > 0 && (\n            <ul ref={listRef} id={id} role='listbox' aria-label={t('selected_items')}>\n              {selected.map((element, idx) => {\n                return (\n                  <Selectable\n                    as='li'\n                    key={element.id}\n                    role='option'\n                    id={element.id.toString()}\n                    status={status}\n                    onClick={e => {\n                      const mouseClick = e.detail !== 0;\n\n                      if (!readOnly && !disabled && !mouseClick) {\n                        handleSelectedRemoval(element.id, idx);\n                      }\n                    }}\n                    onRemove={() => {\n                      if (!readOnly && !disabled) {\n                        handleSelectedRemoval(element.id, idx);\n                      }\n                    }}\n                    onKeyDown={(e: KeyboardEvent<Element>) => {\n                      // prevent browser's Back on FF\n                      if (e.key === 'Backspace') e.preventDefault();\n                    }}\n                    tabIndex='-1'\n                    aria-label={`${t('remove')} ${element.text}`}\n                    aria-describedby={ariaDescribedBy}\n                  >\n                    {element.text}\n                  </Selectable>\n                );\n              })}\n            </ul>\n          )}\n          <Flex\n            item={{ grow: 1 }}\n            as='input'\n            size={1}\n            ref={inputRef}\n            value={value}\n            // no-op avoids react uncontrolled warning\n            onChange={onChange || (() => {})}\n            onKeyDown={onInputKeyDown}\n            readOnly={readOnly || !onChange}\n            disabled={disabled}\n            placeholder={selected?.length ? undefined : placeholder}\n            autoComplete='off'\n            autoFocus={autoFocus}\n            aria-controls={!pauseDescendantEvaluation ? id : ariaControls}\n            {...restProps}\n            required={undefined}\n          />\n        </Flex>\n        {actions}\n\n        <VisuallyHiddenText id={`${id}-inputDescription`}>\n          {`${t('combobox_open_close')} `}\n        </VisuallyHiddenText>\n        <VisuallyHiddenText id={`${id}-searchDescription`}>\n          {t('combobox_search_instructions')}\n        </VisuallyHiddenText>\n      </Flex>\n    );\n  }\n);\n\nexport default MultiSelectInput;\n"],"names":["registerIcon","timesIcon","StyledSelectable","styled","button","_ref","_ref$theme","theme","_ref$theme$base","base","spacing","palette","borderRadius","_selectable$base","components","badges","selectable","foreground","background","dark","primaryBackground","interactive","displayBackground","tryCatch","mix","hoverBorder","boxShadowColor","transparentize","css","_templateObject","_taggedTemplateLiteral","StyledBareButton","StyledIcon","defaultProps","defaultThemeProp","Selectable","forwardRef","_ref2","ref","id","children","onSelect","onRemove","onClick","onKeyUp","restProps","_objectWithoutProperties","_excluded","consolidatedRef","useConsolidatedRef","t","useI18n","_jsxs","_objectSpread","e","key","_jsx","BareButton","tabIndex","preventDefault","stopPropagation","Icon","name","StyledTag","span","props","_props$theme$componen","tag","borderColor","boxShadow","shadow","focus","Tag","href","as","undefined","StyledSelectInput","div","input","height","StyledButton","StyledComboBox","StyledFormControl","_templateObject2","StyledPopover","StyledMenu","StyledMenuListWrapper","StyledMultiSelectInput","MultiSelectInput","_props$selected","selected","value","onChange","onKeyDown","onResolveSuggestion","actions","readOnly","disabled","status","placeholder","autoFocus","pauseDescendantEvaluation","onSelectedFocus","onSelectedBlur","ariaControls","useUID","inputRef","listRef","useRef","_useState","useState","_useState2","_slicedToArray","focusDescendant","setFocusDescendant","_useState3","_useState4","activeItemId","setActiveItemId","_useDirection","useDirection","start","end","uadConfig","useMemo","focusEl","current","scope","selector","orientation","focusReturnEl","clearFocusReturn","el","click","activeDescendant","useActiveDescendant","handleSelectedRemoval","useCallback","selectionId","idx","_inputRef$current","_listRef$current","length","querySelectorAll","_listRef$current2","useEffect","onInputKeyDown","_inputRef$current2","selectionStart","_listRef$current4","_listRef$current3","lastIndex","concat","cap","lastSelectableId","includes","ariaDescribedBy","Flex","forwardedAs","hasSuggestion","container","alignItems","justify","alignContent","wrap","rowGap","colGap","pad","item","grow","_inputRef$current3","_inputRef$current4","target","HTMLElement","currentTarget","contains","closest","role","map","element","toString","mouseClick","detail","text","size","autoComplete","required","VisuallyHiddenText"],"sourceRoot":""}