{"version":3,"file":"static/js/92896.75a3aae8.chunk.js","mappings":"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","sources":["utils/datetime.tsx","components/Pulse.tsx","../node_modules/@pega/cosmos-react-core/src/components/Card/CardContent.tsx","../node_modules/@pega/cosmos-react-core/src/components/Card/CardFooter.tsx","../node_modules/@pega/cosmos-react-core/src/components/Card/CardHeader.tsx","../node_modules/@pega/cosmos-react-core/src/components/Form/Form.tsx","../node_modules/@pega/cosmos-react-core/src/components/Icon/icons/check.icon.tsx","../node_modules/@pega/cosmos-react-core/src/components/SummaryList/SummaryList.tsx"],"sourcesContent":["const unitsInMs = {\n  year: 24 * 60 * 60 * 1000 * 365,\n  month: (24 * 60 * 60 * 1000 * 365) / 12,\n  day: 24 * 60 * 60 * 1000,\n  hour: 60 * 60 * 1000,\n  minute: 60 * 1000,\n  second: 1000\n};\n\ntype TimeUnit = keyof typeof unitsInMs;\n\nexport const getRelativeTime = (date: Date) => {\n  let elapsed = date.getTime() - Date.now();\n  // Deliberately reduce precision to 1 minute\n  if (Math.abs(elapsed) < 60000) elapsed = 0;\n  const unit = (Object.keys(unitsInMs).find(u => Math.abs(elapsed) >= unitsInMs[u as TimeUnit]) ||\n    'second') as TimeUnit;\n  return new Intl.RelativeTimeFormat(\n    (window as any).config && (window as any).config.locale\n      ? (window as any).config.locale.replace('_', '-')\n      : 'en',\n    {\n      style: 'long',\n      numeric: 'auto'\n    }\n  ).format(Math.round(elapsed / unitsInMs[unit]), unit);\n};\n","import { useState, useEffect } from 'react';\nimport { fetchData } from '../services';\nimport { Card, Link, Progress } from '@pega/cosmos-react-core';\nimport { Feed, FeedNewPost, FeedPost, FeedReply } from '@pega/cosmos-react-social';\nimport { getRelativeTime } from '../utils/datetime';\nimport { getOperatorName, getOperatorUrl } from '../utils/env';\nimport { getDataUrl } from '../services';\n\nexport default function Pulse() {\n  const [posts, setpost] = useState([]);\n  const [isLoaded, setPulseIsLoaded] = useState(false);\n\n  useEffect(() => {\n    fetchData(\n      'feed',\n      'filterFor=DATA-PORTAL%20$DemoReact&feedClass=@baseclass&filterBy=&pageSize=9&olderThan='\n    )\n      .then(response => {\n        if (response.data !== null && response.data.FeedList && response.data.FeedList.pxResults) {\n          setpost(response.data.FeedList.pxResults);\n        }\n        setPulseIsLoaded(true);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  const renderContent = (context: any) => {\n    if (context.pxContextType === 'case') {\n      return (\n        <Link href={`/case/${context.pyContext.split(' ')[1]}`} previewable target='_blank'>\n          {context.pyContextDescription}\n        </Link>\n      );\n    }\n    return context.pyContextDescription;\n  };\n\n  const renderReplies = (item: any) => {\n    if (item.pxResults && item.pxResults.length > 0) {\n      return item.pxResults.map((reply: any) => (\n        <FeedReply\n          id={reply.pzInsKey}\n          key={reply.pzInsKey}\n          content={reply.pyMessage}\n          info={{\n            fullname: reply.postedByUser.name,\n            fullnameLabel: reply.postedByUser.name,\n            username: reply.postedByUser.ID,\n            avatarSrc: getDataUrl('operatorimage', reply.postedByUser.userImage),\n            content: reply.pyMessage,\n            timeElapsed: getRelativeTime(new Date(reply.pxCreateDateTime))\n          }}\n          interactionInfo={{\n            likeLabel: 'Like',\n            likeCount: reply.pyLikes.pxLikeCount,\n            commentLabel: 'Comment'\n          }}\n          onLikeClick={() => {}}\n          onCommentClick={() => {}}\n        />\n      ));\n    }\n    return null;\n  };\n\n  return (\n    <Feed\n      searchTypes={['user', 'case']}\n      userInfo={{\n        username: getOperatorName(),\n        fullname: getOperatorName(),\n        avatarSrc: getDataUrl('operatorimage', getOperatorUrl())\n      }}\n      newPostRegion={\n        <FeedNewPost\n          id='newpost'\n          interactionInfo={{\n            textAreaPlaceholder: 'Start a conversation',\n            postLabel: 'Post'\n          }}\n          onFilesAdded={() => {}}\n          onPost={() => {}}\n        />\n      }\n      posts={posts.map((item: any) => (\n        <FeedPost\n          id={item.pzInsKey}\n          key={item.pzInsKey}\n          info={{\n            fullname: item.postedByUser.name,\n            username: item.postedByUser.ID,\n            avatarSrc: getDataUrl('operatorimage', item.postedByUser.userImage),\n            content: item.pyMessage,\n            postContext: renderContent(item),\n            timeElapsed: getRelativeTime(new Date(item.pyFeed.pyPostedOn))\n          }}\n          interactionInfo={{\n            likeLabel: 'Like',\n            likeCount: item.pyLikes.pxLikeCount,\n            commentLabel: 'Comment'\n          }}\n          replies={renderReplies(item)}\n          attachments={[]}\n          maxContentHeight={80}\n          onLikeClick={() => {}}\n          onUserClick={() => {}}\n          actions={[{ text: 'Bookmark', id: 'Bookmark', onClick: () => {} }]}\n          replyInput={{\n            commentLabel: 'Send Comment',\n            attachments: [],\n            onFilesAdded: () => {},\n            onSubmit: () => {},\n            placeholder: 'Add a comment'\n          }}\n        />\n      ))}\n    />\n  );\n}\n","import { FunctionComponent, PropsWithChildren, ReactNode } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../theme';\nimport { BaseProps, ForwardProps } from '../../types';\nimport Flex, { FlexProps } from '../Flex';\nimport { StyledPopover } from '../Popover';\n\nimport { StyledCard } from './Card';\nimport { StyledCardFooter } from './CardFooter';\n\nexport interface CardContentProps extends BaseProps {\n  /** The content of the Card. */\n  children: ReactNode;\n  container?: Exclude<FlexProps['container'], boolean>;\n}\n\nexport const StyledCardContent = styled.div(({ theme }) => {\n  return css`\n    ${StyledPopover} &, &:not(${StyledCard} ${StyledCard} > &) {\n      position: relative;\n      padding: calc(1.5 * ${theme.base.spacing}) calc(${theme.components.card.padding} * 2);\n\n      & + &,\n      & + ${StyledCardFooter} {\n        padding-block-start: 0;\n      }\n    }\n  `;\n});\n\nStyledCardContent.defaultProps = defaultThemeProp;\n\nconst CardContent: FunctionComponent<CardContentProps & ForwardProps> = ({\n  children,\n  container,\n  ...restProps\n}: PropsWithChildren<CardContentProps & ForwardProps>) => {\n  return (\n    <Flex {...restProps} container={{ direction: 'column', ...container }} as={StyledCardContent}>\n      {children}\n    </Flex>\n  );\n};\n\nexport default CardContent;\n","import { FunctionComponent, PropsWithChildren } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../theme';\nimport Flex, { FlexContainerProps } from '../Flex';\nimport { BaseProps, ForwardProps } from '../../types';\nimport { StyledPopover } from '../Popover';\n\nimport { StyledCard } from './Card';\n\nexport interface CardFooterProps extends BaseProps {\n  /** [justify-content](https://css-tricks.com/almanac/properties/j/justify-content/) */\n  justify?: FlexContainerProps['justify'];\n}\n\nexport const StyledCardFooter = styled.footer(({ theme }) => {\n  return css`\n    ${StyledPopover} &, &:not(${StyledCard} ${StyledCard} > &) {\n      padding: calc(1.5 * ${theme.base.spacing}) calc(${theme.components.card.padding} * 2);\n    }\n  `;\n});\n\nStyledCardFooter.defaultProps = defaultThemeProp;\n\nconst CardFooter: FunctionComponent<CardFooterProps & ForwardProps> = (\n  props: PropsWithChildren<CardFooterProps>\n) => {\n  const { children, justify, ...restProps } = props;\n\n  return (\n    <Flex\n      as={StyledCardFooter}\n      container={{\n        wrap: 'wrap',\n        alignItems: 'center',\n        justify\n      }}\n      {...restProps}\n    >\n      {children}\n    </Flex>\n  );\n};\n\nexport default CardFooter;\n","import { forwardRef, FunctionComponent, PropsWithChildren, ReactNode, Ref } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../theme';\nimport Flex from '../Flex';\nimport { BaseProps, ForwardProps } from '../../types';\nimport { StyledPopover } from '../Popover';\n\nimport { StyledCard } from './Card';\nimport { StyledCardContent } from './CardContent';\n\nexport interface CardHeaderProps extends BaseProps {\n  /** The Card header content. */\n  children: ReactNode;\n  /** Action Buttons that will render within the header. */\n  actions?: ReactNode;\n  /** Ref for the wrapping element. */\n  ref?: Ref<HTMLDivElement>;\n}\n\nexport const StyledCardHeader = styled.header<CardHeaderProps>(({ theme, onClick }) => {\n  return css`\n    ${StyledPopover} &, &:not(${StyledCard} ${StyledCard} > &) {\n      padding: calc(1.5 * ${theme.base.spacing}) calc(${theme.components.card.padding} * 2);\n\n      + ${StyledCardContent} {\n        padding-block-start: 0;\n      }\n\n      &:hover {\n        ${onClick ? 'cursor: pointer;' : undefined}\n      }\n    }\n  `;\n});\n\nStyledCardHeader.defaultProps = defaultThemeProp;\n\nconst CardHeader: FunctionComponent<CardHeaderProps & ForwardProps> = forwardRef(\n  (\n    { children, actions, ...restProps }: PropsWithChildren<CardHeaderProps>,\n    ref: CardHeaderProps['ref']\n  ) => {\n    return (\n      <Flex\n        container={{ alignItems: 'center', justify: 'between' }}\n        as={StyledCardHeader}\n        {...restProps}\n        ref={ref}\n      >\n        {actions ? (\n          <>\n            <Flex container={{ alignItems: 'center' }} item={{ grow: 1 }}>\n              {children}\n            </Flex>\n            <div>{actions}</div>\n          </>\n        ) : (\n          children\n        )}\n      </Flex>\n    );\n  }\n);\n\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;\n","import { forwardRef, FC, ReactNode, Ref, PropsWithoutRef } from 'react';\nimport styled from 'styled-components';\n\nimport { useUID } from '../../hooks';\nimport { BaseProps, ForwardProps } from '../../types';\nimport Flex from '../Flex';\nimport Text from '../Text';\n\nexport interface FormProps extends BaseProps {\n  /** The Form content. Recommended composing form elements within a layout template such as Grid or Flex as the only child. */\n  children: ReactNode;\n  /** Region for Form Actions. */\n  actions?: ReactNode;\n  /** The heading of the form. */\n  heading?: string;\n  /** A description of the form to be displayed above the controls. */\n  description?: string;\n  /** Region for Banners above the Form. */\n  banners?: ReactNode;\n  /** Ref forwarded to the wrapping element. */\n  ref?: Ref<HTMLFormElement>;\n}\n\nexport const StyledForm = styled.form``;\nexport const StyledFormContent = styled.div``;\n\nconst Form: FC<FormProps & ForwardProps> = forwardRef(\n  (props: PropsWithoutRef<FormProps>, ref: FormProps['ref']) => {\n    const { children, actions, heading, description, banners, ...restProps } = props;\n\n    const uid = useUID();\n\n    return (\n      <Flex\n        container={{ direction: 'column', gap: 3 }}\n        as={StyledForm}\n        ref={ref}\n        {...restProps}\n        aria-labelledby={heading ? `${uid}-heading` : undefined}\n        aria-describedby={description ? `${uid}-description` : undefined}\n      >\n        {banners}\n        {(heading || description) && (\n          <Flex container={{ direction: 'column', gap: 1 }}>\n            {heading && (\n              <Text id={`${uid}-heading`} variant='h3'>\n                {heading}\n              </Text>\n            )}\n            {description && (\n              <Text id={`${uid}-description`} as='p'>\n                {description}\n              </Text>\n            )}\n          </Flex>\n        )}\n        <Flex as={StyledFormContent} container={{ direction: 'column', gap: 3 }}>\n          {children}\n        </Flex>\n\n        {actions && <Flex container={{ justify: 'between', alignItems: 'center' }}>{actions}</Flex>}\n      </Flex>\n    );\n  }\n);\n\nexport default Form;\n","// This file is autogenerated. Any changes will be overwritten.\nexport const name = 'check';\n\nexport const Component = () => (\n  <path d='M3.5328125,10.8960938 C3.5328125,10.8960938 10.0460938,17.3617188 10.0460938,17.3617188 C10.0460938,17.3617188 22.4984375,4 22.4984375,4 C22.4984375,4 23.9828125,5.484375 23.9828125,5.484375 C23.9828125,5.484375 10.09375,20.2351562 10.09375,20.2351562 C10.09375,20.2351562 2,12.3804687 2,12.3804687 C2,12.3804687 3.5328125,10.8960937 3.5328125,10.8960937 L3.5328125,10.8960938 Z' />\n);\n\nexport const viewBox = '0 0 25 25';\n","import { forwardRef, PropsWithoutRef, Ref, FC, useMemo } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport Actions from '../Actions';\nimport Flex from '../Flex';\nimport Text from '../Text';\nimport Count from '../Badges/Count';\nimport Icon from '../Icon';\nimport Card, { CardHeader, CardContent, CardFooter } from '../Card';\nimport EmptyState, { EmptyStateProps } from '../EmptyState';\nimport { ForwardProps, NoChildrenProp, OmitStrict, Action } from '../../types';\nimport { omitProps } from '../../styles';\nimport { useI18n } from '../../hooks';\nimport { defaultThemeProp } from '../../theme';\nimport SummaryItem, { SummaryItemProps } from '../SummaryItem';\nimport Progress from '../Progress';\nimport Button from '../Button';\nimport ErrorState from '../ErrorState';\nimport type { ErrorStateProps } from '../ErrorState';\n\nexport interface SummaryListProps extends NoChildrenProp {\n  /** Name of the utility to be used as its heading along with associated actions and aria attributes. */\n  name?: string;\n  /** Identifier for the icon within Pega icons.  */\n  icon?: string;\n  /** Integer representing the total count of items for a list utility dataset. */\n  count?: number;\n  /** Top level actions for the utility. If more than one action is passed a consolidated ActionMenu will be generated. */\n  actions?: Action[];\n  /** If the utility is in a state of fetching data. */\n  loading?: boolean | string;\n  /** An array of SummaryListItem objects to render. Pass an appropriately limited length array with a desired sort order based on design system defaults or config. */\n  items: SummaryListItem[];\n  /** User click initiated callback for when to show view all modal. List lengths less than the count prop will display a \"View all\" button with this function is bound to. */\n  onViewAll?: (callback: Function) => void;\n  /** A simple message to display when there are no items. */\n  noItemsText?: EmptyStateProps['message'];\n  /**\n   * Indicate an error occurred while acquiring data for the list.\n   * The default error state may be overridden with custom props.\n   */\n  error?: boolean | ErrorStateProps;\n  /** Ref for the SummaryList's root element.  */\n  ref?: Ref<HTMLElement>;\n}\n\nexport interface SummaryListItem extends OmitStrict<SummaryItemProps, 'actions'>, ForwardProps {\n  /** A unique id to represent the item. */\n  id: string;\n  /** A set of Actions to render alongside the item. If more than one action is passed a consolidated ActionMenu will be generated. */\n  actions?: Action[];\n}\n\nexport const StyledSummaryListContent = styled(CardContent).withConfig<{ loading?: boolean }>(\n  omitProps('loading')\n)(\n  ({ theme, loading }) => css`\n    ${loading &&\n    css`\n      min-height: 4rem;\n    `}\n\n    &:not(:last-child) > ul > li:last-child {\n      border-bottom: 0.0625rem solid ${theme.base.palette['border-line']};\n    }\n  `\n);\n\nStyledSummaryListContent.defaultProps = defaultThemeProp;\n\nexport const StyledSummaryListItem: typeof SummaryItem = styled(SummaryItem)(\n  ({ theme }) =>\n    css`\n      padding: ${theme.base.spacing} 0;\n\n      &:not(:last-child) {\n        border-bottom: 0.0625rem solid ${theme.base.palette['border-line']};\n      }\n    `\n);\n\nStyledSummaryListItem.defaultProps = defaultThemeProp;\n\nexport const SummaryListItems = ({ items }: Pick<SummaryListProps, 'items'>) => {\n  return (\n    <ul>\n      {items.map(({ id, actions: itemActions, ...restItemProps }) => {\n        return (\n          <StyledSummaryListItem\n            key={id}\n            {...restItemProps}\n            forwardedAs='li'\n            actions={itemActions && <Actions items={itemActions} />}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nconst SummaryList: FC<SummaryListProps & ForwardProps> = forwardRef(\n  (\n    {\n      icon,\n      name,\n      count,\n      actions,\n      items,\n      onViewAll,\n      loading,\n      noItemsText,\n      error,\n      ...restProps\n    }: PropsWithoutRef<SummaryListProps>,\n    ref: SummaryListProps['ref']\n  ) => {\n    const t = useI18n();\n\n    const content = useMemo(() => {\n      if (loading) {\n        return (\n          <Progress placement='local' message={typeof loading === 'string' ? loading : undefined} />\n        );\n      }\n\n      if (error) {\n        return <ErrorState {...(error === true ? {} : error)} />;\n      }\n\n      return items.length > 0 ? (\n        <SummaryListItems items={items} />\n      ) : (\n        <EmptyState message={noItemsText} />\n      );\n    }, [loading, items, noItemsText, error]);\n\n    return (\n      <Card ref={ref} {...restProps}>\n        {(icon || name || typeof count === 'number' || actions) && (\n          <CardHeader>\n            <Flex container={{ alignItems: 'center', gap: 1 }}>\n              {icon && <Icon name={icon} />}\n              {name && <Text variant='h2'>{name}</Text>}\n              {typeof count === 'number' && <Count>{count}</Count>}\n            </Flex>\n            {actions && <Actions items={actions} />}\n          </CardHeader>\n        )}\n\n        <StyledSummaryListContent loading={loading}>{content}</StyledSummaryListContent>\n\n        {!error && typeof count === 'number' && count > items.length && onViewAll && (\n          <CardFooter justify='center'>\n            <Button\n              variant='link'\n              aria-label={name ? t('view_all_noun', [name.toLowerCase()]) : t('view_all')}\n              onClick={onViewAll}\n            >\n              {t('view_all')}\n            </Button>\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n);\n\nexport default SummaryList;\n"],"names":["unitsInMs","year","month","day","hour","minute","second","getRelativeTime","date","elapsed","getTime","Date","now","Math","abs","unit","Object","keys","find","u","Intl","RelativeTimeFormat","window","config","locale","replace","style","numeric","format","round","Pulse","useState","posts","setpost","setPulseIsLoaded","useEffect","fetchData","then","response","data","FeedList","pxResults","catch","error","console","log","renderReplies","item","length","map","reply","FeedReply","id","pzInsKey","content","pyMessage","info","fullname","postedByUser","name","fullnameLabel","username","ID","avatarSrc","getDataUrl","userImage","timeElapsed","pxCreateDateTime","interactionInfo","likeLabel","likeCount","pyLikes","pxLikeCount","commentLabel","onLikeClick","onCommentClick","Feed","searchTypes","userInfo","getOperatorName","getOperatorUrl","newPostRegion","FeedNewPost","textAreaPlaceholder","postLabel","onFilesAdded","onPost","FeedPost","postContext","context","pxContextType","Link","href","pyContext","split","previewable","target","pyContextDescription","pyFeed","pyPostedOn","replies","attachments","maxContentHeight","onUserClick","actions","text","onClick","replyInput","onSubmit","placeholder","StyledCardContent","theme","base","spacing","components","card","padding","defaultProps","children","container","restProps","direction","as","StyledCardFooter","props","justify","wrap","alignItems","StyledCardHeader","undefined","CardHeader","forwardRef","ref","grow","displayName","StyledForm","StyledFormContent","Form","heading","description","banners","uid","gap","variant","Component","d","viewBox","StyledSummaryListContent","withConfig","loading","palette","StyledSummaryListItem","SummaryListItems","items","itemActions","restItemProps","forwardedAs","SummaryList","icon","count","onViewAll","noItemsText","t","useMemo","placement","message","toLowerCase"],"sourceRoot":""}