{"version":3,"file":"static/js/65531.59f1f6e5.chunk.js","mappings":"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","sources":["utils/form.tsx","pages/CaseView.tsx","components|lazy|/^/.//.*$/|groupOptions: {}|namespace object"],"sourcesContent":["/**\n * always make sure that the return value is a string with 2 digits - prepend 0 in front\n */\nexport const pad2char = (v: any) => `0${v}`.slice(-2);\nexport const pad4char = (v: any) => `0${v}`.slice(-4);\n\n/**\n * escape and unescape the HTML entities\n */\nexport const escapeHTML = (str: string) => {\n  if (!str || typeof str !== 'string') return '';\n  return str.replace(\n    /[&<>'\"]/g,\n    tag =>\n      ({\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        \"'\": '&#39;',\n        '(': '&#40;',\n        ')': '&#41;',\n        '\"': '&quot;'\n      }[tag] || tag)\n  );\n};\n\n/**\n * set the value of a property in an object content targeted by the path like 'props(1).pyLabel'\n */\nexport const setObjectFromRef = (content: any, path: string, value: any) => {\n  if (typeof path !== 'string') {\n    return;\n  }\n  const keys = path.split('.');\n  let retObj = content;\n  for (let i = 0; i < keys.length; i++) {\n    let el = keys[i];\n    const startParens = el.indexOf('(');\n    if (startParens === -1) {\n      // regular property - just add it to retObj\n      if (i < keys.length - 1) {\n        if (typeof retObj[el] === 'undefined') {\n          retObj[el] = {};\n        }\n      } else {\n        retObj[el] = value;\n      }\n      retObj = retObj[el];\n    } else {\n      const idx = parseInt(el.substring(startParens + 1, el.length - 1));\n      el = el.substring(0, startParens);\n      if (typeof retObj[el] === 'undefined') {\n        retObj[el] = [];\n      }\n      for (let j = retObj[el].length; j < idx; j++) {\n        retObj[el].push({});\n      }\n      retObj = retObj[el][idx - 1];\n    }\n  }\n};\n\n/**\n * get the value targeted by path - path can be a complex string like 'props(1).pyLabel'\n * Note that path is using 1 as the starting index\n */\nexport const getValue = (obj: any, path: string) => {\n  if (typeof path !== 'string') {\n    return null;\n  }\n  let retObj = obj;\n  const keys = path.split('.');\n  for (const i in keys) {\n    const key = keys[i];\n    const startParens = key.indexOf('(');\n    if (startParens === -1) {\n      if (typeof retObj[key] !== 'undefined') {\n        retObj = retObj[key];\n      } else {\n        return null;\n      }\n    } else {\n      const idx = parseInt(key.substring(startParens + 1, key.length - 1), 10);\n      const el = retObj[key.substring(0, startParens)];\n      if (el && Array.isArray(el) && el.length >= idx) {\n        retObj = el[idx - 1];\n      } else {\n        return null;\n      }\n    }\n  }\n  return retObj;\n};\n\n/**\n * set the content and pageinstructions used to post body update\n */\nexport const setBodyContent = (\n  content: any,\n  path: string,\n  pageinstructions: any,\n  casedata: any,\n  value: any\n) => {\n  if (typeof path !== 'string') {\n    return;\n  }\n  // If no change, just return\n  if (casedata) {\n    const origVal = getValue(casedata, path);\n    // eslint-disable-next-line eqeqeq\n    if (origVal === value || `${origVal}` === `${value}` || (origVal === null && value === ''))\n      return;\n  }\n  const propPath = path.lastIndexOf('.');\n  if (propPath === -1) {\n    content[path] = value;\n    return;\n  }\n  if (!pageinstructions) {\n    setObjectFromRef(content, path, value);\n    return;\n  }\n  const data: any = {};\n  let target = path.substring(0, propPath);\n  data[path.substring(propPath + 1)] = value;\n  const startParens = target.indexOf('(');\n  if (startParens === -1) {\n    pageinstructions.push({\n      instruction: 'UPDATE',\n      target,\n      content: data\n    });\n  } else {\n    const idx = target.substring(startParens + 1, target.length - 1);\n    target = target.substring(0, startParens);\n    pageinstructions.push({\n      instruction: 'UPDATE',\n      target,\n      listIndex: parseInt(idx, 10),\n      content: data\n    });\n  }\n};\n\n/**\n * Retrieve the values of all the form controls in the form and populate them in the content object\n */\nexport const getFormData = (form: any, content: any, pageinstructions: any, casedata: any) => {\n  for (const el of form.elements) {\n    if (el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT') {\n      const ref = el.getAttribute('data-ref');\n      if (ref !== null && ref !== 'pyID') {\n        if (el.tagName === 'INPUT') {\n          const type = el.getAttribute('type');\n          if (type === 'checkbox') {\n            setBodyContent(content, ref, pageinstructions, casedata, el.checked);\n          } else if (type === 'radio') {\n            if (el.checked) {\n              setBodyContent(content, ref, pageinstructions, casedata, el.value);\n            }\n          } else if (type === 'tel') {\n            let value = el.value;\n            if (\n              el.parentNode.firstElementChild.tagName === 'SELECT' &&\n              el.parentNode.firstElementChild.className === 'field-countrycode'\n            ) {\n              value = el.parentNode.firstElementChild.value + value;\n            }\n            setBodyContent(content, ref, pageinstructions, casedata, value);\n          } else if (type === 'date') {\n            let dt;\n            if (el.valueAsDate) {\n              dt = new Date(el.valueAsDate);\n            }\n            // eslint-disable-next-line no-self-compare\n            if (!dt || !(dt instanceof Date) || dt.getTime() !== dt.getTime()) {\n              dt = new Date(el.value);\n            }\n            // eslint-disable-next-line no-self-compare\n            if (dt && dt instanceof Date && dt.getTime() === dt.getTime()) {\n              dt = new Date(dt.getTime() + dt.getTimezoneOffset() * 60000);\n              setBodyContent(\n                content,\n                ref,\n                pageinstructions,\n                casedata,\n                `${pad2char(dt.getMonth() + 1)}/${pad2char(dt.getDate())}/${dt.getFullYear()}`\n              );\n            } else {\n              setBodyContent(content, ref, pageinstructions, casedata, el.value);\n            }\n          } else {\n            setBodyContent(content, ref, pageinstructions, casedata, el.value);\n          }\n        } else {\n          setBodyContent(content, ref, pageinstructions, casedata, el.value);\n        }\n      }\n    }\n  }\n  if (form && form.querySelectorAll) {\n    const editableElems = form.querySelectorAll('[contenteditable]');\n    for (let i = 0; i < editableElems.length; i++) {\n      const el = editableElems[i];\n      const ref = el.getAttribute('data-ref');\n      setBodyContent(content, ref, pageinstructions, casedata, escapeHTML(el.innerHTML));\n    }\n  }\n};\n","import { Suspense, lazy, useEffect, useState, useCallback, FormEvent } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Avatar,\n  Progress,\n  Icon,\n  EmptyState,\n  MetaList,\n  Text,\n  Button,\n  Form\n} from '@pega/cosmos-react-core';\nimport {\n  CaseView as CaseViewComp,\n  CaseSummaryFields,\n  Tasks,\n  Stages\n} from '@pega/cosmos-react-work';\nimport { fetchData, sendData } from '../services';\nimport { getCaseTypeClass } from '../utils/env';\nimport { getField, renderDisplayFieldLabel, renderDisplayFieldValue } from '../utils/field';\nimport { getDataUrl } from '../services';\nimport { renderView } from '../utils/renderer';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport { getFormData } from '../utils/form';\n\nexport default function CaseViewPage() {\n  const { casetypeid, caseid } = useParams() as any;\n  const [isLoaded, setCaseIsLoaded] = useState(false);\n  const [caseObj, setCaseObj] = useState<any>();\n  const [isLimited, setIsLimited] = useState(true);\n  const [assignmentID, setAssignmentID] = useState('');\n  const [stepName, setStepName] = useState('');\n  const [currentTabId, setCurrentTabId] = useState('tab-0');\n  const [utilities, setUtilities] = useState([]);\n  const [utilitiesSummaries, setUtilitiesSummaries] = useState([]);\n  const [UtilitySummaryCtx, setUtilitySummaryCtx] = useState<any>({});\n  const [formField, setformField] = useState<any>();\n\n  useEffect(() => {\n    let isMounted = true;\n    if (assignmentID !== '') {\n      fetchData('assignments', assignmentID).then(response => {\n        if (isMounted) {\n          if (response.uiResources) {\n            const name = response.uiResources.root.config.name;\n            setStepName(response.data.caseInfo.content.pyViewName);\n            setformField(\n              <ErrorBoundary>\n                {renderView(response.uiResources.resources.views[name], false, '', response)}\n              </ErrorBoundary>\n            );\n          }\n        }\n      });\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [assignmentID]);\n\n  const RenderAssignment = ({\n    onSubmit,\n    onCancel\n  }: {\n    onSubmit: (e: FormEvent) => void;\n    onCancel: () => void;\n  }) => {\n    return (\n      <Form\n        actions={\n          <>\n            <Button onClick={onCancel}>Cancel</Button>\n            <Button variant='primary' onClick={onSubmit}>\n              Submit\n            </Button>\n          </>\n        }\n      >\n        {formField}\n      </Form>\n    );\n  };\n\n  const getCaseViewRegion = useCallback(\n    (name: string) => {\n      if (!caseObj || !caseObj.uiResources.resources.views.pyDetails) return [];\n      for (const item of caseObj.uiResources.resources.views.pyDetails.children) {\n        if (item.name === name) return item;\n      }\n      return [];\n    },\n    [caseObj]\n  );\n\n  useEffect(() => {\n    if (!caseObj) return;\n    const utilities = getCaseViewRegion('Utilities');\n    setUtilities(\n      utilities.children.map((item: any, i: number) => {\n        try {\n          const Utility = lazy(() =>\n            import(`../components/${item.type}`).catch((err: string) => {\n              console.error('An error has occured', err);\n            })\n          );\n          return (\n            <Suspense key={`utility-${i}`} fallback={<Progress placement='local' />}>\n              <Utility\n                caseid={caseid}\n                casetypeid={casetypeid}\n                utilityCtx={setUtilitySummaryDetails}\n              />\n            </Suspense>\n          );\n        } catch (e) {\n          return <div key={`utility-${i}`}>Utility {item.type} not found</div>;\n        }\n      })\n    );\n  }, [caseObj, caseid, casetypeid, getCaseViewRegion]);\n\n  useEffect(() => {\n    let caseKey = `${getCaseTypeClass(casetypeid).toUpperCase()}%20${caseid.toUpperCase()}`;\n    caseKey = caseKey.replace(`-${casetypeid.toUpperCase()}%20`, '%20');\n    fetchData('caseview', caseKey).then(response => {\n      setCaseObj(response);\n      setCaseIsLoaded(true);\n    });\n  }, [caseid, casetypeid]);\n\n  const setUtilitySummaryDetails = (widget: any, value: any) => {\n    setUtilitySummaryCtx((prevState: any) => {\n      if (prevState[widget] && prevState[widget].count === value.count) return prevState;\n      return { ...prevState, [widget]: value };\n    });\n  };\n\n  useEffect(() => {\n    if (!caseObj) return;\n    const utilities = getCaseViewRegion('Utilities');\n    setUtilitiesSummaries(\n      utilities.children.reduce((result: any, child: any) => {\n        const label: string = child.type;\n        if (label && UtilitySummaryCtx[label]) {\n          result.push(UtilitySummaryCtx[label]);\n        }\n        return result;\n      }, [])\n    );\n  }, [UtilitySummaryCtx, caseObj, getCaseViewRegion]);\n\n  const renderTasklist = () => {\n    return caseObj.data.caseInfo.assignments\n      .filter((item: any, i: number) => {\n        return !isLimited || i < 3;\n      })\n      .map((item: any, i: number) => {\n        return {\n          avatar: (\n            <Avatar\n              name={item.assigneeInfo.name}\n              imageSrc={getDataUrl('operatorimage', item.assigneeInfo.image)}\n            />\n          ),\n          name: item.name,\n          meta: (\n            <MetaList\n              items={[\n                <Text variant='secondary'>Task in {caseid}</Text>,\n                <Text variant='secondary'>Urgency {item.urgency}</Text>\n              ]}\n            />\n          ),\n          actions: (\n            <Button\n              variant='primary'\n              onClick={() => {\n                setAssignmentID(item.links.open.href);\n              }}\n            >\n              Go\n            </Button>\n          ),\n          content:\n            assignmentID !== '' ? (\n              <RenderAssignment\n                onSubmit={(e: FormEvent) => {\n                  const content = {};\n                  const pageInstructions: any = [];\n                  getFormData(\n                    (e.target as Element).closest('form'),\n                    content,\n                    pageInstructions,\n                    caseObj.data.caseInfo.content\n                  );\n                  sendData(\n                    'assignments',\n                    assignmentID.substring(1) + '/actions/' + stepName,\n                    JSON.stringify({\n                      content,\n                      pageInstructions\n                    })\n                  ).then(response => {\n                    if (response.uiResources) {\n                      const name = response.uiResources.root.config.name;\n                      setformField(\n                        <ErrorBoundary>\n                          {renderView(\n                            response.uiResources.resources.views[name],\n                            false,\n                            '',\n                            response\n                          )}\n                        </ErrorBoundary>\n                      );\n                      setCaseObj((prevState: any) => {\n                        return { ...prevState, data: response.data };\n                      });\n                    }\n                  });\n                  setAssignmentID('');\n                }}\n                onCancel={() => {\n                  setAssignmentID('');\n                }}\n              />\n            ) : null\n        };\n      });\n  };\n\n  const getAssignments = () => {\n    if (!caseObj.data.caseInfo.assignments) return null;\n    return (\n      <Tasks\n        headerText='Tasks'\n        count={caseObj.data.caseInfo.assignments.length}\n        items={renderTasklist()}\n        emptyPlaceholder={<EmptyState />}\n        onExpandToggle={() => {\n          setIsLimited(cur => !cur);\n        }}\n      />\n    );\n  };\n\n  const getStages = () => {\n    const stagelist = caseObj.data.caseInfo.stages;\n    return stagelist.map((item: any) => {\n      return {\n        name: item.name,\n        id: `stage-${item.name}`,\n        complete: item.visited_status === 'completed'\n      };\n    });\n  };\n\n  const renderStages = () => {\n    return (\n      <Stages\n        stages={getStages()}\n        current={`stage-${caseObj.data.caseInfo.stageLabel}`}\n        caseTitle='Stages'\n      />\n    );\n  };\n\n  const getActions = () => {\n    const actionlist = caseObj.data.caseInfo.availableActions;\n    return actionlist.map((item: any, i: number) => {\n      return {\n        text: item.name,\n        id: `action-${i}`,\n        onClick: () => {}\n      };\n    });\n  };\n\n  const getTabItems = () => {\n    const tabs = getCaseViewRegion('Tabs');\n    return tabs.children.map((item: any, i: number) => {\n      let tabname = item.config.label;\n      if (!tabname && item.config.inheritedProps && item.config.inheritedProps.length > 0) {\n        tabname = item.config.inheritedProps[0];\n      }\n      tabname = typeof tabname === 'string' ? tabname.replace('@L ', '') : '';\n      return {\n        name: tabname,\n        id: `tab-${i}`\n      };\n    });\n  };\n\n  const getCaseTabs = () => {\n    return {\n      items: getTabItems(),\n      currentTabId: currentTabId,\n      onClick: (id: string) => setCurrentTabId(id)\n    };\n  };\n\n  const getSummaryFields = (index: number) => {\n    return caseObj.uiResources.resources.views.pyCaseSummary.children[index].children.map(\n      (item: any, i: number) => {\n        getField(caseObj, item);\n        return {\n          id: `p-${i}`,\n          name: renderDisplayFieldLabel(item),\n          value: renderDisplayFieldValue(item)\n        };\n      }\n    );\n  };\n\n  if (!isLoaded) {\n    return <Progress placement='global' />;\n  }\n\n  return (\n    <CaseViewComp\n      caseId={caseid}\n      heading={caseObj ? caseObj.data.caseInfo.content.pyLabel : ''}\n      icon={<Icon name='polaris-solid' />}\n      followed={false}\n      onFollowedChange={() => {}}\n      onEdit={() => {}}\n      summary={\n        <CaseSummaryFields\n          primaryFields={getSummaryFields(0)}\n          secondaryFields={getSummaryFields(1)}\n        />\n      }\n      tabs={getCaseTabs()}\n      tasks={getAssignments()}\n      stages={renderStages()}\n      actions={getActions()}\n      utilities={utilities}\n      utilitiesSummaryItems={utilitiesSummaries}\n    />\n  );\n}\n","var map = {\n\t\"./ErrorBoundary\": [\n\t\t86348\n\t],\n\t\"./ErrorBoundary.tsx\": [\n\t\t86348\n\t],\n\t\"./FileUtility\": [\n\t\t39872,\n\t\t39872\n\t],\n\t\"./FileUtility.tsx\": [\n\t\t39872,\n\t\t39872\n\t],\n\t\"./Followers\": [\n\t\t68497,\n\t\t68497\n\t],\n\t\"./Followers.tsx\": [\n\t\t68497,\n\t\t68497\n\t],\n\t\"./Pulse\": [\n\t\t89156,\n\t\t35302,\n\t\t89156\n\t],\n\t\"./Pulse.tsx\": [\n\t\t89156,\n\t\t35302,\n\t\t89156\n\t],\n\t\"./RelatedCases\": [\n\t\t71029,\n\t\t71029\n\t],\n\t\"./RelatedCases.tsx\": [\n\t\t71029,\n\t\t71029\n\t],\n\t\"./Stakeholders\": [\n\t\t95751,\n\t\t16205,\n\t\t55868,\n\t\t95751\n\t],\n\t\"./Stakeholders.tsx\": [\n\t\t95751,\n\t\t16205,\n\t\t55868,\n\t\t95751\n\t],\n\t\"./Tags\": [\n\t\t94634,\n\t\t94634\n\t],\n\t\"./Tags.tsx\": [\n\t\t94634,\n\t\t94634\n\t],\n\t\"./Worklist\": [\n\t\t41903,\n\t\t55278\n\t],\n\t\"./Worklist.tsx\": [\n\t\t41903,\n\t\t55278\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 61413;\nmodule.exports = webpackAsyncContext;"],"names":["pad2char","v","slice","setBodyContent","content","path","pageinstructions","casedata","value","origVal","obj","retObj","keys","split","i","key","startParens","indexOf","idx","parseInt","substring","length","el","Array","isArray","getValue","propPath","lastIndexOf","data","target","push","instruction","listIndex","j","setObjectFromRef","CaseViewPage","useParams","casetypeid","caseid","useState","isLoaded","setCaseIsLoaded","caseObj","setCaseObj","isLimited","setIsLimited","assignmentID","setAssignmentID","stepName","setStepName","currentTabId","setCurrentTabId","utilities","setUtilities","utilitiesSummaries","setUtilitiesSummaries","UtilitySummaryCtx","setUtilitySummaryCtx","formField","setformField","useEffect","isMounted","fetchData","then","response","uiResources","name","root","config","caseInfo","pyViewName","ErrorBoundary","renderView","resources","views","RenderAssignment","onSubmit","onCancel","Form","actions","Button","onClick","variant","getCaseViewRegion","useCallback","pyDetails","children","item","map","Utility","lazy","type","catch","err","console","error","Suspense","fallback","Progress","placement","utilityCtx","setUtilitySummaryDetails","e","caseKey","getCaseTypeClass","toUpperCase","replace","widget","prevState","count","reduce","result","child","label","renderTasklist","assignments","filter","avatar","Avatar","assigneeInfo","imageSrc","getDataUrl","image","meta","MetaList","items","Text","urgency","links","open","href","pageInstructions","form","str","elements","tagName","ref","getAttribute","checked","parentNode","firstElementChild","className","dt","valueAsDate","Date","getTime","getTimezoneOffset","getMonth","getDate","getFullYear","querySelectorAll","editableElems","innerHTML","tag","getFormData","closest","sendData","JSON","stringify","getSummaryFields","index","pyCaseSummary","getField","id","renderDisplayFieldLabel","renderDisplayFieldValue","CaseView","caseId","heading","pyLabel","icon","Icon","followed","onFollowedChange","onEdit","summary","CaseSummaryFields","primaryFields","secondaryFields","tabs","tabname","inheritedProps","tasks","Tasks","headerText","emptyPlaceholder","EmptyState","onExpandToggle","cur","stages","Stages","complete","visited_status","current","stageLabel","caseTitle","availableActions","text","utilitiesSummaryItems","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","Error","code","ids","all","Object","module","exports"],"sourceRoot":""}