{"version":3,"file":"static/js/92896.cfee75b6.chunk.js","mappings":"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","sources":["utils/datetime.tsx","components/Pulse.tsx","../node_modules/@pega/cosmos-react-core/src/components/Card/CardContent.tsx","../node_modules/@pega/cosmos-react-core/src/components/Card/CardFooter.tsx","../node_modules/@pega/cosmos-react-core/src/components/Card/CardHeader.tsx","../node_modules/@pega/cosmos-react-core/src/components/Form/Form.tsx","../node_modules/@pega/cosmos-react-core/src/components/Icon/icons/check.icon.tsx","../node_modules/@pega/cosmos-react-core/src/components/SummaryList/SummaryList.tsx"],"sourcesContent":["const unitsInMs = {\n  year: 24 * 60 * 60 * 1000 * 365,\n  month: (24 * 60 * 60 * 1000 * 365) / 12,\n  day: 24 * 60 * 60 * 1000,\n  hour: 60 * 60 * 1000,\n  minute: 60 * 1000,\n  second: 1000\n};\n\ntype TimeUnit = keyof typeof unitsInMs;\n\nexport const getRelativeTime = (date: Date) => {\n  let elapsed = date.getTime() - Date.now();\n  // Deliberately reduce precision to 1 minute\n  if (Math.abs(elapsed) < 60000) elapsed = 0;\n  const unit = (Object.keys(unitsInMs).find(u => Math.abs(elapsed) >= unitsInMs[u as TimeUnit]) ||\n    'second') as TimeUnit;\n  return new Intl.RelativeTimeFormat(\n    (window as any).config && (window as any).config.locale\n      ? (window as any).config.locale.replace('_', '-')\n      : 'en',\n    {\n      style: 'long',\n      numeric: 'auto'\n    }\n  ).format(Math.round(elapsed / unitsInMs[unit]), unit);\n};\n","import { useState, useEffect } from 'react';\nimport { fetchData } from '../services';\nimport { Link } from '@pega/cosmos-react-core';\nimport { Feed, FeedNewPost, FeedPost, FeedReply } from '@pega/cosmos-react-social';\nimport { getRelativeTime } from '../utils/datetime';\nimport { getOperatorName, getOperatorUrl } from '../utils/env';\nimport { getDataUrl } from '../services';\n\nexport default function Pulse() {\n  const [posts, setpost] = useState([]);\n  const [, setPulseIsLoaded] = useState(false);\n\n  useEffect(() => {\n    fetchData(\n      'feed',\n      'filterFor=DATA-PORTAL%20$DemoReact&feedClass=@baseclass&filterBy=&pageSize=9&olderThan='\n    )\n      .then(response => {\n        if (response.data !== null && response.data.FeedList && response.data.FeedList.pxResults) {\n          setpost(response.data.FeedList.pxResults);\n        }\n        setPulseIsLoaded(true);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  const renderContent = (context: any) => {\n    if (context.pxContextType === 'case') {\n      return (\n        <Link href={`/case/${context.pyContext.split(' ')[1]}`} previewable target='_blank'>\n          {context.pyContextDescription}\n        </Link>\n      );\n    }\n    return context.pyContextDescription;\n  };\n\n  const renderReplies = (item: any) => {\n    if (item.pxResults && item.pxResults.length > 0) {\n      return item.pxResults.map((reply: any) => (\n        <FeedReply\n          id={reply.pzInsKey}\n          key={reply.pzInsKey}\n          content={reply.pyMessage}\n          info={{\n            fullname: reply.postedByUser.name,\n            fullnameLabel: reply.postedByUser.name,\n            username: reply.postedByUser.ID,\n            avatarSrc: getDataUrl('operatorimage', reply.postedByUser.userImage),\n            content: reply.pyMessage,\n            timeElapsed: getRelativeTime(new Date(reply.pxCreateDateTime))\n          }}\n          interactionInfo={{\n            likeLabel: 'Like',\n            likeCount: reply.pyLikes.pxLikeCount,\n            commentLabel: 'Comment'\n          }}\n          onLikeClick={() => {}}\n          onCommentClick={() => {}}\n        />\n      ));\n    }\n    return null;\n  };\n\n  return (\n    <Feed\n      searchTypes={['user', 'case']}\n      userInfo={{\n        username: getOperatorName(),\n        fullname: getOperatorName(),\n        avatarSrc: getDataUrl('operatorimage', getOperatorUrl())\n      }}\n      newPostRegion={\n        <FeedNewPost\n          id='newpost'\n          interactionInfo={{\n            textAreaPlaceholder: 'Start a conversation',\n            postLabel: 'Post'\n          }}\n          onFilesAdded={() => {}}\n          onPost={() => {}}\n        />\n      }\n      posts={posts.map((item: any) => (\n        <FeedPost\n          id={item.pzInsKey}\n          key={item.pzInsKey}\n          info={{\n            fullname: item.postedByUser.name,\n            username: item.postedByUser.ID,\n            avatarSrc: getDataUrl('operatorimage', item.postedByUser.userImage),\n            content: item.pyMessage,\n            postContext: renderContent(item),\n            timeElapsed: getRelativeTime(new Date(item.pyFeed.pyPostedOn))\n          }}\n          interactionInfo={{\n            likeLabel: 'Like',\n            likeCount: item.pyLikes.pxLikeCount,\n            commentLabel: 'Comment'\n          }}\n          replies={renderReplies(item)}\n          attachments={[]}\n          maxContentHeight={80}\n          onLikeClick={() => {}}\n          onUserClick={() => {}}\n          actions={[{ text: 'Bookmark', id: 'Bookmark', onClick: () => {} }]}\n          replyInput={{\n            commentLabel: 'Send Comment',\n            attachments: [],\n            onFilesAdded: () => {},\n            onSubmit: () => {},\n            placeholder: 'Add a comment'\n          }}\n        />\n      ))}\n    />\n  );\n}\n","import { FunctionComponent, PropsWithChildren, ReactNode } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../theme';\nimport { BaseProps, ForwardProps } from '../../types';\nimport Flex, { FlexProps } from '../Flex';\nimport { StyledPopover } from '../Popover';\n\nimport { StyledCard } from './Card';\nimport { StyledCardFooter } from './CardFooter';\n\nexport interface CardContentProps extends BaseProps {\n  /** The content of the Card. */\n  children: ReactNode;\n  container?: Exclude<FlexProps['container'], boolean>;\n}\n\nexport const StyledCardContent = styled.div(({ theme }) => {\n  return css`\n    ${StyledPopover} &, &:not(${StyledCard} ${StyledCard} > &) {\n      position: relative;\n      padding: calc(1.5 * ${theme.base.spacing}) calc(${theme.components.card.padding} * 2);\n\n      & + &,\n      & + ${StyledCardFooter} {\n        padding-block-start: 0;\n      }\n    }\n  `;\n});\n\nStyledCardContent.defaultProps = defaultThemeProp;\n\nconst CardContent: FunctionComponent<CardContentProps & ForwardProps> = ({\n  children,\n  container,\n  ...restProps\n}: PropsWithChildren<CardContentProps & ForwardProps>) => {\n  return (\n    <Flex {...restProps} container={{ direction: 'column', ...container }} as={StyledCardContent}>\n      {children}\n    </Flex>\n  );\n};\n\nexport default CardContent;\n","import { FunctionComponent, PropsWithChildren } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../theme';\nimport Flex, { FlexContainerProps } from '../Flex';\nimport { BaseProps, ForwardProps } from '../../types';\nimport { StyledPopover } from '../Popover';\n\nimport { StyledCard } from './Card';\n\nexport interface CardFooterProps extends BaseProps {\n  /** [justify-content](https://css-tricks.com/almanac/properties/j/justify-content/) */\n  justify?: FlexContainerProps['justify'];\n}\n\nexport const StyledCardFooter = styled.footer(({ theme }) => {\n  return css`\n    ${StyledPopover} &, &:not(${StyledCard} ${StyledCard} > &) {\n      padding: calc(1.5 * ${theme.base.spacing}) calc(${theme.components.card.padding} * 2);\n    }\n  `;\n});\n\nStyledCardFooter.defaultProps = defaultThemeProp;\n\nconst CardFooter: FunctionComponent<CardFooterProps & ForwardProps> = (\n  props: PropsWithChildren<CardFooterProps>\n) => {\n  const { children, justify, ...restProps } = props;\n\n  return (\n    <Flex\n      as={StyledCardFooter}\n      container={{\n        wrap: 'wrap',\n        alignItems: 'center',\n        justify\n      }}\n      {...restProps}\n    >\n      {children}\n    </Flex>\n  );\n};\n\nexport default CardFooter;\n","import { forwardRef, FunctionComponent, PropsWithChildren, ReactNode, Ref } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../theme';\nimport Flex from '../Flex';\nimport { BaseProps, ForwardProps } from '../../types';\nimport { StyledPopover } from '../Popover';\n\nimport { StyledCard } from './Card';\nimport { StyledCardContent } from './CardContent';\n\nexport interface CardHeaderProps extends BaseProps {\n  /** The Card header content. */\n  children: ReactNode;\n  /** Action Buttons that will render within the header. */\n  actions?: ReactNode;\n  /** Ref for the wrapping element. */\n  ref?: Ref<HTMLDivElement>;\n}\n\nexport const StyledCardHeader = styled.header<CardHeaderProps>(({ theme, onClick }) => {\n  return css`\n    ${StyledPopover} &, &:not(${StyledCard} ${StyledCard} > &) {\n      padding: calc(1.5 * ${theme.base.spacing}) calc(${theme.components.card.padding} * 2);\n\n      + ${StyledCardContent} {\n        padding-block-start: 0;\n      }\n\n      &:hover {\n        ${onClick ? 'cursor: pointer;' : undefined}\n      }\n    }\n  `;\n});\n\nStyledCardHeader.defaultProps = defaultThemeProp;\n\nconst CardHeader: FunctionComponent<CardHeaderProps & ForwardProps> = forwardRef(\n  (\n    { children, actions, ...restProps }: PropsWithChildren<CardHeaderProps>,\n    ref: CardHeaderProps['ref']\n  ) => {\n    return (\n      <Flex\n        container={{ alignItems: 'center', justify: 'between' }}\n        as={StyledCardHeader}\n        {...restProps}\n        ref={ref}\n      >\n        {actions ? (\n          <>\n            <Flex container={{ alignItems: 'center' }} item={{ grow: 1 }}>\n              {children}\n            </Flex>\n            <div>{actions}</div>\n          </>\n        ) : (\n          children\n        )}\n      </Flex>\n    );\n  }\n);\n\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;\n","import { forwardRef, FC, ReactNode, Ref, PropsWithoutRef } from 'react';\nimport styled from 'styled-components';\n\nimport { useUID } from '../../hooks';\nimport { BaseProps, ForwardProps } from '../../types';\nimport Flex from '../Flex';\nimport Text from '../Text';\n\nexport interface FormProps extends BaseProps {\n  /** The Form content. Recommended composing form elements within a layout template such as Grid or Flex as the only child. */\n  children: ReactNode;\n  /** Region for Form Actions. */\n  actions?: ReactNode;\n  /** The heading of the form. */\n  heading?: string;\n  /** A description of the form to be displayed above the controls. */\n  description?: string;\n  /** Region for Banners above the Form. */\n  banners?: ReactNode;\n  /** Ref forwarded to the wrapping element. */\n  ref?: Ref<HTMLFormElement>;\n}\n\nexport const StyledForm = styled.form``;\nexport const StyledFormContent = styled.div``;\n\nconst Form: FC<FormProps & ForwardProps> = forwardRef(\n  (props: PropsWithoutRef<FormProps>, ref: FormProps['ref']) => {\n    const { children, actions, heading, description, banners, ...restProps } = props;\n\n    const uid = useUID();\n\n    return (\n      <Flex\n        container={{ direction: 'column', gap: 3 }}\n        as={StyledForm}\n        ref={ref}\n        {...restProps}\n        aria-labelledby={heading ? `${uid}-heading` : undefined}\n        aria-describedby={description ? `${uid}-description` : undefined}\n      >\n        {banners}\n        {(heading || description) && (\n          <Flex container={{ direction: 'column', gap: 1 }}>\n            {heading && (\n              <Text id={`${uid}-heading`} variant='h3'>\n                {heading}\n              </Text>\n            )}\n            {description && (\n              <Text id={`${uid}-description`} as='p'>\n                {description}\n              </Text>\n            )}\n          </Flex>\n        )}\n        <Flex as={StyledFormContent} container={{ direction: 'column', gap: 3 }}>\n          {children}\n        </Flex>\n\n        {actions && <Flex container={{ justify: 'between', alignItems: 'center' }}>{actions}</Flex>}\n      </Flex>\n    );\n  }\n);\n\nexport default Form;\n","// This file is autogenerated. Any changes will be overwritten.\nexport const name = 'check';\n\nexport const Component = () => (\n  <path d='M3.5328125,10.8960938 C3.5328125,10.8960938 10.0460938,17.3617188 10.0460938,17.3617188 C10.0460938,17.3617188 22.4984375,4 22.4984375,4 C22.4984375,4 23.9828125,5.484375 23.9828125,5.484375 C23.9828125,5.484375 10.09375,20.2351562 10.09375,20.2351562 C10.09375,20.2351562 2,12.3804687 2,12.3804687 C2,12.3804687 3.5328125,10.8960937 3.5328125,10.8960937 L3.5328125,10.8960938 Z' />\n);\n\nexport const viewBox = '0 0 25 25';\n","import { forwardRef, PropsWithoutRef, Ref, FC, useMemo } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport Actions from '../Actions';\nimport Flex from '../Flex';\nimport Text from '../Text';\nimport Count from '../Badges/Count';\nimport Icon from '../Icon';\nimport Card, { CardHeader, CardContent, CardFooter } from '../Card';\nimport EmptyState, { EmptyStateProps } from '../EmptyState';\nimport { ForwardProps, NoChildrenProp, OmitStrict, Action } from '../../types';\nimport { omitProps } from '../../styles';\nimport { useI18n } from '../../hooks';\nimport { defaultThemeProp } from '../../theme';\nimport SummaryItem, { SummaryItemProps } from '../SummaryItem';\nimport Progress from '../Progress';\nimport Button from '../Button';\nimport ErrorState from '../ErrorState';\nimport type { ErrorStateProps } from '../ErrorState';\n\nexport interface SummaryListProps extends NoChildrenProp {\n  /** Name of the utility to be used as its heading along with associated actions and aria attributes. */\n  name?: string;\n  /** Identifier for the icon within Pega icons.  */\n  icon?: string;\n  /** Integer representing the total count of items for a list utility dataset. */\n  count?: number;\n  /** Top level actions for the utility. If more than one action is passed a consolidated ActionMenu will be generated. */\n  actions?: Action[];\n  /** If the utility is in a state of fetching data. */\n  loading?: boolean | string;\n  /** An array of SummaryListItem objects to render. Pass an appropriately limited length array with a desired sort order based on design system defaults or config. */\n  items: SummaryListItem[];\n  /** User click initiated callback for when to show view all modal. List lengths less than the count prop will display a \"View all\" button with this function is bound to. */\n  onViewAll?: (callback: Function) => void;\n  /** A simple message to display when there are no items. */\n  noItemsText?: EmptyStateProps['message'];\n  /**\n   * Indicate an error occurred while acquiring data for the list.\n   * The default error state may be overridden with custom props.\n   */\n  error?: boolean | ErrorStateProps;\n  /** Ref for the SummaryList's root element.  */\n  ref?: Ref<HTMLElement>;\n}\n\nexport interface SummaryListItem extends OmitStrict<SummaryItemProps, 'actions'>, ForwardProps {\n  /** A unique id to represent the item. */\n  id: string;\n  /** A set of Actions to render alongside the item. If more than one action is passed a consolidated ActionMenu will be generated. */\n  actions?: Action[];\n}\n\nexport const StyledSummaryListContent = styled(CardContent).withConfig<{ loading?: boolean }>(\n  omitProps('loading')\n)(\n  ({ theme, loading }) => css`\n    ${loading &&\n    css`\n      min-height: 4rem;\n    `}\n\n    &:not(:last-child) > ul > li:last-child {\n      border-bottom: 0.0625rem solid ${theme.base.palette['border-line']};\n    }\n  `\n);\n\nStyledSummaryListContent.defaultProps = defaultThemeProp;\n\nexport const StyledSummaryListItem: typeof SummaryItem = styled(SummaryItem)(\n  ({ theme }) =>\n    css`\n      padding: ${theme.base.spacing} 0;\n\n      &:not(:last-child) {\n        border-bottom: 0.0625rem solid ${theme.base.palette['border-line']};\n      }\n    `\n);\n\nStyledSummaryListItem.defaultProps = defaultThemeProp;\n\nexport const SummaryListItems = ({ items }: Pick<SummaryListProps, 'items'>) => {\n  return (\n    <ul>\n      {items.map(({ id, actions: itemActions, ...restItemProps }) => {\n        return (\n          <StyledSummaryListItem\n            key={id}\n            {...restItemProps}\n            forwardedAs='li'\n            actions={itemActions && <Actions items={itemActions} />}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nconst SummaryList: FC<SummaryListProps & ForwardProps> = forwardRef(\n  (\n    {\n      icon,\n      name,\n      count,\n      actions,\n      items,\n      onViewAll,\n      loading,\n      noItemsText,\n      error,\n      ...restProps\n    }: PropsWithoutRef<SummaryListProps>,\n    ref: SummaryListProps['ref']\n  ) => {\n    const t = useI18n();\n\n    const content = useMemo(() => {\n      if (loading) {\n        return (\n          <Progress placement='local' message={typeof loading === 'string' ? loading : undefined} />\n        );\n      }\n\n      if (error) {\n        return <ErrorState {...(error === true ? {} : error)} />;\n      }\n\n      return items.length > 0 ? (\n        <SummaryListItems items={items} />\n      ) : (\n        <EmptyState message={noItemsText} />\n      );\n    }, [loading, items, noItemsText, error]);\n\n    return (\n      <Card ref={ref} {...restProps}>\n        {(icon || name || typeof count === 'number' || actions) && (\n          <CardHeader>\n            <Flex container={{ alignItems: 'center', gap: 1 }}>\n              {icon && <Icon name={icon} />}\n              {name && <Text variant='h2'>{name}</Text>}\n              {typeof count === 'number' && <Count>{count}</Count>}\n            </Flex>\n            {actions && <Actions items={actions} />}\n          </CardHeader>\n        )}\n\n        <StyledSummaryListContent loading={loading}>{content}</StyledSummaryListContent>\n\n        {!error && typeof count === 'number' && count > items.length && onViewAll && (\n          <CardFooter justify='center'>\n            <Button\n              variant='link'\n              aria-label={name ? t('view_all_noun', [name.toLowerCase()]) : t('view_all')}\n              onClick={onViewAll}\n            >\n              {t('view_all')}\n            </Button>\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n);\n\nexport default SummaryList;\n"],"names":["unitsInMs","year","month","day","hour","minute","second","getRelativeTime","date","elapsed","getTime","Date","now","Math","abs","unit","Object","keys","find","u","Intl","RelativeTimeFormat","window","config","locale","replace","style","numeric","format","round","Pulse","_useState","useState","_useState2","_slicedToArray","posts","setpost","_useState3","setPulseIsLoaded","useEffect","fetchData","then","response","data","FeedList","pxResults","catch","error","console","log","renderReplies","item","length","map","reply","_jsx","FeedReply","id","pzInsKey","content","pyMessage","info","fullname","postedByUser","name","fullnameLabel","username","ID","avatarSrc","getDataUrl","userImage","timeElapsed","pxCreateDateTime","interactionInfo","likeLabel","likeCount","pyLikes","pxLikeCount","commentLabel","onLikeClick","onCommentClick","Feed","searchTypes","userInfo","getOperatorName","getOperatorUrl","newPostRegion","FeedNewPost","textAreaPlaceholder","postLabel","onFilesAdded","onPost","FeedPost","postContext","context","pxContextType","Link","href","concat","pyContext","split","previewable","target","children","pyContextDescription","pyFeed","pyPostedOn","replies","attachments","maxContentHeight","onUserClick","actions","text","onClick","replyInput","onSubmit","placeholder","StyledCardContent","styled","div","_ref","theme","css","_templateObject","_taggedTemplateLiteral","StyledPopover","StyledCard","base","spacing","components","card","padding","StyledCardFooter","defaultProps","defaultThemeProp","_ref2","container","restProps","_objectWithoutProperties","_excluded","Flex","_objectSpread","direction","as","footer","props","justify","wrap","alignItems","StyledCardHeader","header","undefined","CardHeader","forwardRef","ref","_jsxs","_Fragment","grow","displayName","StyledForm","form","StyledFormContent","_templateObject2","Form","heading","description","banners","uid","useUID","gap","Text","variant","Component","d","viewBox","StyledSummaryListContent","CardContent","withConfig","omitProps","loading","palette","StyledSummaryListItem","SummaryItem","_templateObject3","SummaryListItems","_ref3","items","_ref4","itemActions","restItemProps","forwardedAs","Actions","SummaryList","_ref5","icon","count","onViewAll","noItemsText","_excluded2","t","useI18n","useMemo","Progress","placement","message","ErrorState","EmptyState","Card","Icon","Count","CardFooter","Button","toLowerCase"],"sourceRoot":""}