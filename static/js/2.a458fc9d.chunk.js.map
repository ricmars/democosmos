{"version":3,"sources":["../../../../src/components/Badges/Selection.tsx","../../../../../src/components/ComboBox/MultiSelectInput/MultiSelectInput.tsx","../../../src/hooks/useArrows.ts","../../../../src/components/RadioCheckGroup/RadioCheckGroup.tsx","../../../../src/components/RadioCheck/RadioCheck.tsx","../../../../src/components/RadioButton/RadioButton.tsx","../../../../src/components/FieldGroup/FieldGroup.tsx","../../../../src/components/SummaryList/ViewAll.tsx","../../../../../src/components/ComboBox/SingleSelectInput/SingleSelectInput.tsx","../../../../src/components/ComboBox/ComboBoxInput.tsx","../../../../src/components/ComboBox/ComboBox.tsx","../../../../src/components/Stakeholders/StakeholderForm.tsx","../../../../src/components/Stakeholders/Stakeholders.tsx","../../../../../src/components/Icon/icons/caret-down.icon.tsx","../../../../../src/components/Icon/icons/caret-up.icon.tsx"],"names":["StyledSelectable","div","props","theme","components","badges","selectable","base","foreground","background","dark","palette","borderRadius","spacing","displayBackground","hoverBorder","boxShadowColor","interactive","Selectable","ref","consolidatedRef","id","onSelect","onRemove","children","onClick","onKeyUp","restProps","role","tabIndex","as","e","key","preventDefault","stopPropagation","name","StyledMultiSelect","formControl","height","input","defaultProps","MultiSelectInput","selected","value","onChange","onKeyDown","actions","readOnly","disabled","status","placeholder","autoFocus","inputRef","listRef","selector","cycle","dir","onInputKeyDown","lastIndex","length","end","forwardedAs","container","alignItems","item","grow","wrap","onBlur","current","querySelectorAll","forEach","el","map","element","idx","toString","focus","text","size","undefined","autoComplete","focusable","NextKey","PrevKey","setTabIndexes","Array","from","slice","HTMLElement","checked","listener","includes","items","filter","rootNode","getRootNode","Document","ShadowRoot","newFocusIdx","focusIdx","indexOf","activeElement","lastIdx","addEventListener","removeEventListener","StyledRadioCheckGroup","fieldset","RadioCheckGroup","uid","inline","autoStack","variant","optionsEl","setOptionsEl","renderInline","setRenderInline","renderInlineRef","minInlineWidth","intersectionObserver","IntersectionObserver","entries","intersectionRatio","rootBounds","width","root","threshold","resizeObserver","ResizeObserver","contentRect","observe","lastChild","disconnect","labelAs","colGap","rowGap","cols","child","required","StyledPseudoRadioCheck","primaryBackground","formField","touchSize","backgroundColor","borderColor","borderWidth","useBorderColor","error","useBackgroundColor","StyledRadioCheckInput","baseBorderRadius","shadow","focusBorderColor","readOnlyBackgroundColor","checkedBackgroundColor","checkedBorderColor","checkRadius","checkbox","radioRadius","prcSelector","ltr","StyledRadioCheck","label","labelColor","color","labelFontWeight","hoverBorderColor","fontSize","s","StyledRadioCheckCard","card","RadioCheck","type","indeterminate","isRadio","newRef","labelAfter","RB","StyledFieldGroupLegend","legend","open","animation","speed","timing","ease","StyledFieldGroup","fontScale","fontSizes","h3","h4","h5","h6","FieldGroupLegend","justify","FieldGroup","collapsible","defaultCollapsed","setOpen","t","cur","direction","gap","collapsed","StyledToolbar","StyledViewAll","withConfig","loading","searchInputProps","Flex","SearchInput","onSearchChange","Actions","iconOnly","Progress","placement","SummaryList","EmptyState","StyledSingleInput","mode","popoverModifiers","enabled","options","fallbackPlacements","phase","fn","state","styles","popper","rects","reference","requires","StyledComboBox","StyledAriaDescription","p","isMobile","navigator","userAgent","useUID","labelHidden","info","onFocus","onDropdownButtonClickProp","onDropdownButtonClick","menu","useI18n","menuRef","menuComponentId","useElement","setContainerEl","containerRef","useConsolidatedRef","useFocusWithin","focused","setTimeout","scrollIntoView","behavior","block","dropdownButton","Button","icon","Icon","onInputClick","inputActions","Comp","spellCheck","Popover","show","target","modifiers","strategy","onMouseDown","Menu","focusControlEl","onItemClick","itemId","clickedItem","getItem","primary","onNew","arrowNavigationUnsupported","FormField","roles","currentRole","Renderer","renderer","rendererProps","setSelectedRoleNameRef","contentRef","find","selectedRoleName","setSelectedRoleName","control","RadioButton","Input","description","StyledStakeholders","StyledEditFormWrap","StyledPopover","Stakeholders","itemsProp","count","onAddNew","form","onViewAll","viewAll","createModal","create","modalMethods","setMode","editing","setEditing","popoverRef","progressMsgRef","selectedRoleNameRef","popoverTarget","setPopoverTarget","itemElsRef","itemEls","viewAllItemEls","mergeItemActions","i","onEdit","rest","itemActions","elArray","portal","button","querySelector","closePopover","formContent","StakeholderForm","formActions","closeForm","dismiss","onDismiss","onSubmit","modalContent","ViewAll","onSearch","modalProps","progress","message","onRequestDismiss","update","Modal","heading","onAfterClose","useOuterEvent","editPopover","pad","Text","visible","onKeydown","document","useAfterInitialEffect","Component","d","viewBox"],"mappings":"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","file":"static/js/2.a458fc9d.chunk.js","sourcesContent":["import { FC, MouseEvent, forwardRef, PropsWithoutRef, Ref, KeyboardEvent } from 'react';\nimport styled, { css } from 'styled-components';\nimport { mix, transparentize } from 'polished';\n\nimport { ForwardProps } from '../../types';\nimport { tryCatch } from '../../utils/utils';\nimport BareButton, { StyledBareButton } from '../Button/BareButton';\nimport Icon, { registerIcon, StyledIcon } from '../Icon';\nimport * as timesIcon from '../Icon/icons/times.icon';\nimport { useConsolidatedRef } from '../../hooks';\nimport { FormControlProps } from '../FormControl';\n\nregisterIcon(timesIcon);\n\nexport interface SelectableProps {\n  /** An id that is used by the onSelect and onRemove functions if they are provided. */\n  id: string;\n  /** Takes an ID that represents the Badge. This function is called when the Badge is clicked. */\n  onSelect?: (id: string) => void;\n  /** Takes an ID that represents the Badge. This function is called when the Badge is closed by clicking the X. */\n  onRemove?: (id: string) => void;\n  /** The content of the Badge. */\n  children: string;\n  /** Makes the input non editable and non clickable. The browser defaults to false. */\n  readOnly?: FormControlProps['readOnly'];\n  /** Event handler called when the Badge is clicked. */\n  onClick?: (event: MouseEvent) => void;\n  /** Event handler fired on every keyup event. */\n  onKeyUp?: (event: KeyboardEvent) => void;\n}\n\nexport const StyledSelectable = styled.div(props => {\n  const { foreground, background } = props.theme.components.badges.selectable.base;\n  const { dark } = props.theme.base.palette;\n  const borderRadius = props.theme.base['border-radius'];\n  const { spacing } = props.theme.base;\n\n  const displayBackground = tryCatch(() => mix(0.15, background, '#ffffff'));\n  const hoverBorder = tryCatch(() => mix(0.3, background, '#ffffff'));\n  const boxShadowColor = tryCatch(() => transparentize(0.45, dark));\n\n  const height = 1.125;\n  return css`\n    background: ${displayBackground};\n    border: 0 solid transparent;\n    border-radius: calc(${height} * ${borderRadius});\n    color: ${foreground};\n    cursor: default;\n    display: inline-flex;\n    align-items: center;\n    font-size: 0.75rem;\n    height: ${height}rem;\n    padding: 0 ${spacing};\n    min-width: max-content;\n    line-height: 1;\n\n    &:hover {\n      color: ${props.theme.base.palette.interactive};\n      box-shadow: inset 0 0 0 0.0625rem ${hoverBorder};\n\n      ${StyledBareButton} {\n        color: ${props.theme.base.palette.interactive};\n      }\n    }\n\n    &:active {\n      box-shadow: inset 0 0 0 0.0625rem ${background};\n    }\n\n    &:focus {\n      color: ${props.theme.base.palette.interactive};\n      box-shadow: 0 0 0.5rem -0.125rem ${boxShadowColor}, inset 0 0 0 0.125rem ${background};\n      outline: none;\n\n      ${StyledBareButton} {\n        color: ${props.theme.base.palette.interactive};\n      }\n    }\n\n    ${StyledIcon} {\n      margin-inline-start: ${spacing};\n      height: 1em;\n      width: 1em;\n    }\n  `;\n});\n\nconst Selectable: FC<SelectableProps & ForwardProps> = forwardRef(\n  (props: PropsWithoutRef<SelectableProps>, ref: Ref<HTMLButtonElement>) => {\n    const consolidatedRef = useConsolidatedRef(ref);\n    const { id, onSelect, onRemove, children, onClick, onKeyUp, ...restProps } = props;\n\n    const handleClick = (e: MouseEvent<HTMLDivElement>) => {\n      onClick?.(e);\n      onSelect?.(id);\n    };\n\n    const handleCloseClick = (e: MouseEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      onRemove?.(id);\n    };\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      onKeyUp?.(e);\n      if (e.key === 'Enter') {\n        onSelect?.(id);\n      }\n\n      if (e.key === 'Backspace' || e.key === 'Delete') {\n        onRemove?.(id);\n      }\n    };\n\n    return (\n      <BareButton\n        role='button'\n        tabIndex='0'\n        as={StyledSelectable}\n        ref={consolidatedRef}\n        onClick={handleClick}\n        onKeyUp={handleKeyUp}\n        {...restProps}\n      >\n        {children}\n        <BareButton tabIndex='-1' onClick={handleCloseClick}>\n          <Icon name='times' />\n        </BareButton>\n      </BareButton>\n    );\n  }\n);\n\nexport default Selectable;\n","import {\n  FunctionComponent,\n  forwardRef,\n  Ref,\n  PropsWithoutRef,\n  KeyboardEvent,\n  useRef,\n  useCallback\n} from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { ForwardProps } from '../../../types';\nimport { defaultThemeProp } from '../../../theme';\nimport Selectable, { StyledSelectable } from '../../Badges/Selection';\nimport { StyledFormControl } from '../../FormControl';\nimport Flex from '../../Flex';\nimport { useArrows, useConsolidatedRef, useDirection } from '../../../hooks';\nimport { cap } from '../../../utils';\nimport { StyledButton } from '../../Button';\n\nimport { MultiSelectInputProps } from './MultiSelectInput.types';\n\nexport const StyledMultiSelect = styled.div<MultiSelectInputProps>(props => {\n  const {\n    theme: {\n      components: {\n        'form-control': formControl,\n        input: { height }\n      },\n      base\n    }\n  } = props;\n\n  return css`\n    min-height: ${height};\n\n    @media (pointer: coarse) {\n      min-height: ${base['hit-area']['finger-min']};\n    }\n\n    &:focus-within {\n      border-color: ${formControl[':focus']['border-color']};\n      box-shadow: ${formControl[':focus']['box-shadow']};\n    }\n\n    &:hover:not([readonly]):not([disabled]):focus-within {\n      border-color: transparent;\n    }\n\n    ul {\n      list-style: none;\n    }\n\n    input {\n      min-width: 0;\n      width: 100%;\n      color: ${formControl['foreground-color']};\n      text-overflow: ellipsis;\n      margin-inline-start: ${base.spacing};\n    }\n\n    input,\n    input:focus {\n      border: none;\n      outline: none;\n      flex-grow: 1;\n      background-color: transparent;\n\n      &:read-only {\n        cursor: default;\n      }\n    }\n\n    ${StyledSelectable} {\n      margin: calc(0.25 * ${base.spacing});\n    }\n\n    > ${StyledButton} {\n      border-radius: calc(${base['border-radius']} * ${formControl['border-radius']});\n      height: calc(${height} - 2 * ${formControl['border-width']});\n    }\n  `;\n});\n\nStyledMultiSelect.defaultProps = defaultThemeProp;\n\nconst MultiSelectInput: FunctionComponent<MultiSelectInputProps & ForwardProps> = forwardRef(\n  (props: PropsWithoutRef<MultiSelectInputProps>, ref: Ref<HTMLInputElement>) => {\n    const {\n      selected = [],\n      value,\n      onRemove,\n      onChange,\n      onKeyDown,\n      actions,\n      readOnly,\n      disabled,\n      status,\n      placeholder,\n      autoFocus,\n      ...restProps\n    } = props;\n\n    const inputRef = useConsolidatedRef<HTMLInputElement>(ref);\n    const listRef = useRef<HTMLUListElement>(null);\n    useArrows(listRef, { selector: 'div[role=\"button\"], input', cycle: false, dir: 'left-right' });\n\n    const onInputKeyDown = useCallback(\n      (e: KeyboardEvent<HTMLInputElement>) => {\n        const lastIndex = selected.length - 1;\n        if (e.key === 'Backspace' && !value && selected.length > 0) {\n          onRemove?.(selected[lastIndex].id, lastIndex);\n        }\n        onKeyDown?.(e);\n      },\n      [onKeyDown, value, selected]\n    );\n\n    const { end } = useDirection();\n\n    return (\n      <Flex\n        as={StyledMultiSelect}\n        forwardedAs={StyledFormControl}\n        container={{ alignItems: 'center' }}\n        {...{\n          readOnly,\n          disabled,\n          status\n        }}\n      >\n        <Flex\n          ref={listRef}\n          as='ul'\n          item={{ grow: 1 }}\n          container={{ alignItems: 'center', wrap: 'wrap' }}\n          onBlur={() => {\n            listRef.current?.querySelectorAll<HTMLElement>('div[role=\"button\"]').forEach(el => {\n              el.tabIndex = -1;\n            });\n            if (inputRef.current) inputRef.current.tabIndex = 0;\n          }}\n        >\n          {selected.map((element, idx) => {\n            return (\n              <li key={element.id}>\n                <Selectable\n                  id={element.id.toString()}\n                  disabled={readOnly || disabled}\n                  status={status}\n                  onRemove={id => {\n                    onRemove?.(id, idx);\n                    inputRef.current?.focus();\n                  }}\n                  onKeyDown={(e: KeyboardEvent<Element>) => {\n                    // prevent browser's Back on FF\n                    if (e.key === 'Backspace') e.preventDefault();\n                    if (idx === selected.length - 1 && e.key === `Arrow${cap(end)}`)\n                      inputRef.current?.focus();\n                  }}\n                >\n                  {element.text}\n                </Selectable>\n              </li>\n            );\n          })}\n          <Flex as='li' item={{ grow: 1 }} container>\n            <input\n              size={5}\n              ref={inputRef}\n              value={value}\n              // no-op avoids react uncontrolled warning\n              onChange={onChange || (() => {})}\n              onKeyDown={onInputKeyDown}\n              readOnly={readOnly || !onChange}\n              placeholder={selected?.length ? undefined : placeholder}\n              autoComplete='off'\n              // eslint-disable-next-line jsx-a11y/no-autofocus\n              autoFocus={autoFocus}\n              {...restProps}\n            />\n          </Flex>\n        </Flex>\n        {actions}\n      </Flex>\n    );\n  }\n);\n\nexport default MultiSelectInput;\n","import { useEffect, useCallback, RefObject } from 'react';\n\nimport { documentIsAvailable } from '../utils';\n\nconst focusable = `\n  a[href],\n  button:enabled,\n  input[type='checkbox']:enabled,\n  input[type='radio']:enabled\n`;\n\n/**\n * @example useArrows(ref, { cycle, selector });\n * @param ref - A reference to the element that will be navigated through. [React RefObject](https://reactjs.org/docs/refs-and-the-dom.html)\n */\nconst useArrows = (\n  ref: RefObject<HTMLElement>,\n  {\n    /** If true, the down or up arrow key will navigate to the first or last element if the element currently focused is the last or first index of the selected elements. */\n    cycle = true,\n    /** A query selector that will determine which elements to cycle through with the arrow keys. The selector will be used in conjunction with [querySelectorAll](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll#selectors). */\n    selector = focusable,\n    /** Which keys are used to navigate through the list */\n    dir = 'up-down'\n  }: { cycle?: boolean; selector?: string; dir?: 'up-down' | 'left-right' } = {}\n) => {\n  const [NextKey, PrevKey] =\n    dir === 'up-down' ? ['ArrowDown', 'ArrowUp'] : ['ArrowRight', 'ArrowLeft'];\n\n  const setTabIndexes = useCallback(\n    (el: HTMLElement) => {\n      // don't set tabindex -1 for first element, or an element with a checked input inside of it to be able to focus it\n      Array.from(el.querySelectorAll(selector))\n        .slice(1)\n        .forEach(item => {\n          if (item instanceof HTMLElement) {\n            const checked = (item as HTMLInputElement).checked;\n            if (!checked) item.tabIndex = -1;\n          }\n        });\n    },\n    [selector]\n  );\n\n  const listener = useCallback(\n    (e: KeyboardEvent) => {\n      if (['Home', 'End', NextKey, PrevKey].includes(e.key)) e.preventDefault();\n\n      if (!documentIsAvailable) return;\n\n      const el = ref.current;\n      if (!el) return;\n\n      const items = Array.from(el.querySelectorAll(selector)).filter(\n        (item): item is HTMLElement => item instanceof HTMLElement\n      );\n\n      if (!items.length) return;\n\n      const rootNode = el.getRootNode();\n\n      if (!(rootNode instanceof Document) && !(rootNode instanceof ShadowRoot)) return;\n\n      const focusIdx = items.indexOf(rootNode.activeElement as HTMLElement);\n      const lastIdx = items.length - 1;\n      let newFocusIdx;\n\n      if (e.key === 'Home' || (e.key === NextKey && focusIdx === -1)) {\n        newFocusIdx = 0;\n      } else if (e.key === 'End' || (e.key === PrevKey && focusIdx === -1)) {\n        newFocusIdx = lastIdx;\n      } else if (e.key === 'Enter') {\n        setTabIndexes(el);\n        return;\n      } else if (e.key === NextKey) {\n        if (focusIdx === lastIdx) {\n          if (!cycle) return;\n          newFocusIdx = 0;\n        } else {\n          newFocusIdx = focusIdx + 1;\n        }\n      } else if (e.key === PrevKey) {\n        if (focusIdx === 0) {\n          if (!cycle) return;\n          newFocusIdx = lastIdx;\n        } else {\n          newFocusIdx = focusIdx - 1;\n        }\n      } else {\n        return;\n      }\n\n      items[newFocusIdx].focus();\n    },\n    [ref.current, cycle, selector]\n  );\n\n  useEffect(() => {\n    const el = ref.current;\n    if (!el) return;\n\n    setTabIndexes(el);\n    el.addEventListener('keydown', listener);\n\n    return () => {\n      el.removeEventListener('keydown', listener);\n    };\n  }, [ref.current, selector, listener]);\n};\n\nexport default useArrows;\n","import {\n  FC,\n  Ref,\n  forwardRef,\n  PropsWithoutRef,\n  Children,\n  cloneElement,\n  ReactElement,\n  ChangeEvent,\n  useState,\n  useEffect,\n  useRef\n} from 'react';\nimport styled from 'styled-components';\n\nimport { ForwardProps } from '../../types';\nimport FormField, { FormFieldProps } from '../FormField';\nimport { StyledFormField } from '../FormField/FormField';\nimport { FormControlProps } from '../FormControl';\nimport { RadioCheckProps } from '../RadioCheck';\nimport Grid from '../Grid';\nimport { useElement, useUID } from '../../hooks';\n\nexport interface RadioCheckGroupProps {\n  /** Accepts Checkboxes or RadioButtons as children. */\n  children: ReactElement | ReactElement[];\n  /**\n   * Conveniently pass an onChange handler to the group to be notified when any of the inputs change.\n   * Additionally, onChange can be passed to individual children.\n   * Both handlers will be called, child followed by group.\n   */\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  /** Set visual state based on a validation state. */\n  status?: FormControlProps['status'];\n  /** Pass a string or a fragment with an Icon and string. */\n  label?: FormControlProps['label'];\n  /** Visually hides the label region. */\n  labelHidden?: FormControlProps['labelHidden'];\n  /** It is recommended to pass a simple string to offer guidance. Text will be styled based on status prop. */\n  info?: FormControlProps['info'];\n  /** Indicate if the field is required. The browser defaults to false. */\n  required?: FormControlProps['required'];\n  /** Disable the control. The browser defaults to false. */\n  disabled?: FormControlProps['disabled'];\n  /** Makes the input non editable and non clickable. The browser defaults to false. */\n  readOnly?: FormControlProps['readOnly'];\n  /**\n   * Layout field elements inline in a row.\n   * @default false\n   */\n  inline?: FormFieldProps['inline'];\n  /** Used to toggle the auto stacking feature of an inlined group.\n   * @default true\n   */\n  autoStack?: boolean;\n  /** Sets html name attribute for the underlying control. Useful for mapping to a data field. */\n  name?: FormControlProps['name'];\n  /**\n   * Controls the styling of the child RadioChecks.\n   * @default 'simple'\n   */\n  variant?: RadioCheckProps['variant'];\n  /** Ref forwarded to the wrapping element. */\n  ref?: Ref<HTMLElement>;\n}\n\nconst defaultProps = {\n  required: false,\n  disabled: false\n};\n\nconst StyledRadioCheckGroup = styled.fieldset`\n  &[disabled] {\n    > ${StyledFormField} {\n      opacity: unset;\n    }\n  }\n`;\n\nconst RadioCheckGroup: FC<RadioCheckGroupProps & ForwardProps> = forwardRef(\n  (props: PropsWithoutRef<RadioCheckGroupProps>, ref: RadioCheckGroupProps['ref']) => {\n    const uid = useUID();\n    const {\n      children,\n      name = uid,\n      disabled,\n      onChange,\n      readOnly,\n      inline = false,\n      autoStack = true,\n      variant = 'simple',\n      ...restProps\n    } = props;\n\n    const [optionsEl, setOptionsEl] = useElement<HTMLDivElement>();\n    const [renderInline, setRenderInline] = useState(inline);\n    const renderInlineRef = useRef(inline);\n    const minInlineWidth = useRef(0);\n\n    useEffect(() => {\n      if (inline && optionsEl && autoStack) {\n        const intersectionObserver = new IntersectionObserver(\n          entries => {\n            if (entries[0].intersectionRatio < 1) {\n              if (entries[0].rootBounds) minInlineWidth.current = entries[0].rootBounds.width + 1;\n              renderInlineRef.current = false;\n              setRenderInline(false);\n            }\n          },\n          { root: optionsEl, threshold: 1 }\n        );\n\n        const resizeObserver = new ResizeObserver(entries => {\n          if (!renderInlineRef.current && entries[0].contentRect.width > minInlineWidth.current) {\n            renderInlineRef.current = true;\n            setRenderInline(true);\n          }\n        });\n\n        intersectionObserver.observe(optionsEl.lastChild as Element);\n        resizeObserver.observe(optionsEl);\n\n        return () => {\n          intersectionObserver.disconnect();\n          resizeObserver.disconnect();\n        };\n      }\n    }, [optionsEl, inline, autoStack]);\n\n    return (\n      <FormField\n        {...{\n          as: StyledRadioCheckGroup,\n          labelAs: 'legend',\n          ref,\n          name,\n          disabled,\n          ...restProps\n        }}\n      >\n        <Grid\n          ref={setOptionsEl}\n          container={{\n            colGap: 1,\n            rowGap: variant === 'card' ? 1 : 0,\n            cols: renderInline ? 'repeat(auto-fit, minmax(1ch, max-content))' : '1fr'\n          }}\n        >\n          {Children.map(children, child =>\n            cloneElement(child, {\n              name,\n              disabled: disabled || child.props.disabled,\n              readOnly: readOnly || child.props.readOnly,\n              variant,\n              onChange: onChange\n                ? (e: ChangeEvent<HTMLInputElement>) => {\n                    if (!(readOnly || child.props.readOnly)) {\n                      child.props.onChange?.(e);\n                      onChange(e);\n                    }\n                  }\n                : child.props.onChange\n            })\n          )}\n        </Grid>\n      </FormField>\n    );\n  }\n);\n\nRadioCheckGroup.defaultProps = defaultProps;\n\nexport default RadioCheckGroup;\n","import {\n  forwardRef,\n  FC,\n  Ref,\n  useEffect,\n  MouseEvent,\n  KeyboardEvent,\n  PropsWithoutRef,\n  MouseEventHandler,\n  KeyboardEventHandler\n} from 'react';\nimport styled, { css } from 'styled-components';\nimport { readableColor, hideVisually, mix } from 'polished';\n\nimport FormField from '../FormField';\nimport { FormControlProps, StyledFormControl } from '../FormControl';\nimport { defaultThemeProp } from '../../theme';\nimport { tryCatch } from '../../utils/utils';\nimport { BaseProps, ForwardProps } from '../../types';\nimport { useConsolidatedRef, useDirection, useUID } from '../../hooks';\nimport { StyledLabel } from '../Label';\nimport { calculateFontSize } from '../../styles';\n\nexport interface RadioCheckProps extends BaseProps {\n  /**\n   * Sets DOM id for the control and associates label element via 'for' attribute.\n   * If an id is not pass, a random id will be generated for any render.\n   */\n  id?: FormControlProps['id'];\n  /** Pass a string or a fragment with an Icon and string. */\n  label?: FormControlProps['label'];\n  /** Indicate if the field is required. The browser defaults to false. */\n  required?: FormControlProps['required'];\n  /** Disable the control. The browser defaults to false. */\n  disabled?: FormControlProps['disabled'];\n  /** Makes the input non editable and non clickable. The browser defaults to false. */\n  readOnly?: FormControlProps['readOnly'];\n  /** Set visual state based on a validation state. */\n  status?: FormControlProps['status'];\n  /** Sets html name attribute for the underlying control. Useful for mapping to a data field. */\n  name?: FormControlProps['name'];\n  /** Sets the type of input. */\n  type: 'radio' | 'checkbox';\n  /** Sets checked prop via onChange when using as controlled component. */\n  checked?: boolean;\n  /** Initialize checked prop when using as uncontrolled component. */\n  defaultChecked?: boolean;\n  /**\n   * Sets control to an an indeterminate state.\n   * @default false\n   */\n  indeterminate?: boolean;\n  /**\n   * Controls the styling of the RadioCheck.\n   * @default 'simple'\n   */\n  variant?: 'simple' | 'card';\n  /** Callback function for onClick events. */\n  onClick?: MouseEventHandler<HTMLInputElement>;\n  /** Callback function for onKeyDown events. */\n  onKeyDown?: KeyboardEventHandler<HTMLInputElement>;\n  /** Ref forwarded to the underlying input. */\n  ref?: Ref<HTMLInputElement>;\n}\n\nexport const StyledPseudoRadioCheck = styled.div<Pick<RadioCheckProps, 'readOnly' | 'status'>>(\n  props => {\n    const {\n      theme: {\n        base: {\n          spacing,\n          palette: { 'primary-background': primaryBackground }\n        },\n        components: {\n          'form-field': formField,\n          'radio-check': {\n            size,\n            'touch-size': touchSize,\n            'background-color': backgroundColor,\n            'border-color': borderColor,\n            'border-width': borderWidth\n          }\n        }\n      },\n      status\n    } = props;\n\n    const useBorderColor = status === 'error' ? formField.error['status-color'] : borderColor;\n    const useBackgroundColor =\n      status && formField[status]\n        ? tryCatch(() => mix(0.8, primaryBackground, formField[status]['status-color']))\n        : backgroundColor;\n\n    return css`\n      display: flex;\n      flex-shrink: 0;\n      position: relative;\n      width: ${size};\n      height: ${size};\n      margin-inline-end: ${spacing};\n      border: ${borderWidth} solid ${useBorderColor};\n      background-color: ${useBackgroundColor};\n\n      @media (pointer: coarse) {\n        width: ${touchSize};\n        height: ${touchSize};\n      }\n\n      &::after {\n        content: '';\n        display: none;\n      }\n    `;\n  }\n);\n\nStyledPseudoRadioCheck.defaultProps = defaultThemeProp;\n\nexport const StyledRadioCheckInput = styled.input(props => {\n  const {\n    theme: {\n      base: { 'border-radius': baseBorderRadius },\n      components: {\n        'form-control': {\n          ':focus': { 'box-shadow': shadow, 'border-color': focusBorderColor },\n          ':read-only': { 'background-color': readOnlyBackgroundColor }\n        },\n        'radio-check': {\n          ':checked': {\n            'background-color': checkedBackgroundColor,\n            'border-color': checkedBorderColor\n          }\n        },\n        checkbox: { 'border-radius': checkRadius },\n        'radio-button': { 'border-radius': radioRadius }\n      }\n    }\n  } = props;\n\n  const backgroundColor = props.readOnly ? readOnlyBackgroundColor : checkedBackgroundColor;\n  const foreground = tryCatch(() => readableColor(backgroundColor));\n\n  const prcSelector = `+ ${StyledLabel} ${StyledPseudoRadioCheck}`;\n  const { ltr } = useDirection();\n\n  return css`\n    ${hideVisually}\n\n    ${!(props.disabled || props.readOnly) &&\n    css`\n      &:focus ${prcSelector} {\n        box-shadow: ${shadow};\n        border-color: ${focusBorderColor};\n      }\n    `}\n\n    &:checked\n      ${prcSelector},\n      &:checked:disabled\n      ${prcSelector},\n      &[type='checkbox']:indeterminate\n      ${prcSelector},\n      &[type='checkbox']:indeterminate:disabled\n      ${prcSelector} {\n      border-color: ${props.readOnly ? 'inherit' : checkedBorderColor};\n      background-color: ${backgroundColor};\n\n      &::after {\n        display: block;\n      }\n    }\n\n    &[type='radio'] ${prcSelector}, &[type='radio'] ${prcSelector}::after {\n      border-radius: ${radioRadius};\n    }\n\n    &[type='radio'] ${prcSelector}::after {\n      margin: auto;\n      width: 100%;\n      height: 100%;\n      background-color: ${foreground};\n      transform: scale(0.4);\n    }\n\n    &[type='checkbox'] ${prcSelector} {\n      border-radius: min(calc(${baseBorderRadius} * ${checkRadius}), 0.25rem);\n    }\n\n    &[type='checkbox']:not(:indeterminate) ${prcSelector} {\n      &::after {\n        width: 40%;\n        height: 75%;\n        ${ltr\n          ? css`\n              transform: rotate(45deg) translate(50%, -30%);\n            `\n          : css`\n              transform: rotate(45deg) translate(-50%, 30%);\n            `}\n        border-right: 0.15em solid ${foreground};\n        border-bottom: 0.15em solid ${foreground};\n      }\n    }\n\n    &[type='checkbox']:indeterminate ${prcSelector} {\n      display: flex;\n      &::after {\n        width: 90%;\n        height: 0.15em;\n        margin: auto;\n        background-color: ${foreground};\n      }\n    }\n  `;\n});\n\nStyledRadioCheckInput.defaultProps = defaultThemeProp;\n\nexport const StyledRadioCheck = styled.div<Pick<RadioCheckProps, 'disabled' | 'readOnly'>>(\n  props => {\n    const {\n      disabled,\n      readOnly,\n      theme: {\n        base,\n        components: {\n          'radio-check': {\n            label: { color: labelColor, 'font-weight': labelFontWeight }\n          },\n          'form-control': {\n            ':hover': { 'border-color': hoverBorderColor }\n          }\n        }\n      }\n    } = props;\n\n    const fontSize = calculateFontSize(base['font-size'], base['font-scale']);\n\n    return css`\n      > ${StyledLabel} {\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        font-weight: ${labelFontWeight};\n        word-break: break-word;\n        font-size: ${fontSize.s};\n        color: ${labelColor};\n        margin: 0;\n        min-height: ${base['hit-area']['mouse-min']};\n\n        @media (pointer: coarse) {\n          min-height: ${base['hit-area']['finger-min']};\n        }\n      }\n\n      ${!(disabled || readOnly) &&\n      css`\n        &:not(:focus-within) > ${StyledLabel}:hover ${StyledPseudoRadioCheck} {\n          border-color: ${hoverBorderColor};\n        }\n      `}\n    `;\n  }\n);\n\nStyledRadioCheck.defaultProps = defaultThemeProp;\n\nexport const StyledRadioCheckCard = styled.label<\n  Pick<RadioCheckProps, 'disabled' | 'readOnly' | 'status'>\n>(\n  ({\n    disabled,\n    readOnly,\n    status,\n    theme: {\n      base: { palette, shadow, spacing },\n      components: {\n        card,\n        'form-field': formField,\n        'radio-check': { label },\n        'form-control': {\n          ':hover': { 'border-color': hoverBorderColor }\n        }\n      }\n    }\n  }) => {\n    const useBorderColor =\n      status === 'error' ? formField.error['status-color'] : palette['border-line'];\n\n    return css`\n      min-width: min-content;\n      align-items: start;\n      cursor: pointer;\n      background-color: ${card.background};\n      border-radius: ${card['border-radius']};\n      border: 0.0625rem solid ${useBorderColor};\n      padding: ${spacing};\n\n      ${disabled &&\n      css`\n        cursor: not-allowed;\n      `}\n\n      ${!(disabled || readOnly) &&\n      css`\n        :hover:not(:focus-within) {\n          border-color: ${hoverBorderColor};\n          ${StyledLabel} ${StyledPseudoRadioCheck} {\n            border-color: ${hoverBorderColor};\n          }\n        }\n\n        :focus-within {\n          box-shadow: ${shadow.focus};\n          border-color: transparent;\n        }\n      `}\n\n    > ${StyledLabel} {\n        display: grid;\n        grid-template-columns: auto 1fr;\n        color: ${label.color};\n        font-weight: ${label['font-weight']};\n      }\n    `;\n  }\n);\n\nStyledRadioCheckCard.defaultProps = defaultThemeProp;\n\nconst RadioCheck: FC<RadioCheckProps & ForwardProps> = forwardRef(\n  (props: PropsWithoutRef<RadioCheckProps>, ref: RadioCheckProps['ref']) => {\n    const uid = useUID();\n    const {\n      type,\n      id = uid,\n      label,\n      required = false,\n      disabled = false,\n      indeterminate = false,\n      readOnly = false,\n      variant = 'simple',\n      onClick,\n      onKeyDown,\n      status,\n      ...restProps\n    } = props;\n\n    const isRadio = type === 'radio';\n    const card = variant === 'card';\n    const newRef = useConsolidatedRef(ref);\n\n    useEffect(() => {\n      if (!isRadio && newRef.current) {\n        newRef.current.indeterminate = !!indeterminate;\n      }\n    }, [newRef, indeterminate, isRadio]);\n\n    return (\n      <FormField\n        as={card ? StyledRadioCheckCard : StyledRadioCheck}\n        label={\n          <>\n            <StyledPseudoRadioCheck\n              status={status}\n              isRadio={isRadio}\n              as={StyledFormControl}\n              required={required}\n              disabled={disabled}\n              readOnly={readOnly}\n            />\n            {label}\n          </>\n        }\n        labelAs={card ? 'div' : undefined}\n        id={id}\n        required={required}\n        disabled={disabled}\n        readOnly={readOnly}\n        status={status}\n        inline\n        labelAfter\n      >\n        <StyledRadioCheckInput\n          {...restProps}\n          id={id}\n          type={type}\n          required={required}\n          disabled={disabled}\n          readOnly={readOnly}\n          aria-readonly={readOnly}\n          onClick={(e: MouseEvent<HTMLInputElement>) => {\n            if (readOnly) e.preventDefault();\n\n            onClick?.(e);\n          }}\n          onKeyDown={(e: KeyboardEvent<HTMLInputElement>) => {\n            if (type === 'checkbox' && readOnly && e.key === ' ') {\n              e.preventDefault();\n            }\n            if (type === 'radio' && readOnly && e.key.includes('Arrow')) {\n              e.preventDefault();\n            }\n\n            onKeyDown?.(e);\n          }}\n          ref={newRef}\n        />\n      </FormField>\n    );\n  }\n);\n\nexport default RadioCheck;\n","import { FC, forwardRef, Ref } from 'react';\n\nimport { FormControlProps } from '../FormControl';\nimport RadioCheck, { RadioCheckProps } from '../RadioCheck';\nimport { ForwardProps } from '../../types';\n\nexport interface RadioButtonProps {\n  /**\n   * Sets DOM id for the control and associates label element via 'for' attribute.\n   * If an id is not pass, a random id will be generated for any render.\n   */\n  id?: FormControlProps['id'];\n  /** Pass a string or a fragment with an Icon and string. */\n  label?: FormControlProps['label'];\n  /** Indicate if the field is required. The browser defaults to false. */\n  required?: FormControlProps['required'];\n  /** Disable the control. The browser defaults to false. */\n  disabled?: FormControlProps['disabled'];\n  /** Set visual state based on a validation state. */\n  status?: FormControlProps['status'];\n  /** Sets html name attribute for the underlying control. Useful for mapping to a data field. */\n  name?: FormControlProps['name'];\n  /** Sets checked prop via onChange when using as controlled component. */\n  checked?: RadioCheckProps['checked'];\n  /** Initialize checked prop when using as uncontrolled component. */\n  defaultChecked?: RadioCheckProps['defaultChecked'];\n  /**\n   * Sets Radio Button to an an [indeterminate state](https://css-tricks.com/almanac/selectors/i/indeterminate/#indeterminate-radio-buttons).\n   * @default false\n   */\n  indeterminate?: RadioCheckProps['indeterminate'];\n}\n\n// Odd issue with SB doc prop table not being generated when called RadioButton...so using RB\nconst RB: FC<RadioButtonProps & ForwardProps> = forwardRef(\n  (props: RadioButtonProps, ref: Ref<HTMLInputElement>) => (\n    <RadioCheck {...props} type='radio' ref={ref} />\n  )\n);\n\n// Adding here for doc purposes only\nRB.defaultProps = RadioCheck.defaultProps;\n\nexport default RB;\n","import { forwardRef, useState, FunctionComponent, PropsWithoutRef, Ref, ReactNode } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport Button, { StyledButton } from '../Button';\nimport ExpandCollapse from '../ExpandCollapse';\nimport Flex from '../Flex';\nimport Icon, { StyledIcon, registerIcon } from '../Icon';\nimport * as caretRightIcon from '../Icon/icons/caret-right.icon';\nimport Actions, { ActionsProps } from '../Actions';\nimport { defaultThemeProp } from '../../theme';\nimport { BaseProps, ForwardProps } from '../../types';\nimport { useI18n } from '../../hooks';\nimport { calculateFontSize, FontSize } from '../../styles';\n\nregisterIcon(caretRightIcon);\n\nexport interface FieldGroupProps extends BaseProps {\n  /** The content of the Field Group. */\n  children: ReactNode;\n  /**\n   * If true, the Field Group will be able to collapse the content of its children by clicking on the name.\n   * @default false\n   */\n  collapsible?: boolean;\n  /**\n   * If true, the Field Group will be collapsed on the first render.\n   * @default false\n   */\n  defaultCollapsed?: boolean;\n  /** The name associated with the Field Group. */\n  name?: string;\n  /** An array of actions to add to the header. */\n  actions?: ActionsProps['items'];\n  /** A reference to the wrapping element. */\n  ref?: Ref<HTMLFieldSetElement>;\n}\n\ninterface FieldGroupLegendProps {\n  open: boolean;\n  actions?: ActionsProps['items'];\n  children?: ReactNode;\n}\n\nexport const StyledFieldGroupLegend = styled.legend<{ open: boolean }>(\n  ({\n    open,\n    theme: {\n      base: { spacing, animation }\n    }\n  }) => css`\n    width: 100%;\n    margin-bottom: 0;\n    ${open &&\n    css`\n      margin-block-end: ${spacing};\n    `}\n    transition: margin-block-end ${animation.speed} ${animation.timing.ease};\n\n    button ${StyledIcon} {\n      transition: transform ${animation.speed} ${animation.timing.ease};\n    }\n\n    button[aria-expanded='true'] ${StyledIcon} {\n      transform: rotate(90deg);\n    }\n    button[aria-expanded='false'] ${StyledIcon} {\n      transform: rotate(0);\n    }\n  `\n);\n\nStyledFieldGroupLegend.defaultProps = defaultThemeProp;\n\nexport const StyledFieldGroup = styled.fieldset(\n  ({\n    theme: {\n      base: { 'font-size': fontSize, 'font-scale': fontScale },\n      components: { text }\n    }\n  }) => {\n    const fontSizes = calculateFontSize(fontSize, fontScale);\n\n    return css`\n      border: none;\n\n      ${StyledFieldGroupLegend} ${StyledButton} {\n        font-weight: inherit;\n      }\n\n      & ${StyledFieldGroupLegend} {\n        font-size: ${fontSizes[text.h3['font-size'] as FontSize]};\n        font-weight: ${text.h3['font-weight']};\n      }\n\n      & & ${StyledFieldGroupLegend} {\n        font-size: ${fontSizes[text.h4['font-size'] as FontSize]};\n        font-weight: ${text.h4['font-weight']};\n      }\n\n      & & & ${StyledFieldGroupLegend} {\n        font-size: ${fontSizes[text.h5['font-size'] as FontSize]};\n        font-weight: ${text.h5['font-weight']};\n      }\n\n      & & & & ${StyledFieldGroupLegend} {\n        font-size: ${fontSizes[text.h6['font-size'] as FontSize]};\n        font-weight: ${text.h6['font-weight']};\n      }\n    `;\n  }\n);\n\nStyledFieldGroup.defaultProps = defaultThemeProp;\n\nconst FieldGroupLegend: FunctionComponent<FieldGroupLegendProps> = ({\n  children,\n  open,\n  actions,\n  ...restProps\n}) => {\n  return (\n    <StyledFieldGroupLegend open={open} {...restProps}>\n      <Flex container={{ alignItems: 'center', justify: 'between' }}>\n        {children}\n        {actions && <Actions items={actions} />}\n      </Flex>\n    </StyledFieldGroupLegend>\n  );\n};\n\nconst FieldGroup: FunctionComponent<FieldGroupProps & ForwardProps> = forwardRef(\n  (\n    {\n      children,\n      name,\n      actions,\n      collapsible = false,\n      defaultCollapsed = false,\n      ...restProps\n    }: PropsWithoutRef<FieldGroupProps>,\n    ref: FieldGroupProps['ref']\n  ) => {\n    const [open, setOpen] = useState(!defaultCollapsed);\n    const t = useI18n();\n\n    return (\n      <StyledFieldGroup aria-label={name} {...restProps} ref={ref}>\n        {name && (\n          <FieldGroupLegend open={open} actions={actions}>\n            {collapsible ? (\n              <Button\n                type='button'\n                variant='text'\n                onClick={() => {\n                  setOpen(cur => !cur);\n                }}\n                aria-expanded={open ? 'true' : 'false'}\n                aria-label={t(open ? 'collapse_noun' : 'expand_noun', [name])}\n              >\n                <Flex\n                  container={{ direction: 'row', alignItems: 'center', gap: 0.5 }}\n                  forwardedAs='span'\n                >\n                  <Icon name='caret-right' />\n                  <span>{name}</span>\n                </Flex>\n              </Button>\n            ) : (\n              <span>{name}</span>\n            )}\n          </FieldGroupLegend>\n        )}\n        {collapsible ? <ExpandCollapse collapsed={!open}>{children}</ExpandCollapse> : children}\n      </StyledFieldGroup>\n    );\n  }\n);\n\nexport default FieldGroup;\n","import { forwardRef, Ref, FC } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport Actions from '../Actions';\nimport Flex from '../Flex';\nimport EmptyState from '../EmptyState';\nimport SearchInput, { SearchInputProps, StyledSearchInput } from '../SearchInput';\nimport { defaultThemeProp } from '../../theme';\nimport Progress from '../Progress';\nimport { StyledCard } from '../Card';\nimport { StyledCardContent } from '../Card/CardContent';\nimport { omitProps } from '../../styles';\nimport type { ForwardProps } from '../../types';\n\nimport SummaryList, { SummaryListProps } from './SummaryList';\n\nexport interface ViewAllProps extends Pick<SummaryListProps, 'loading' | 'actions' | 'items'> {\n  searchInputProps?: SearchInputProps;\n  ref?: Ref<HTMLDivElement>;\n}\n\nconst StyledToolbar = styled.div(({ theme: { base } }) => {\n  return css`\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    background-color: ${base.palette['primary-background']};\n    margin-bottom: ${base.spacing};\n    transform: translateY(calc(-0.5 * ${base.spacing}));\n    padding: ${base.spacing} 0;\n\n    ${StyledSearchInput} {\n      flex-grow: 1;\n    }\n  `;\n});\n\nStyledToolbar.defaultProps = defaultThemeProp;\n\nexport const StyledViewAll = styled.div.withConfig<{ loading: ViewAllProps['loading'] }>(\n  omitProps('loading')\n)(\n  ({ loading }) => css`\n    ${StyledCardContent}:not(${StyledCard} ${StyledCard} > ${StyledCardContent}) {\n      padding: 0;\n    }\n\n    ${loading &&\n    css`\n      min-height: 8rem;\n    `}\n  `\n);\n\nconst SearchableList: FC<ViewAllProps & ForwardProps> = forwardRef(\n  ({ loading, actions, items, searchInputProps, ...restProps }, ref: ViewAllProps['ref']) => {\n    return (\n      <StyledViewAll ref={ref} loading={loading} {...restProps}>\n        {!loading && (searchInputProps || actions) && (\n          <Flex container={{ justify: 'between', alignItems: 'center', gap: 2 }} as={StyledToolbar}>\n            {searchInputProps && (\n              <Flex container={{ alignItems: 'center', gap: 1 }} item={{ grow: 1 }}>\n                <SearchInput onSearchChange={searchInputProps.onSearchChange} />\n              </Flex>\n            )}\n            {actions && <Actions iconOnly={false} items={actions} />}\n          </Flex>\n        )}\n\n        {loading && <Progress placement='local' />}\n        {!loading && (items.length ? <SummaryList items={items} /> : <EmptyState />)}\n      </StyledViewAll>\n    );\n  }\n);\n\nexport default SearchableList;\n","import { forwardRef, FunctionComponent, PropsWithoutRef, Ref } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { StyledFormControl } from '../../FormControl';\nimport { defaultThemeProp } from '../../../theme';\nimport Flex from '../../Flex';\nimport { ForwardProps } from '../../../types';\nimport { StyledButton } from '../../Button';\n\nimport SingleSelectInputProps from './SingleSelectInput.types';\n\nconst StyledSingleInput = styled.div(props => {\n  const {\n    theme: {\n      base,\n      components: {\n        'form-control': formControl,\n        input: { height }\n      }\n    }\n  } = props;\n\n  return css`\n    height: ${height};\n\n    @media (pointer: coarse) {\n      min-height: ${base['hit-area']['finger-min']};\n    }\n\n    &:focus-within {\n      border-color: ${formControl[':focus']['border-color']};\n      box-shadow: ${formControl[':focus']['box-shadow']};\n    }\n\n    &:hover:not([readonly]):not([disabled]):focus-within {\n      border-color: transparent;\n    }\n\n    input {\n      min-width: 0;\n      width: 100%;\n      color: ${formControl['foreground-color']};\n      text-overflow: ellipsis;\n      margin-inline-start: ${base.spacing};\n    }\n\n    input,\n    input:focus {\n      border: none;\n      outline: none;\n      flex-grow: 1;\n      background-color: transparent;\n\n      &:read-only {\n        cursor: default;\n      }\n    }\n\n    > ${StyledButton} {\n      border-radius: calc(${base['border-radius']} * ${formControl['border-radius']});\n      min-height: calc(${height} - 2 * ${formControl['border-width']});\n      height: calc(${height} - 2 * ${formControl['border-width']});\n    }\n  `;\n});\n\nStyledSingleInput.defaultProps = defaultThemeProp;\n\nconst SingleSelectInput: FunctionComponent<SingleSelectInputProps & ForwardProps> = forwardRef(\n  (props: PropsWithoutRef<SingleSelectInputProps>, ref: Ref<HTMLInputElement>) => {\n    const { value, readOnly, disabled, status, actions, onChange, selected, ...restProps } = props;\n\n    return (\n      <Flex\n        as={StyledSingleInput}\n        forwardedAs={StyledFormControl}\n        container={{ alignItems: 'center', wrap: 'nowrap' }}\n        {...{\n          disabled,\n          status,\n          readOnly\n        }}\n      >\n        <input\n          {...{\n            ref,\n            disabled,\n            status,\n            readOnly\n          }}\n          value={value || selected?.text || ''}\n          // no-op avoids react uncontrolled warning\n          onChange={onChange || (() => {})}\n          readOnly={readOnly || !onChange}\n          autoComplete='off'\n          {...restProps}\n        />\n        {actions}\n      </Flex>\n    );\n  }\n);\n\nexport default SingleSelectInput;\n","import { forwardRef, FunctionComponent, Ref, PropsWithoutRef } from 'react';\n\nimport { BaseProps, ForwardProps } from '../../types';\nimport { MenuItemProps } from '../Menu/Menu.types';\n\nimport SingleSelectInput from './SingleSelectInput/SingleSelectInput';\nimport MultiSelectInput from './MultiSelectInput/MultiSelectInput';\nimport ComboBoxProps, { Selected } from './ComboBox.types';\n\ninterface ComboBoxInputProps extends BaseProps {\n  mode?: 'multi-select' | 'single-select';\n  selected?: Selected | Selected[];\n  value?: ComboBoxProps['value'];\n  onRemove?: (id: MenuItemProps['id'], index: number) => void;\n}\n\nconst ComboBoxInput: FunctionComponent<ComboBoxInputProps & ForwardProps> = forwardRef(\n  (props: PropsWithoutRef<ComboBoxInputProps>, ref: Ref<HTMLInputElement>) => {\n    const { value, mode, selected, onRemove, ...restProps } = props;\n\n    return mode === 'multi-select' ? (\n      <MultiSelectInput\n        selected={selected as Selected[]}\n        value={value}\n        {...{\n          ref,\n          onRemove\n        }}\n        {...restProps}\n      />\n    ) : (\n      <SingleSelectInput ref={ref} selected={selected as Selected} value={value} {...restProps} />\n    );\n  }\n);\n\nexport default ComboBoxInput;\n","import {\n  forwardRef,\n  FunctionComponent,\n  KeyboardEvent as ReactKeyboardEvent,\n  PropsWithoutRef,\n  Ref,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport styled from 'styled-components';\nimport { hideVisually } from 'polished';\n\nimport Icon, { registerIcon } from '../Icon';\nimport * as caretDownIcon from '../Icon/icons/caret-down.icon';\nimport * as caretUpIcon from '../Icon/icons/caret-up.icon';\nimport { ForwardProps } from '../../types';\nimport { useConsolidatedRef, useFocusWithin, useI18n, useUID, useElement } from '../../hooks';\nimport Popover, { PopoverProps, StyledPopover } from '../Popover';\nimport FormField from '../FormField';\nimport { StyledFormControl } from '../FormControl';\nimport Menu, { MenuProps } from '../Menu';\nimport Button from '../Button';\nimport { navigatorIsAvailable } from '../../utils';\nimport menuHelpers from '../Menu/helpers';\n\nimport ComboBoxInput from './ComboBoxInput';\nimport ComboBoxProps from './ComboBox.types';\n\nregisterIcon(caretDownIcon, caretUpIcon);\n\nconst popoverModifiers: PopoverProps['modifiers'] = [\n  {\n    name: 'flip',\n    enabled: true,\n    options: {\n      fallbackPlacements: ['top-start']\n    }\n  },\n  {\n    name: 'preventOverflow',\n    enabled: true\n  },\n  {\n    name: 'hide',\n    enabled: false\n  },\n  {\n    name: 'sameWidth',\n    enabled: true,\n    phase: 'beforeWrite',\n    fn({ state }) {\n      state.styles.popper.width = `${state.rects.reference.width}px`;\n    },\n    requires: ['computeStyles']\n  }\n];\n\nexport const StyledComboBox = styled(StyledFormControl)`\n  border: 0;\n\n  & ${StyledPopover} {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n`;\n\nconst StyledAriaDescription = styled.p`\n  ${hideVisually}\n`;\n\nconst isMobile = navigatorIsAvailable && navigator.userAgent.includes('Mobile');\n\nconst ComboBox: FunctionComponent<ComboBoxProps & ForwardProps> = forwardRef(\n  (props: PropsWithoutRef<ComboBoxProps>, ref: Ref<HTMLDivElement>) => {\n    const uid = useUID();\n    const {\n      value,\n      required,\n      id = uid,\n      label,\n      labelHidden,\n      info,\n      status,\n      readOnly,\n      disabled,\n      mode = 'single-select',\n      selected,\n      onChange,\n      actions,\n      onFocus,\n      onBlur,\n      onDropdownButtonClick: onDropdownButtonClickProp,\n      onClick,\n      menu,\n      ...restProps\n    } = props;\n\n    const t = useI18n();\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [open, setOpen] = useState(false);\n    const menuRef: MenuProps['ref'] = useRef(null);\n    const menuComponentId = `${id}-listbox`;\n\n    // Force a re-render to make sure useFocusWithin has valid elements to set listeners on.\n    const [, setContainerEl] = useElement();\n    const containerRef = useConsolidatedRef<HTMLDivElement>(ref, setContainerEl);\n\n    const focus = useFocusWithin([containerRef], focused => {\n      if (!focused) {\n        setOpen(false);\n        onBlur?.(selected?.items);\n      } else {\n        onFocus?.(selected?.items);\n        if (isMobile) {\n          setTimeout(() => {\n            containerRef.current?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n          }, 150); // delay it to let keyboard expand first\n        }\n      }\n    });\n\n    const onInputKeyDown = useCallback(\n      (e: ReactKeyboardEvent<HTMLInputElement>) => {\n        if (!menu || readOnly) return;\n        switch (e.key) {\n          case 'ArrowDown':\n            e.preventDefault();\n            if (!open) setOpen(true);\n            break;\n          case 'Escape':\n            e.preventDefault();\n            if (open) e.stopPropagation();\n            setOpen(false);\n            break;\n          default:\n        }\n      },\n      [open, readOnly, menu, value]\n    );\n\n    const onDropdownButtonClick = useCallback(() => {\n      onDropdownButtonClickProp?.(!open);\n      setOpen(!open);\n    }, [open, onDropdownButtonClickProp]);\n\n    const dropdownButton = useMemo(() => {\n      return (menu?.items?.length || onDropdownButtonClickProp || !onChange) && !readOnly ? (\n        <Button\n          aria-label={t(\n            open ? 'combobox_close_list_button_a11y' : 'combobox_open_list_button_a11y'\n          )}\n          icon\n          variant='simple'\n          onClick={onDropdownButtonClick}\n          disabled={disabled}\n          tabIndex='-1'\n        >\n          <Icon name={open ? 'caret-up' : 'caret-down'} />\n        </Button>\n      ) : null;\n    }, [onDropdownButtonClick, onChange, readOnly, open, disabled]);\n\n    const onInputClick = useCallback(\n      (e: MouseEvent) => {\n        if (readOnly) return;\n        setOpen(true);\n        onClick?.(e);\n      },\n      [readOnly, onClick]\n    );\n\n    useEffect(() => {\n      if (focus && menu && value && value.length > 0) {\n        setOpen(true);\n      }\n    }, [menu, value, focus]);\n\n    // Workaround for the following error from jsx-ast-utils, fixed in version 3.5.0.\n    // The prop value with an expression type of JSXFragment could not be resolved. Please file issue to get this fixed immediately.\n    const inputActions = (\n      <>\n        {dropdownButton}\n        {actions}\n      </>\n    );\n\n    const Comp = (\n      <StyledComboBox ref={containerRef} as={StyledFormControl} id={`${id}-combobox`}>\n        <ComboBoxInput\n          ref={inputRef}\n          role='combobox'\n          aria-haspopup='listbox'\n          aria-expanded={!readOnly && !disabled && open}\n          aria-autocomplete='list'\n          aria-describedby={`${id}-inputDescription`}\n          selected={selected?.items}\n          spellCheck={false}\n          {...{\n            id,\n            readOnly,\n            disabled,\n            onChange,\n            value,\n            mode,\n            status\n          }}\n          actions={inputActions}\n          onRemove={selected?.onRemove}\n          onClick={onInputClick}\n          onKeyDown={onInputKeyDown}\n          {...restProps}\n        />\n\n        <StyledAriaDescription id={`${id}-inputDescription`}>\n          {t('combobox_open_close')}\n          {!!onChange && ` ${t('combobox_search_instructions')}`}\n        </StyledAriaDescription>\n\n        <Popover\n          show={open && menu !== undefined}\n          target={containerRef.current}\n          placement='bottom-start'\n          modifiers={popoverModifiers}\n          strategy={isMobile ? 'absolute' : 'fixed'}\n          onMouseDown={(e: MouseEvent) => e.preventDefault()}\n        >\n          {menu && (\n            <Menu\n              ref={menuRef}\n              id={menuComponentId}\n              role='listbox'\n              mode={mode}\n              {...menu}\n              items={menu.items}\n              focusControlEl={inputRef.current || undefined}\n              onItemClick={(itemId, e) => {\n                if (mode === 'single-select') {\n                  setOpen(false);\n                }\n                menu.onItemClick?.(itemId, e);\n\n                const clickedItem = menuHelpers.getItem(menu.items, itemId);\n\n                if (clickedItem?.primary && !clickedItem?.selected) {\n                  selected?.onNew?.(clickedItem?.primary);\n                }\n              }}\n              arrowNavigationUnsupported\n            />\n          )}\n        </Popover>\n      </StyledComboBox>\n    );\n\n    return label ? (\n      <FormField {...{ label, labelHidden, id, info, status, required, disabled }}>\n        {Comp}\n      </FormField>\n    ) : (\n      Comp\n    );\n  }\n);\n\nexport default ComboBox;\n","import { useEffect, useRef, useState } from 'react';\n\nimport {\n  ComboBox,\n  RadioButtonGroup,\n  RadioButton,\n  Flex,\n  useI18n,\n  Input,\n  getFocusables\n} from '@pega/cosmos-react-core';\n\nimport type { Role, StakeholdersProps } from './Stakeholders.types';\n\ninterface FormProps\n  extends Pick<StakeholdersProps['form'], 'roles' | 'currentRole' | 'renderer' | 'rendererProps'> {\n  setSelectedRoleNameRef: (selectedRoleName?: string | undefined) => void;\n}\n\nexport default ({\n  roles,\n  currentRole,\n  renderer: Renderer,\n  rendererProps,\n  setSelectedRoleNameRef\n}: FormProps) => {\n  const contentRef = useRef<HTMLElement>(null);\n  const t = useI18n();\n\n  const [selectedRoleName, setSelectedRoleName] = useState<Role['name'] | undefined>(() => {\n    if (roles) {\n      return (currentRole ? roles.find(role => role.name === currentRole.name) : roles[0])?.name;\n    }\n  });\n\n  let control: JSX.Element | null = null;\n\n  if (roles) {\n    const label = t('role');\n\n    if (roles.length > 3) {\n      const items = roles.map(role => {\n        return {\n          id: role.name,\n          primary: role.name,\n          selected: role.name === selectedRoleName\n        };\n      });\n\n      const selected = items.find(item => item.selected);\n\n      control = (\n        <ComboBox\n          label={label}\n          selected={selected ? { items: { id: selected.id, text: selected.primary } } : undefined}\n          menu={{\n            mode: 'single-select',\n            items,\n            onItemClick: setSelectedRoleName\n          }}\n        />\n      );\n    } else {\n      control = (\n        <RadioButtonGroup\n          label={label}\n          name='role'\n          inline\n          onChange={e => {\n            setSelectedRoleName(e.target.value);\n          }}\n        >\n          {roles.map(role => (\n            <RadioButton\n              key={role.name}\n              label={role.name}\n              value={role.name}\n              checked={role.name === selectedRoleName}\n            />\n          ))}\n        </RadioButtonGroup>\n      );\n    }\n  } else if (currentRole) {\n    control = (\n      <Input readOnly label={t('role')} value={currentRole.name} info={currentRole.description} />\n    );\n  }\n\n  useEffect(() => {\n    getFocusables(contentRef)[0]?.focus();\n  }, []);\n\n  useEffect(() => {\n    if (!roles) return;\n    setSelectedRoleNameRef(selectedRoleName);\n  }, [selectedRoleName]);\n\n  return (\n    <Flex container={{ direction: 'column', gap: 2 }} ref={contentRef}>\n      {control}\n      <Renderer {...rendererProps} selectedRoleName={selectedRoleName} />\n    </Flex>\n  );\n};\n","import {\n  forwardRef,\n  FunctionComponent,\n  PropsWithoutRef,\n  useContext,\n  useRef,\n  useEffect,\n  useMemo,\n  useState,\n  ReactNode,\n  useCallback\n} from 'react';\nimport styled from 'styled-components';\nimport { createPortal } from 'react-dom';\n\nimport {\n  SummaryList,\n  ModalManagerContext,\n  useI18n,\n  ModalMethods,\n  Button,\n  ViewAll,\n  Modal,\n  Popover,\n  Flex,\n  Text,\n  useOuterEvent,\n  cap,\n  Progress,\n  useAfterInitialEffect\n} from '@pega/cosmos-react-core';\nimport type { Action, ForwardProps, ModalProps, OmitStrict } from '@pega/cosmos-react-core';\n\nimport type { Role, StakeholdersProps } from './Stakeholders.types';\nimport StakeholderForm from './StakeholderForm';\n\nconst StyledStakeholders = styled(SummaryList)``;\n\nconst StyledEditFormWrap = styled.div`\n  position: relative;\n  min-height: 8rem;\n\n  &[aria-busy='true'] > :nth-child(2) {\n    visibility: hidden;\n  }\n`;\n\nconst StyledPopover = styled(Popover)`\n  width: 40ch;\n  min-height: 12rem;\n`;\n\nconst Stakeholders: FunctionComponent<StakeholdersProps & ForwardProps> = forwardRef(\n  (\n    {\n      items: itemsProp,\n      count,\n      loading,\n      onAddNew,\n      form,\n      onViewAll,\n      viewAll,\n      error,\n      ...restProps\n    }: PropsWithoutRef<StakeholdersProps>,\n    ref: StakeholdersProps['ref']\n  ) => {\n    const { create: createModal } = useContext(ModalManagerContext);\n    const t = useI18n();\n    const modalMethods = useRef<ModalMethods>();\n    const [mode, setMode] = useState<undefined | 'add' | 'viewAll'>();\n    const [editing, setEditing] = useState(false);\n    const popoverRef = useRef<HTMLDivElement>(null);\n    const progressMsgRef = useRef(t('loading'));\n\n    // Why? Don't think this should trigger a re-render. We just need the value when we invoke callback props.\n    const selectedRoleNameRef = useRef<Role['name'] | undefined>();\n    // Setter for the ref. Avoids a re-render.\n    const setSelectedRoleNameRef = useCallback((selectedRoleName?: Role['name']) => {\n      selectedRoleNameRef.current = selectedRoleName;\n    }, []);\n\n    const [popoverTarget, setPopoverTarget] = useState<{\n      portal: HTMLLIElement;\n      button: HTMLButtonElement | null;\n    } | null>(null);\n\n    const itemElsRef = useRef<{ itemEls: HTMLLIElement[]; viewAllItemEls: HTMLLIElement[] }>({\n      itemEls: [],\n      viewAllItemEls: []\n    });\n\n    // This function merges the pre-defined actions(add & edit) to the item object.\n    const mergeItemActions = (\n      items: StakeholdersProps['items'] | NonNullable<StakeholdersProps['viewAll']>['items']\n    ) => {\n      return items.map(({ onEdit, onRemove, ...rest }, i) => {\n        let itemActions: Action[] = [];\n        const elArray = itemElsRef.current[mode === 'viewAll' ? 'viewAllItemEls' : 'itemEls'];\n\n        if (onEdit) {\n          itemActions = [\n            {\n              id: 'edit',\n              text: t('edit'),\n              icon: 'pencil',\n              onClick: () => {\n                setEditing(true);\n                setPopoverTarget({\n                  portal: elArray[i],\n                  button: elArray[i].querySelector<HTMLButtonElement>(\n                    'button[aria-haspopup=\"menu\"]'\n                  )\n                });\n\n                onEdit?.();\n              }\n            }\n          ];\n        }\n\n        if (onRemove) {\n          itemActions = [\n            ...itemActions,\n            {\n              id: 'remove',\n              text: t('remove'),\n              icon: 'trash',\n              onClick: () => {\n                onRemove?.();\n              }\n            }\n          ];\n        }\n\n        return {\n          ...rest,\n          ref: (el: HTMLLIElement) => {\n            elArray[i] = el;\n          },\n          actions: itemActions\n        };\n      });\n    };\n\n    const closePopover = () => {\n      if (!popoverTarget || (form.loading && progressMsgRef.current === t('submitting'))) return;\n      popoverTarget.button?.focus();\n      setPopoverTarget(null);\n      setEditing(false);\n      progressMsgRef.current = t('loading');\n    };\n\n    let formContent: ReactNode = null;\n    if (\n      (mode === 'add' || editing) &&\n      (!form.loading || progressMsgRef.current === t('submitting'))\n    ) {\n      formContent = (\n        <StakeholderForm\n          roles={form.roles}\n          currentRole={form.currentRole}\n          renderer={form.renderer}\n          rendererProps={form.rendererProps}\n          setSelectedRoleNameRef={setSelectedRoleNameRef}\n        />\n      );\n    }\n\n    // Actions used for add and edit both in the modal and the popover.\n    let formActions: ReactNode = null;\n    if (\n      (mode === 'add' || editing) &&\n      (!form.loading || progressMsgRef.current === t('submitting'))\n    ) {\n      const closeForm = () => {\n        if (mode === 'add') {\n          modalMethods.current?.dismiss();\n        } else {\n          closePopover();\n        }\n      };\n\n      formActions = (\n        <>\n          <Button\n            disabled={form.loading}\n            onClick={() => {\n              form.onDismiss({ closeForm });\n            }}\n          >\n            {t('cancel')}\n          </Button>\n          <Button\n            disabled={form.loading}\n            type='submit'\n            variant='primary'\n            onClick={() => {\n              progressMsgRef.current = t('submitting');\n              form.onSubmit({\n                selectedRoleName: selectedRoleNameRef.current,\n                closeForm\n              });\n            }}\n          >\n            {t('submit')}\n          </Button>\n        </>\n      );\n    }\n\n    // Content for the modal either for adding new or viewing all.\n    let modalContent: ReactNode = null;\n    if (mode === 'add') modalContent = formContent;\n\n    if (!viewAll.loading && (mode === 'viewAll' || (editing && modalMethods.current))) {\n      modalContent = (\n        <ViewAll\n          items={mergeItemActions(viewAll.items)}\n          actions={[\n            {\n              id: 'addStakeHolder',\n              text: 'Add new',\n              onClick: () => {\n                setMode('add');\n                onAddNew?.();\n              }\n            }\n          ]}\n          searchInputProps={\n            viewAll.onSearch\n              ? {\n                  onSearchChange: viewAll.onSearch\n                }\n              : undefined\n          }\n        />\n      );\n    }\n\n    useEffect(() => {\n      if (!mode) {\n        modalMethods.current = undefined;\n        return;\n      }\n\n      const modalProps: OmitStrict<ModalProps, 'heading'> = {\n        progress:\n          (mode === 'add' && form.loading) || viewAll.loading\n            ? { message: progressMsgRef.current }\n            : undefined,\n        count: mode === 'viewAll' ? count : undefined,\n        children: modalContent,\n        actions: mode === 'add' ? formActions : undefined,\n        onRequestDismiss:\n          form.loading && progressMsgRef.current === t('submitting') ? () => false : undefined\n      };\n\n      if (modalMethods.current) {\n        modalMethods.current.update(modalProps);\n      } else if (mode === 'add' || mode === 'viewAll') {\n        modalMethods.current = createModal(Modal, {\n          ...modalProps,\n          heading:\n            mode === 'add'\n              ? t('add_noun', [t('stakeholders', [], { count: 1 })])\n              : cap(t('stakeholders')),\n          onAfterClose: () => {\n            if (mode === 'add') {\n              form.onAfterClose?.();\n            } else {\n              viewAll.onAfterClose?.();\n            }\n\n            progressMsgRef.current = t('loading');\n            setMode(undefined);\n          }\n        });\n      }\n    }, [mode, modalContent, form.loading, formActions, count, viewAll.loading]);\n\n    // Using mousedown instead of click since drag selecting an input's value within the popover, then releasing outside the popover triggers outer click.\n    useOuterEvent('mousedown', [popoverRef], closePopover);\n\n    let editPopover: ReactNode = null;\n    if (popoverTarget) {\n      editPopover = (\n        <StyledPopover\n          ref={popoverRef}\n          target={popoverTarget.button}\n          placement='auto'\n          role='dialog'\n        >\n          <Flex container={{ direction: 'column', gap: 2, pad: 2 }}>\n            <Text variant='h3'>{t('edit_noun', [t('stakeholders', [], { count: 1 })])}</Text>\n            <StyledEditFormWrap aria-busy={form.loading ? 'true' : 'false'}>\n              <Progress placement='local' visible={form.loading} message={progressMsgRef.current} />\n              {(!form.loading || progressMsgRef.current === t('submitting')) && (\n                <StakeholderForm\n                  roles={form.roles}\n                  currentRole={form.currentRole}\n                  renderer={form.renderer}\n                  rendererProps={form.rendererProps}\n                  setSelectedRoleNameRef={setSelectedRoleNameRef}\n                />\n              )}\n            </StyledEditFormWrap>\n            {formActions && <Flex container={{ justify: 'between' }}>{formActions}</Flex>}\n          </Flex>\n        </StyledPopover>\n      );\n    }\n\n    const onKeydown = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        closePopover();\n      }\n    };\n\n    useEffect(() => {\n      if (!popoverTarget) return;\n      document.addEventListener('keydown', onKeydown);\n      return () => {\n        document.removeEventListener('keydown', onKeydown);\n      };\n    }, [popoverTarget]);\n\n    useAfterInitialEffect(() => {\n      if (!popoverTarget) form.onAfterClose?.();\n    }, [popoverTarget]);\n\n    return (\n      <>\n        <StyledStakeholders\n          {...restProps}\n          ref={ref}\n          icon='person'\n          name={cap(t('stakeholders'))}\n          loading={loading}\n          count={count}\n          error={error}\n          items={useMemo(\n            () => mergeItemActions(itemsProp.slice(0, 3)),\n            [mergeItemActions, itemsProp]\n          )}\n          actions={\n            onAddNew\n              ? [\n                  {\n                    text: t('add_noun', [t('stakeholders', [], { count: 1 })]),\n                    id: 'addNew',\n                    icon: 'plus',\n                    onClick() {\n                      setMode('add');\n                      onAddNew?.();\n                    }\n                  }\n                ]\n              : undefined\n          }\n          onViewAll={\n            onViewAll && count && count > 3\n              ? () => {\n                  setMode('viewAll');\n                  onViewAll?.();\n                }\n              : undefined\n          }\n        />\n        {popoverTarget && createPortal(editPopover, popoverTarget.portal)}\n      </>\n    );\n  }\n);\n\nexport default Stakeholders;\n","// This file is autogenerated. Any changes will be overwritten.\nexport const name = 'caret-down';\n\nexport const Component = () => (\n  <path d='M12.1476563,16.5726562 C12.1476563,16.5726562 3.2875,9.72421875 3.2875,9.72421875 C3.2875,9.72421875 3.14375,9.58046875 3.14375,9.58046875 C3.04765625,9.3890625 3,9.19765625 3,9.00546875 C3,9.00546875 3,9.00546875 3,9.00546875 C3,8.33515625 3.33515625,8 3.9578125,8 C3.9578125,8 3.9578125,8 3.9578125,8 C4.1015625,8 4.29296875,8.09609375 4.628125,8.2390625 C4.628125,8.2390625 4.628125,8.2390625 4.628125,8.2390625 C4.628125,8.2390625 12.8179688,14.2257813 12.8179688,14.2257813 C12.8179688,14.2257813 21.103125,8.19140625 21.103125,8.19140625 C21.3421875,8.04765625 21.534375,8 21.678125,8 C21.678125,8 21.678125,8 21.678125,8 C22.3007813,8 22.6359375,8.33515625 22.6359375,9.00546875 C22.6359375,9.00546875 22.6359375,9.00546875 22.6359375,9.00546875 C22.6359375,9.196875 22.5882813,9.38828125 22.4921875,9.58046875 C22.4921875,9.58046875 22.4921875,9.58046875 22.4921875,9.58046875 C22.4921875,9.58046875 22.3484375,9.72421875 22.3484375,9.72421875 C22.3484375,9.72421875 13.4882812,16.525 13.4882812,16.525 C13.296875,16.7164063 13.0570312,16.8125 12.8179688,16.8125 C12.8179688,16.8125 12.8179688,16.8125 12.8179688,16.8125 C12.5789062,16.8125 12.3867188,16.7164062 12.1476563,16.5734375 C12.1476563,16.5734375 12.1476563,16.5734375 12.1476563,16.5734375 L12.1476563,16.5726562 Z' />\n);\n\nexport const viewBox = '0 0 25 25';\n","// This file is autogenerated. Any changes will be overwritten.\nexport const name = 'caret-up';\n\nexport const Component = () => (\n  <path d='M13.4882812,8.23984375 C13.4882812,8.23984375 22.3484375,15.0882812 22.3484375,15.0882812 C22.3484375,15.0882812 22.4921875,15.2320313 22.4921875,15.2320313 C22.5882813,15.4234375 22.6359375,15.6148437 22.6359375,15.8070313 C22.6359375,15.8070313 22.6359375,15.8070313 22.6359375,15.8070313 C22.6359375,16.4773438 22.3007813,16.8125 21.678125,16.8125 C21.678125,16.8125 21.678125,16.8125 21.678125,16.8125 C21.534375,16.8125 21.3429688,16.7164062 21.0078125,16.5734375 C21.0078125,16.5734375 21.0078125,16.5734375 21.0078125,16.5734375 C21.0078125,16.5734375 12.8179688,10.5867187 12.8179688,10.5867187 C12.8179688,10.5867187 4.5328125,16.6210938 4.5328125,16.6210938 C4.29375,16.7648438 4.1015625,16.8125 3.9578125,16.8125 C3.9578125,16.8125 3.9578125,16.8125 3.9578125,16.8125 C3.33515625,16.8125 3,16.4773438 3,15.8070313 C3,15.8070313 3,15.8070313 3,15.8070313 C3,15.615625 3.04765625,15.4242188 3.14375,15.2320313 C3.14375,15.2320313 3.14375,15.2320313 3.14375,15.2320313 C3.14375,15.2320313 3.2875,15.0882812 3.2875,15.0882812 C3.2875,15.0882812 12.1476563,8.2875 12.1476563,8.2875 C12.3390625,8.09609375 12.5789062,8 12.8179688,8 C12.8179688,8 12.8179688,8 12.8179688,8 C13.0570312,8 13.2492188,8.09609375 13.4882812,8.2390625 C13.4882812,8.2390625 13.4882812,8.2390625 13.4882812,8.2390625 L13.4882812,8.23984375 Z' />\n);\n\nexport const viewBox = '0 0 25 25';\n"],"sourceRoot":""}