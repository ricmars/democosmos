{"version":3,"file":"static/js/64654.881244cc.chunk.js","mappings":"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","sources":["../node_modules/@pega/cosmos-react-core/src/components/ComboBox/ComboBox.styles.ts","../node_modules/@pega/cosmos-react-core/src/components/ComboBox/MultiSelectInput/MultiSelectInput.tsx","../node_modules/@pega/cosmos-react-core/src/components/FieldGroup/FieldGroup.tsx","../node_modules/@pega/cosmos-react-core/src/components/Icon/icons/caret-up.icon.tsx","../node_modules/@pega/cosmos-react-core/src/components/SummaryList/ViewAll.tsx","../node_modules/@pega/cosmos-react-core/src/components/ComboBox/SingleSelectInput/SingleSelectInput.tsx","../node_modules/@pega/cosmos-react-core/src/components/ComboBox/ComboBoxInput.tsx","../node_modules/@pega/cosmos-react-core/src/components/ComboBox/ComboxBox.test-ids.ts","../node_modules/@pega/cosmos-react-core/src/components/ComboBox/ComboBox.tsx","../node_modules/@pega/cosmos-react-work/src/components/Stakeholders/StakeholderForm.tsx","../node_modules/@pega/cosmos-react-work/src/components/Stakeholders/Stakeholders.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../theme';\nimport { StyledButton } from '../Button';\nimport { StyledFormControl } from '../FormControl';\nimport { StyledPopover } from '../Popover';\nimport { StyledMenu, StyledMenuListWrapper } from '../Menu/Menu.styles';\n\nexport const StyledSelectInput = styled.div(({ theme: { base, components } }) => {\n  return css`\n    @media (pointer: coarse) {\n      min-height: ${base['hit-area']['finger-min']};\n    }\n\n    div {\n      min-height: ${components.input.height};\n    }\n\n    &:focus-within {\n      border-color: ${components['form-control'][':focus']['border-color']};\n      box-shadow: ${components['form-control'][':focus']['box-shadow']};\n    }\n\n    &:hover:not([readonly]):not([disabled]):focus-within {\n      border-color: transparent;\n    }\n\n    input {\n      min-width: 0;\n      width: 100%;\n      height: calc(${components.input.height} - 2 * ${components['form-control']['border-width']});\n      color: ${components['form-control']['foreground-color']};\n      text-overflow: ellipsis;\n      margin-inline: ${base.spacing};\n    }\n\n    input,\n    input:focus {\n      border: none;\n      outline: none;\n      flex-grow: 1;\n      background-color: transparent;\n\n      &:read-only {\n        cursor: default;\n      }\n    }\n\n    & > ${StyledButton} {\n      align-self: stretch;\n      height: auto;\n      margin-block: -0.0625rem;\n      margin-inline-end: -0.0625rem;\n      border-start-start-radius: 0;\n      border-start-end-radius: calc(\n        ${base['border-radius']} * ${components['form-control']['border-radius']}\n      );\n      border-end-start-radius: 0;\n      border-end-end-radius: calc(\n        ${base['border-radius']} * ${components['form-control']['border-radius']}\n      );\n    }\n  `;\n});\n\nStyledSelectInput.defaultProps = defaultThemeProp;\n\nexport const StyledComboBox = styled(StyledFormControl)(() => {\n  return css`\n    border: 0;\n\n    ${StyledPopover} {\n      border-top-left-radius: 0;\n      border-top-right-radius: 0;\n\n      ${StyledMenu},\n      ${StyledMenuListWrapper} {\n        max-height: inherit;\n      }\n    }\n  `;\n});\n\nStyledComboBox.defaultProps = defaultThemeProp;\n","import {\n  FunctionComponent,\n  forwardRef,\n  Ref,\n  PropsWithoutRef,\n  KeyboardEvent,\n  useRef,\n  useCallback,\n  useMemo,\n  useState,\n  useEffect,\n  MouseEvent\n} from 'react';\nimport styled, { css } from 'styled-components';\nimport { transparentize } from 'polished';\n\nimport { ForwardProps } from '../../../types';\nimport { defaultThemeProp } from '../../../theme';\nimport Selectable, { StyledSelectable } from '../../Badges/Selection';\nimport { StyledFormControl } from '../../FormControl';\nimport Flex from '../../Flex';\nimport {\n  useConsolidatedRef,\n  useActiveDescendant,\n  useDirection,\n  useI18n,\n  useUID\n} from '../../../hooks';\nimport { cap, tryCatch } from '../../../utils';\nimport { StyledBareButton } from '../../Button/BareButton';\nimport VisuallyHiddenText from '../../VisuallyHiddenText';\nimport { StyledSelectInput } from '../ComboBox.styles';\n\nimport { MultiSelectInputProps } from './MultiSelectInput.types';\n\nexport const StyledMultiSelectInput = styled(StyledSelectInput)(({ theme }) => {\n  const { background } = theme.components.badges.selectable.base;\n  const { 'foreground-color': foreground } = theme.base.palette;\n  const boxShadowColor = tryCatch(() => transparentize(0.45, foreground));\n\n  return css`\n    cursor: text;\n\n    ul {\n      list-style: none;\n      display: contents;\n\n      &[data-active-scope='true'] ${StyledSelectable}[data-current='true'] {\n        color: ${theme.base.palette.interactive};\n        box-shadow: 0 0 0.5rem -0.125rem ${boxShadowColor}, inset 0 0 0 0.125rem ${background};\n        outline: none;\n\n        ${StyledBareButton} {\n          color: ${theme.base.palette.interactive};\n        }\n      }\n    }\n\n    input {\n      width: 8ch;\n      height: 1.125rem;\n    }\n  `;\n});\n\nStyledMultiSelectInput.defaultProps = defaultThemeProp;\n\nconst MultiSelectInput: FunctionComponent<MultiSelectInputProps & ForwardProps> = forwardRef(\n  function MultiSelectInput(\n    props: PropsWithoutRef<MultiSelectInputProps>,\n    ref: Ref<HTMLInputElement>\n  ) {\n    const {\n      selected = [],\n      value,\n      onRemove,\n      onChange,\n      onKeyDown,\n      onResolveSuggestion,\n      actions,\n      readOnly,\n      disabled,\n      status,\n      placeholder,\n      autoFocus,\n      pauseDescendantEvaluation,\n      onSelectedFocus,\n      onSelectedBlur,\n      'aria-controls': ariaControls,\n      ...restProps\n    } = props;\n    const t = useI18n();\n    const id = useUID();\n\n    const inputRef = useConsolidatedRef<HTMLInputElement>(ref);\n    const listRef = useRef<HTMLUListElement>(null);\n    const [focusDescendant, setFocusDescendant] = useState<HTMLElement | null>(null);\n    const [activeItemId, setActiveItemId] = useState<string | null>(null);\n    const { start, end } = useDirection();\n\n    const uadConfig = useMemo(\n      () => ({\n        focusEl: inputRef.current,\n        scope: listRef.current,\n        selector: 'li[role=\"option\"]',\n        orientation: 'horizontal' as const,\n        focusReturnEl: focusDescendant,\n        clearFocusReturn: () => {\n          setFocusDescendant(null);\n        },\n        pauseDescendantEvaluation,\n        onClick: (el: HTMLElement) => {\n          el.click();\n        }\n      }),\n      [pauseDescendantEvaluation, selected, focusDescendant]\n    );\n\n    const { activeDescendant } = useActiveDescendant(uadConfig, [selected]);\n\n    const handleSelectedRemoval = useCallback(\n      (selectionId, idx) => {\n        if (!pauseDescendantEvaluation) {\n          if (idx === selected.length - 1) {\n            // If removing last selected item\n            if (selected.length > 1) {\n              // If other selected items, focus previous\n              setFocusDescendant(\n                (listRef.current?.querySelectorAll(uadConfig.selector)[idx - 1] as HTMLElement) ||\n                  null\n              );\n            } else {\n              // Blur selected if final only item removed\n              onSelectedBlur?.();\n            }\n          } else if (selected.length > 1) {\n            // If not last item removed and other selected items, focus next\n            setFocusDescendant(\n              (listRef.current?.querySelectorAll(uadConfig.selector)[idx + 1] as HTMLElement) ||\n                null\n            );\n          }\n        }\n        onRemove?.(selectionId, idx);\n        inputRef.current?.focus();\n      },\n      [selected, onRemove, onSelectedBlur, uadConfig]\n    );\n\n    useEffect(() => {\n      // Maintain active item & prev. val only as it changes.\n      if (activeDescendant?.id && activeDescendant.id !== activeItemId) {\n        setActiveItemId(activeDescendant.id);\n      }\n    }, [activeDescendant]);\n\n    const onInputKeyDown = useCallback(\n      (e: KeyboardEvent<HTMLInputElement>) => {\n        if (selected.length && inputRef.current?.selectionStart === 0) {\n          const lastIndex = selected.length - 1;\n          if (pauseDescendantEvaluation && e.key === `Arrow${cap(start)}`) {\n            setFocusDescendant(\n              (listRef.current?.querySelectorAll(uadConfig.selector)[lastIndex] as HTMLElement) ||\n                null\n            );\n            onSelectedFocus?.();\n          }\n\n          const lastSelectableId = listRef.current?.querySelectorAll(uadConfig.selector)[lastIndex]\n            ?.id;\n          const onLastItem = activeItemId === lastSelectableId;\n\n          if (\n            !pauseDescendantEvaluation &&\n            ((onLastItem && e.key === `Arrow${cap(end)}`) || e.key === 'ArrowDown')\n          ) {\n            onSelectedBlur?.();\n          }\n\n          if (['Backspace', 'Delete'].includes(e.key) && !(readOnly || disabled)) {\n            handleSelectedRemoval(selected[lastIndex].id, lastIndex);\n          }\n        }\n        onKeyDown?.(e);\n      },\n      [\n        pauseDescendantEvaluation,\n        activeItemId,\n        onKeyDown,\n        handleSelectedRemoval,\n        selected,\n        readOnly,\n        disabled\n      ]\n    );\n\n    const ariaDescribedBy = useMemo(() => {\n      return onChange\n        ? `${id}-inputDescription  ${id}-searchDescription`\n        : `${id}-inputDescription`;\n    }, [id]);\n\n    return (\n      <Flex\n        as={StyledMultiSelectInput}\n        forwardedAs={StyledFormControl}\n        hasSuggestion={status === 'pending' && !!onResolveSuggestion}\n        container={{ alignItems: 'center', justify: 'between' }}\n        {...{\n          readOnly,\n          disabled,\n          status\n        }}\n      >\n        <Flex\n          container={{ alignContent: 'center', wrap: 'wrap', rowGap: 0.5, colGap: 0.25, pad: 0.25 }}\n          item={{ grow: 1 }}\n          onClick={(e: MouseEvent<HTMLDivElement>) => {\n            if (\n              e.target instanceof HTMLElement &&\n              !e.currentTarget.contains(e.target.closest('li'))\n            ) {\n              inputRef.current?.focus();\n              inputRef.current?.click();\n            }\n          }}\n        >\n          {selected.length > 0 && (\n            <ul ref={listRef} id={id} role='listbox' aria-label={t('selected_items')}>\n              {selected.map((element, idx) => {\n                return (\n                  <Selectable\n                    as='li'\n                    key={element.id}\n                    role='option'\n                    id={element.id.toString()}\n                    status={status}\n                    onClick={e => {\n                      const mouseClick = e.detail !== 0;\n\n                      if (!readOnly && !disabled && !mouseClick) {\n                        handleSelectedRemoval(element.id, idx);\n                      }\n                    }}\n                    onRemove={() => {\n                      if (!readOnly && !disabled) {\n                        handleSelectedRemoval(element.id, idx);\n                      }\n                    }}\n                    onKeyDown={(e: KeyboardEvent<Element>) => {\n                      // prevent browser's Back on FF\n                      if (e.key === 'Backspace') e.preventDefault();\n                    }}\n                    tabIndex='-1'\n                    aria-label={`${t('remove')} ${element.text}`}\n                    aria-describedby={ariaDescribedBy}\n                  >\n                    {element.text}\n                  </Selectable>\n                );\n              })}\n            </ul>\n          )}\n          <Flex\n            item={{ grow: 1 }}\n            as='input'\n            size={1}\n            ref={inputRef}\n            value={value}\n            // no-op avoids react uncontrolled warning\n            onChange={onChange || (() => {})}\n            onKeyDown={onInputKeyDown}\n            readOnly={readOnly || !onChange}\n            disabled={disabled}\n            placeholder={selected?.length ? undefined : placeholder}\n            autoComplete='off'\n            autoFocus={autoFocus}\n            aria-controls={!pauseDescendantEvaluation ? id : ariaControls}\n            {...restProps}\n            required={undefined}\n          />\n        </Flex>\n        {actions}\n\n        <VisuallyHiddenText id={`${id}-inputDescription`}>\n          {`${t('combobox_open_close')} `}\n        </VisuallyHiddenText>\n        <VisuallyHiddenText id={`${id}-searchDescription`}>\n          {t('combobox_search_instructions')}\n        </VisuallyHiddenText>\n      </Flex>\n    );\n  }\n);\n\nexport default MultiSelectInput;\n","import { forwardRef, FunctionComponent, PropsWithoutRef, Ref, ReactNode } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport Text from '../Text';\nimport Button from '../Button';\nimport ExpandCollapse from '../ExpandCollapse';\nimport Flex from '../Flex';\nimport Grid from '../Grid';\nimport HTML from '../HTML';\nimport Icon, { StyledIcon, registerIcon } from '../Icon';\nimport * as caretRightIcon from '../Icon/icons/caret-right.icon';\nimport Actions, { ActionsProps } from '../Actions';\nimport { defaultThemeProp } from '../../theme';\nimport { BaseProps, ForwardProps, HeadingTag } from '../../types';\nimport { useDirection, useI18n, useUID } from '../../hooks';\nimport { calculateFontSize, FontSize, omitProps } from '../../styles';\nimport AdditionalInfo, { AdditionalInfoProps } from '../AdditionalInfo';\n\nregisterIcon(caretRightIcon);\n\nexport interface FieldGroupProps extends BaseProps {\n  /** The content of the Field Group. */\n  children: ReactNode;\n  /** A description of the field group to be displayed above the controls. */\n  description?: string;\n  /**\n   * Controls the collapsed state of the field group.\n   * Passing undefined will render the field group as non-collapsible.\n   * @default false\n   */\n  collapsed?: boolean;\n  /**\n   * Called when user clicks the toggle button.\n   */\n  onToggleCollapsed?: () => void;\n  /** Select the heading tag for header */\n  headingTag?: HeadingTag;\n  /** The name associated with the Field Group. */\n  name?: string;\n  /** Provides additional info relevant to the field group. */\n  additionalInfo?: {\n    heading: AdditionalInfoProps['heading'];\n    content: AdditionalInfoProps['children'];\n  };\n  /** An array of actions to add to the header. */\n  actions?: ActionsProps['items'];\n  /** A reference to the wrapping element. */\n  ref?: Ref<HTMLFieldSetElement>;\n}\n\ninterface FieldGroupLegendProps extends Pick<FieldGroupProps, 'collapsed'> {\n  actions?: ActionsProps['items'];\n  children?: ReactNode;\n  additionalInfo?: FieldGroupProps['additionalInfo'];\n}\n\nconst StyledExpandButton = styled(Button)(\n  ({\n    theme: {\n      base: { animation }\n    }\n  }) => {\n    const { rtl } = useDirection();\n    return css`\n      ${StyledIcon} {\n        transition: transform ${animation.speed} ${animation.timing.ease};\n      }\n      &[aria-expanded='true'] ${StyledIcon} {\n        transform: rotate(90deg);\n      }\n      &[aria-expanded='false'] ${StyledIcon} {\n        transform: rotate(${rtl ? 180 : 0}deg);\n      }\n    `;\n  }\n);\n\nStyledExpandButton.defaultProps = defaultThemeProp;\n\nexport const StyledFieldGroupName = styled.span``;\n\nexport const StyledFieldGroupLegend = styled.legend.withConfig<Pick<FieldGroupProps, 'collapsed'>>(\n  omitProps('collapsed')\n)(\n  ({\n    collapsed,\n    theme: {\n      base: {\n        spacing,\n        animation,\n        'hit-area': { 'mouse-min': hitAreaMouse, 'finger-min': hitAreaFinger }\n      }\n    }\n  }) => {\n    return css`\n      width: 100%;\n      margin-bottom: 0;\n      ${!collapsed &&\n      css`\n        margin-block-end: calc(1.5 * ${spacing});\n      `}\n      transition: margin-block-end ${animation.speed} ${animation.timing.ease};\n\n      > ${StyledExpandButton} {\n        min-height: ${hitAreaMouse};\n\n        @media (pointer: 'coarse') {\n          min-height: ${hitAreaFinger};\n        }\n      }\n    `;\n  }\n);\n\nStyledFieldGroupLegend.defaultProps = defaultThemeProp;\n\nexport const StyledFieldGroup = styled.fieldset(\n  ({\n    theme: {\n      base: { 'font-size': fontSize, 'font-scale': fontScale },\n      components: { text }\n    }\n  }) => {\n    const fontSizes = calculateFontSize(fontSize, fontScale);\n\n    return css`\n      border: none;\n\n      & ${StyledFieldGroupName} {\n        font-size: ${fontSizes[text.h3['font-size'] as FontSize]};\n        font-weight: ${text.h3['font-weight']};\n      }\n\n      & & ${StyledFieldGroupName} {\n        font-size: ${fontSizes[text.h4['font-size'] as FontSize]};\n        font-weight: ${text.h4['font-weight']};\n      }\n\n      & & & ${StyledFieldGroupName} {\n        font-size: ${fontSizes[text.h5['font-size'] as FontSize]};\n        font-weight: ${text.h5['font-weight']};\n      }\n\n      & & & & ${StyledFieldGroupName} {\n        font-size: ${fontSizes[text.h6['font-size'] as FontSize]};\n        font-weight: ${text.h6['font-weight']};\n      }\n    `;\n  }\n);\n\nStyledFieldGroup.defaultProps = defaultThemeProp;\n\nconst FieldGroupLegend: FunctionComponent<FieldGroupLegendProps> = ({\n  children,\n  collapsed,\n  actions,\n  additionalInfo,\n  ...restProps\n}) => {\n  return (\n    <StyledFieldGroupLegend collapsed={collapsed} {...restProps}>\n      <Flex container={{ alignItems: 'center', justify: 'between', gap: 0.5 }}>\n        <Flex container={{ alignItems: 'center', gap: 0.5 }}>\n          {children}\n          {additionalInfo && (\n            <AdditionalInfo heading={additionalInfo.heading}>\n              {additionalInfo.content}\n            </AdditionalInfo>\n          )}\n        </Flex>\n        {actions && <Actions items={actions} />}\n      </Flex>\n    </StyledFieldGroupLegend>\n  );\n};\n\nconst FieldGroup: FunctionComponent<FieldGroupProps & ForwardProps> = forwardRef(\n  function FieldGroup(\n    {\n      children,\n      description,\n      name,\n      additionalInfo,\n      actions,\n      collapsed,\n      headingTag,\n      onToggleCollapsed,\n      ...restProps\n    }: PropsWithoutRef<FieldGroupProps>,\n    ref: FieldGroupProps['ref']\n  ) {\n    const t = useI18n();\n    const uid = useUID();\n\n    const descAndChildren = (\n      <Grid container={{ cols: 'minmax(0, 1fr)', gap: 3 }}>\n        {description && <HTML id={`${uid}-description`} as='p' content={description} />}\n        <div>{children}</div>\n      </Grid>\n    );\n\n    return (\n      <StyledFieldGroup\n        aria-label={name}\n        aria-describedby={description ? `${uid}-description` : undefined}\n        {...restProps}\n        ref={ref}\n      >\n        {name && (\n          <FieldGroupLegend collapsed={collapsed} actions={actions} additionalInfo={additionalInfo}>\n            {typeof collapsed === 'boolean' ? (\n              <StyledExpandButton\n                type='button'\n                variant='text'\n                onClick={() => {\n                  onToggleCollapsed?.();\n                }}\n                aria-expanded={collapsed ? 'false' : 'true'}\n                aria-label={t(collapsed ? 'expand_noun' : 'collapse_noun', [name])}\n              >\n                <Flex\n                  container={{ direction: 'row', alignItems: 'center', gap: 0.5 }}\n                  forwardedAs='span'\n                >\n                  <Icon name='caret-right' />\n                  {headingTag ? (\n                    <Text variant={headingTag}>{name}</Text>\n                  ) : (\n                    <StyledFieldGroupName>{name}</StyledFieldGroupName>\n                  )}\n                </Flex>\n              </StyledExpandButton>\n            ) : (\n              <>\n                {headingTag ? (\n                  <Text variant={headingTag}>{name}</Text>\n                ) : (\n                  <StyledFieldGroupName>{name}</StyledFieldGroupName>\n                )}\n              </>\n            )}\n          </FieldGroupLegend>\n        )}\n        {typeof collapsed === 'boolean' ? (\n          <ExpandCollapse collapsed={collapsed}>{descAndChildren}</ExpandCollapse>\n        ) : (\n          descAndChildren\n        )}\n      </StyledFieldGroup>\n    );\n  }\n);\n\nexport default FieldGroup;\n","// This file is autogenerated. Any changes will be overwritten.\n\nexport const set = 'budicon';\n\nexport const name = 'caret-up';\n\nexport const Component = () => <path d='M4 17.25V14.5L12.5 8l8.5 6.5v2.75l-8.5-6.5z' />;\n\nexport const viewBox = '0 0 25 25';\n","import { forwardRef, Ref, FC, useState } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport Actions from '../Actions';\nimport Flex from '../Flex';\nimport EmptyState from '../EmptyState';\nimport SearchInput, { SearchInputProps, StyledSearchInput } from '../SearchInput';\nimport { defaultThemeProp } from '../../theme';\nimport Progress from '../Progress';\nimport { StyledCard } from '../Card';\nimport { StyledCardContent } from '../Card/CardContent';\nimport { omitProps } from '../../styles';\nimport type { ForwardProps } from '../../types';\n\nimport SummaryList, { SummaryListProps } from './SummaryList';\n\nexport interface ViewAllProps extends Pick<SummaryListProps, 'loading' | 'actions' | 'items'> {\n  searchInputProps?: SearchInputProps;\n  ref?: Ref<HTMLDivElement>;\n}\n\nconst StyledToolbar = styled.div(({ theme: { base } }) => {\n  return css`\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    background-color: ${base.palette['primary-background']};\n    margin-bottom: ${base.spacing};\n    transform: translateY(calc(-0.5 * ${base.spacing}));\n    padding: ${base.spacing} 0;\n\n    ${StyledSearchInput} {\n      flex-grow: 1;\n    }\n  `;\n});\n\nStyledToolbar.defaultProps = defaultThemeProp;\n\nexport const StyledViewAll = styled.div.withConfig<{ loading: ViewAllProps['loading'] }>(\n  omitProps('loading')\n)(\n  ({ loading }) => css`\n    ${StyledCardContent}:not(${StyledCard} ${StyledCard} > ${StyledCardContent}) {\n      padding: 0;\n    }\n\n    ${loading &&\n    css`\n      min-height: 8rem;\n    `}\n  `\n);\n\nconst SearchableList: FC<ViewAllProps & ForwardProps> = forwardRef(function SearchableList(\n  { loading, actions, items, searchInputProps, ...restProps },\n  ref: ViewAllProps['ref']\n) {\n  const [searchValue, setSearchValue] = useState<SearchInputProps['value']>('');\n  return (\n    <StyledViewAll ref={ref} loading={loading} {...restProps}>\n      {!loading && (searchInputProps || actions) && (\n        <Flex container={{ justify: 'between', alignItems: 'center', gap: 2 }} as={StyledToolbar}>\n          {searchInputProps && (\n            <Flex container={{ alignItems: 'center', gap: 1 }} item={{ grow: 1 }}>\n              <SearchInput\n                onSearchChange={val => {\n                  searchInputProps.onSearchChange?.(val);\n                  setSearchValue(val);\n                }}\n                value={searchInputProps.value || searchValue}\n              />\n            </Flex>\n          )}\n          {actions && <Actions iconOnly={false} items={actions} />}\n        </Flex>\n      )}\n\n      {loading && <Progress placement='local' />}\n      {!loading && (items.length ? <SummaryList items={items} /> : <EmptyState />)}\n    </StyledViewAll>\n  );\n});\n\nexport default SearchableList;\n","import { forwardRef, FunctionComponent, PropsWithoutRef, Ref } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../../theme';\nimport { StyledFormControl } from '../../FormControl';\nimport Flex from '../../Flex';\nimport { ForwardProps } from '../../../types';\nimport { StyledSelectInput } from '../ComboBox.styles';\n\nimport SingleSelectInputProps from './SingleSelectInput.types';\n\nexport const StyledSingleSelectInput = styled(StyledSelectInput)``;\n\nconst StyledVisualContainer = styled.span(props => {\n  const {\n    theme: {\n      base,\n      components: {\n        'form-control': formControl,\n        input: { height }\n      }\n    }\n  } = props;\n\n  return css`\n    border-inline-end: ${formControl['border-width']} solid ${formControl['border-color']};\n    min-width: calc(${height} - ${formControl['border-width']});\n    padding: 0 calc(0.5 * ${base.spacing});\n    height: calc(${height} - 2 * ${formControl['border-width']});\n  `;\n});\n\nStyledVisualContainer.defaultProps = defaultThemeProp;\n\nconst SingleSelectInput: FunctionComponent<SingleSelectInputProps & ForwardProps> = forwardRef(\n  function SingleSelectInput(\n    props: PropsWithoutRef<SingleSelectInputProps>,\n    ref: Ref<HTMLInputElement>\n  ) {\n    const {\n      value,\n      readOnly,\n      disabled,\n      status,\n      actions,\n      onChange,\n      onResolveSuggestion,\n      selected,\n      visual,\n      ...restProps\n    } = props;\n\n    return (\n      <Flex\n        as={StyledSingleSelectInput}\n        forwardedAs={StyledFormControl}\n        hasSuggestion={status === 'pending' && !!onResolveSuggestion}\n        container={{ alignItems: 'center', wrap: 'nowrap' }}\n        {...{\n          disabled,\n          status,\n          readOnly\n        }}\n      >\n        {visual && (\n          <Flex container={{ justify: 'center', alignItems: 'center' }} as={StyledVisualContainer}>\n            {visual}\n          </Flex>\n        )}\n        <input\n          {...{\n            ref,\n            disabled,\n            status,\n            readOnly\n          }}\n          size={1}\n          value={value || selected?.text || ''}\n          // no-op avoids react uncontrolled warning\n          onChange={onChange || (() => {})}\n          readOnly={readOnly || !onChange}\n          autoComplete='off'\n          {...restProps}\n        />\n        {actions}\n      </Flex>\n    );\n  }\n);\n\nexport default SingleSelectInput;\n","import { forwardRef, FunctionComponent, Ref, PropsWithoutRef } from 'react';\n\nimport { BaseProps, ForwardProps } from '../../types';\nimport { MenuItemProps } from '../Menu/Menu.types';\n\nimport SingleSelectInput from './SingleSelectInput/SingleSelectInput';\nimport MultiSelectInput from './MultiSelectInput/MultiSelectInput';\nimport type { MultiSelectInputProps } from './MultiSelectInput/MultiSelectInput.types';\nimport ComboBoxProps, { Selected } from './ComboBox.types';\n\ninterface ComboBoxInputProps extends BaseProps {\n  mode?: 'multi-select' | 'single-select';\n  selected?: Selected | Selected[];\n  value?: ComboBoxProps['value'];\n  visual?: ComboBoxProps['visual'];\n  onRemove?: (id: MenuItemProps['id'], index: number) => void;\n  /** Callback on selected item pseudo focus */\n  onSelectedFocus?: MultiSelectInputProps['onSelectedFocus'];\n  /** Callback on selected item pseudo blur */\n  onSelectedBlur?: MultiSelectInputProps['onSelectedBlur'];\n  /** Pause evaluation of selected item descendants */\n  pauseDescendantEvaluation?: MultiSelectInputProps['pauseDescendantEvaluation'];\n}\n\nconst ComboBoxInput: FunctionComponent<ComboBoxInputProps & ForwardProps> = forwardRef(\n  function ComboBoxInput(props: PropsWithoutRef<ComboBoxInputProps>, ref: Ref<HTMLInputElement>) {\n    const {\n      value,\n      mode,\n      selected,\n      visual,\n      onRemove,\n      onSelectedFocus,\n      onSelectedBlur,\n      pauseDescendantEvaluation,\n      ...restProps\n    } = props;\n\n    return mode === 'multi-select' ? (\n      <MultiSelectInput\n        selected={selected as Selected[]}\n        value={value}\n        {...{\n          ref,\n          onRemove,\n          onSelectedBlur,\n          onSelectedFocus,\n          pauseDescendantEvaluation\n        }}\n        {...restProps}\n      />\n    ) : (\n      <SingleSelectInput\n        ref={ref}\n        selected={selected as Selected}\n        value={value}\n        visual={visual}\n        {...restProps}\n      />\n    );\n  }\n);\n\nexport default ComboBoxInput;\n","import { createTestIds } from '../../utils';\nimport { elements } from '../FormField/FormField.test-ids';\n\nexport const getComboBoxTestIds = createTestIds('combo-box', ['control', ...elements] as const);\n","import {\n  forwardRef,\n  FunctionComponent,\n  KeyboardEvent as ReactKeyboardEvent,\n  PropsWithoutRef,\n  Ref,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\n\nimport Icon, { registerIcon } from '../Icon';\nimport * as caretDownIcon from '../Icon/icons/caret-down.icon';\nimport * as caretUpIcon from '../Icon/icons/caret-up.icon';\nimport { ForwardProps } from '../../types';\nimport {\n  useConsolidatedRef,\n  useFocusWithin,\n  useI18n,\n  useUID,\n  useElement,\n  useDirection,\n  useTestIds,\n  useEscape\n} from '../../hooks';\nimport Popover from '../Popover';\nimport FormField from '../FormField';\nimport { StyledFormControl } from '../FormControl';\nimport Menu, { MenuProps } from '../Menu';\nimport Button from '../Button';\nimport { navigatorIsAvailable, withTestIds } from '../../utils';\nimport menuHelpers from '../Menu/helpers';\nimport { sameWidth } from '../Popover/modifiers';\nimport VisuallyHiddenText from '../VisuallyHiddenText';\n\nimport ComboBoxInput from './ComboBoxInput';\nimport ComboBoxProps from './ComboBox.types';\nimport { StyledComboBox } from './ComboBox.styles';\nimport { getComboBoxTestIds } from './ComboxBox.test-ids';\n\nregisterIcon(caretDownIcon, caretUpIcon);\n\nconst isMobile = navigatorIsAvailable && navigator.userAgent.includes('Mobile');\n\nconst ComboBox: FunctionComponent<ComboBoxProps & ForwardProps> = forwardRef(function ComboBox(\n  props: PropsWithoutRef<ComboBoxProps>,\n  ref: Ref<HTMLDivElement>\n) {\n  const uid = useUID();\n  const {\n    testId,\n    additionalInfo,\n    value,\n    required,\n    id = uid,\n    label,\n    labelHidden,\n    info,\n    status,\n    readOnly,\n    disabled,\n    mode = 'single-select',\n    selected,\n    onChange,\n    actions,\n    onFocus,\n    onBlur,\n    onResolveSuggestion,\n    onDropdownButtonClick: onDropdownButtonClickProp,\n    onClick,\n    onKeyDown,\n    menu,\n    ...restProps\n  } = props;\n\n  const testIds = useTestIds(testId, getComboBoxTestIds);\n\n  const [pauseMenuDescendantEvaluation, setPauseMenuDescendantEvaluation] = useState(true);\n  const [pauseSelectedDescendantEvaluation, setPauseSelectedDescendantEvaluation] = useState(false);\n  const t = useI18n();\n  const listId = `${id}-list`;\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [open, setOpen] = useState(false);\n  const menuRef: MenuProps['ref'] = useRef(null);\n  const menuComponentId = `${id}-listbox`;\n  const { start } = useDirection();\n\n  // Force a re-render to make sure useFocusWithin has valid elements to set listeners on.\n  const [, setContainerEl] = useElement();\n  const containerRef = useConsolidatedRef<HTMLDivElement>(ref, setContainerEl);\n\n  const toggleMenuDescendantsActive = useCallback((bool: boolean) => {\n    setPauseMenuDescendantEvaluation(!bool);\n    setPauseSelectedDescendantEvaluation(bool);\n  }, []);\n\n  const toggleSelectedDescendantsActive = useCallback((bool: boolean) => {\n    setPauseSelectedDescendantEvaluation(!bool);\n    setPauseMenuDescendantEvaluation(bool);\n  }, []);\n\n  const focus = useFocusWithin([containerRef], focused => {\n    if (!focused) {\n      setOpen(false);\n      toggleMenuDescendantsActive(false);\n      onBlur?.(selected?.items);\n    } else {\n      onFocus?.(selected?.items);\n      if (isMobile) {\n        setTimeout(() => {\n          containerRef.current?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n        }, 150); // delay it to let keyboard expand first\n      }\n    }\n  });\n\n  useEscape(\n    e => {\n      e.preventDefault();\n      if (open) {\n        e.stopPropagation();\n        setOpen(false);\n        toggleMenuDescendantsActive(false);\n      }\n    },\n    containerRef,\n    [open, toggleMenuDescendantsActive]\n  );\n\n  const onInputKeyDown = useCallback(\n    (e: ReactKeyboardEvent<HTMLInputElement>) => {\n      if (!menu || readOnly) return;\n      if (onKeyDown?.(e) === false) {\n        return;\n      }\n\n      switch (e.key) {\n        case 'ArrowUp':\n          if (e.altKey) {\n            e.preventDefault();\n            if (open) {\n              setOpen(false);\n              toggleMenuDescendantsActive(false);\n            }\n          }\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n          if (!open) {\n            setOpen(true);\n            toggleMenuDescendantsActive(true);\n          }\n          break;\n        case 'Tab':\n          setOpen(false);\n          toggleMenuDescendantsActive(false);\n          break;\n        default:\n      }\n    },\n    [open, readOnly, menu, value, onKeyDown]\n  );\n\n  const onDropdownButtonClick = useCallback(() => {\n    onDropdownButtonClickProp?.(!open);\n    setOpen(!open);\n  }, [open, onDropdownButtonClickProp]);\n\n  const dropdownButton = useMemo(() => {\n    return (menu?.items?.length || onDropdownButtonClickProp || !onChange) && !readOnly ? (\n      <Button\n        aria-label={t(open ? 'combobox_close_list_button_a11y' : 'combobox_open_list_button_a11y')}\n        icon\n        variant='simple'\n        onClick={onDropdownButtonClick}\n        onMouseDown={(e: MouseEvent) => {\n          e.preventDefault();\n          inputRef.current?.focus();\n        }}\n        disabled={disabled}\n        tabIndex='-1'\n      >\n        <Icon name={open ? 'caret-up' : 'caret-down'} />\n      </Button>\n    ) : null;\n  }, [onDropdownButtonClick, onChange, readOnly, open, disabled]);\n\n  const ariaDescribedBy = useMemo(() => {\n    let idString = `${id}-inputDescription`;\n\n    if (info) {\n      idString = idString.concat(` ${id}-info`);\n    }\n    if (onChange) {\n      idString = idString.concat(` ${id}-searchDescription`);\n    }\n    if (mode === 'multi-select') {\n      idString = idString.concat(` ${id}-multiselectDescription`);\n    }\n\n    return idString;\n  }, [info, id, mode, onChange]);\n\n  const onInputClick = useCallback(\n    (e: MouseEvent) => {\n      if (readOnly) return;\n      setOpen(true);\n      toggleMenuDescendantsActive(true);\n      onClick?.(e);\n    },\n    [readOnly, onClick]\n  );\n\n  useEffect(() => {\n    if (focus && menu && value && value.length > 0) {\n      setOpen(true);\n      toggleMenuDescendantsActive(true);\n    }\n  }, [menu, value, focus]);\n\n  // Workaround for the following error from jsx-ast-utils, fixed in version 3.5.0.\n  // The prop value with an expression type of JSXFragment could not be resolved. Please file issue to get this fixed immediately.\n  const inputActions = (\n    <>\n      {dropdownButton}\n      {actions}\n    </>\n  );\n\n  const Comp = (\n    <StyledComboBox\n      ref={containerRef}\n      as={StyledFormControl}\n      id={`${id}-combobox`}\n      role='combobox'\n      aria-haspopup='listbox'\n      aria-expanded={!readOnly && !disabled && open}\n      aria-owns={open && menu !== undefined && !pauseMenuDescendantEvaluation ? listId : undefined}\n    >\n      <ComboBoxInput\n        data-testid={testIds.control}\n        ref={inputRef}\n        role='searchbox'\n        aria-autocomplete='list'\n        aria-controls={\n          open && menu !== undefined && !pauseMenuDescendantEvaluation ? listId : undefined\n        }\n        aria-describedby={ariaDescribedBy}\n        selected={selected?.items}\n        spellCheck={false}\n        {...{\n          id,\n          readOnly,\n          disabled,\n          onChange,\n          value,\n          mode,\n          status,\n          onResolveSuggestion\n        }}\n        actions={inputActions}\n        onRemove={selected?.onRemove}\n        onClick={onInputClick}\n        onKeyDown={onInputKeyDown}\n        required={required}\n        pauseDescendantEvaluation={pauseSelectedDescendantEvaluation}\n        onSelectedFocus={() => {\n          toggleSelectedDescendantsActive(true);\n        }}\n        onSelectedBlur={() => {\n          toggleSelectedDescendantsActive(false);\n        }}\n        {...restProps}\n      />\n\n      <Popover\n        show={open && menu !== undefined}\n        target={containerRef.current}\n        placement='bottom-start'\n        modifiers={[sameWidth]}\n        // FIXME: Removed absolute strategy for mobile to avoid overflow issues.\n        strategy='fixed'\n        onMouseDown={(e: MouseEvent) => e.preventDefault()}\n      >\n        {menu && (\n          <Menu\n            ref={menuRef}\n            listId={listId}\n            id={menuComponentId}\n            role='listbox'\n            mode={mode}\n            {...menu}\n            items={menu.items}\n            focusControlEl={inputRef.current || undefined}\n            onItemClick={(itemId, e) => {\n              if (mode === 'single-select') {\n                setOpen(false);\n                toggleMenuDescendantsActive(true);\n              }\n              menu.onItemClick?.(itemId, e);\n\n              const clickedItem = menuHelpers.getItem(menu.items, itemId);\n\n              if (clickedItem?.primary && !clickedItem?.selected) {\n                selected?.onNew?.(clickedItem?.primary);\n              }\n            }}\n            aria-label={t('menu_option_list')}\n            pauseDescendantEvaluation={pauseMenuDescendantEvaluation}\n            arrowNavigationUnsupported\n          />\n        )}\n      </Popover>\n    </StyledComboBox>\n  );\n\n  return (\n    <>\n      {label ? (\n        <FormField\n          {...{\n            testId: testIds,\n            label,\n            labelHidden,\n            id,\n            info,\n            status,\n            required,\n            disabled,\n            onResolveSuggestion,\n            additionalInfo\n          }}\n        >\n          {Comp}\n        </FormField>\n      ) : (\n        Comp\n      )}\n      <VisuallyHiddenText id={`${id}-inputDescription`} aria-hidden>\n        {`${t('combobox_open_close')} `}\n      </VisuallyHiddenText>\n      <VisuallyHiddenText id={`${id}-searchDescription`} aria-hidden>\n        {t('combobox_search_instructions')}\n      </VisuallyHiddenText>\n      <VisuallyHiddenText id={`${id}-multiselectDescription`} aria-hidden>\n        {t('multiselect_instructions', [start])}\n      </VisuallyHiddenText>\n    </>\n  );\n});\n\nexport default withTestIds(ComboBox, getComboBoxTestIds);\n","import { useEffect, useRef, useState } from 'react';\n\nimport {\n  ComboBox,\n  RadioButtonGroup,\n  RadioButton,\n  Flex,\n  useI18n,\n  Input,\n  getFocusables\n} from '@pega/cosmos-react-core';\n\nimport type { Role, StakeholdersProps } from './Stakeholders.types';\n\ninterface FormProps\n  extends Pick<StakeholdersProps['form'], 'roles' | 'currentRole' | 'renderer' | 'rendererProps'> {\n  setSelectedRoleNameRef: (selectedRoleName?: string | undefined) => void;\n}\n\nexport default ({\n  roles,\n  currentRole,\n  renderer: Renderer,\n  rendererProps,\n  setSelectedRoleNameRef\n}: FormProps) => {\n  const contentRef = useRef<HTMLElement>(null);\n  const t = useI18n();\n\n  const [selectedRoleName, setSelectedRoleName] = useState<Role['name'] | undefined>(() => {\n    if (roles) {\n      return (currentRole ? roles.find(role => role.name === currentRole.name) : roles[0])?.name;\n    }\n  });\n\n  let control: JSX.Element | null = null;\n\n  if (roles) {\n    const label = t('stakeholders_role');\n\n    if (roles.length > 3) {\n      const items = roles.map(role => {\n        return {\n          id: role.name,\n          primary: role.name,\n          selected: role.name === selectedRoleName\n        };\n      });\n\n      const selected = items.find(item => item.selected);\n\n      control = (\n        <ComboBox\n          label={label}\n          selected={selected ? { items: { id: selected.id, text: selected.primary } } : undefined}\n          menu={{\n            mode: 'single-select',\n            items,\n            onItemClick: setSelectedRoleName\n          }}\n        />\n      );\n    } else {\n      control = (\n        <RadioButtonGroup\n          label={label}\n          name='role'\n          inline\n          onChange={e => {\n            setSelectedRoleName(e.target.value);\n          }}\n        >\n          {roles.map(role => (\n            <RadioButton\n              key={role.name}\n              label={role.name}\n              value={role.name}\n              checked={role.name === selectedRoleName}\n            />\n          ))}\n        </RadioButtonGroup>\n      );\n    }\n  } else if (currentRole) {\n    control = (\n      <Input\n        readOnly\n        label={t('stakeholders_role')}\n        value={currentRole.name}\n        info={currentRole.description}\n      />\n    );\n  }\n\n  useEffect(() => {\n    getFocusables(contentRef)[0]?.focus();\n  }, []);\n\n  useEffect(() => {\n    if (!roles) return;\n    setSelectedRoleNameRef(selectedRoleName);\n  }, [selectedRoleName]);\n\n  return (\n    <Flex container={{ direction: 'column', gap: 2 }} ref={contentRef}>\n      {control}\n      <Renderer {...rendererProps} selectedRoleName={selectedRoleName} />\n    </Flex>\n  );\n};\n","import {\n  forwardRef,\n  FunctionComponent,\n  PropsWithoutRef,\n  useRef,\n  useEffect,\n  useMemo,\n  useState,\n  ReactNode,\n  useCallback\n} from 'react';\nimport styled from 'styled-components';\nimport { createPortal } from 'react-dom';\n\nimport {\n  SummaryList,\n  useI18n,\n  ModalMethods,\n  Button,\n  ViewAll,\n  Modal,\n  Popover,\n  Flex,\n  Text,\n  useModalManager,\n  useOuterEvent,\n  Progress,\n  useAfterInitialEffect\n} from '@pega/cosmos-react-core';\nimport type { Action, ForwardProps, ModalProps, OmitStrict } from '@pega/cosmos-react-core';\n\nimport type { Role, StakeholdersProps } from './Stakeholders.types';\nimport StakeholderForm from './StakeholderForm';\n\nconst StyledStakeholders = styled(SummaryList)``;\n\nconst StyledEditFormWrap = styled.div`\n  position: relative;\n  min-height: 8rem;\n\n  &[aria-busy='true'] > :nth-child(2) {\n    visibility: hidden;\n  }\n`;\n\nconst StyledPopover = styled(Popover)`\n  width: 40ch;\n  min-height: 12rem;\n`;\n\nconst Stakeholders: FunctionComponent<StakeholdersProps & ForwardProps> = forwardRef(\n  function Stakeholders(\n    {\n      items: itemsProp,\n      count,\n      loading,\n      onAddNew,\n      form,\n      onViewAll,\n      viewAll,\n      error,\n      ...restProps\n    }: PropsWithoutRef<StakeholdersProps>,\n    ref: StakeholdersProps['ref']\n  ) {\n    const { create: createModal } = useModalManager();\n    const t = useI18n();\n    const modalMethods = useRef<ModalMethods>();\n    const [mode, setMode] = useState<undefined | 'add' | 'viewAll'>();\n    const [editing, setEditing] = useState(false);\n    const [viewAllSearchValue, setViewAllSearchValue] = useState('');\n    const popoverRef = useRef<HTMLDivElement>(null);\n    const progressMsgRef = useRef(t('loading'));\n\n    // Why? Don't think this should trigger a re-render. We just need the value when we invoke callback props.\n    const selectedRoleNameRef = useRef<Role['name'] | undefined>();\n    // Setter for the ref. Avoids a re-render.\n    const setSelectedRoleNameRef = useCallback((selectedRoleName?: Role['name']) => {\n      selectedRoleNameRef.current = selectedRoleName;\n    }, []);\n\n    const [popoverTarget, setPopoverTarget] = useState<{\n      portal: HTMLLIElement;\n      button: HTMLButtonElement | null;\n    } | null>(null);\n\n    const itemElsRef = useRef<{ itemEls: HTMLLIElement[]; viewAllItemEls: HTMLLIElement[] }>({\n      itemEls: [],\n      viewAllItemEls: []\n    });\n\n    // This function merges the pre-defined actions(add & edit) to the item object.\n    const mergeItemActions = (\n      items: StakeholdersProps['items'] | NonNullable<StakeholdersProps['viewAll']>['items']\n    ) => {\n      return items.map(({ onEdit, onRemove, ...rest }, i) => {\n        let itemActions: Action[] = [];\n        const elArray = itemElsRef.current[mode === 'viewAll' ? 'viewAllItemEls' : 'itemEls'];\n\n        if (onEdit) {\n          itemActions = [\n            {\n              id: 'edit',\n              text: t('edit'),\n              icon: 'pencil',\n              onClick: () => {\n                setEditing(true);\n                setPopoverTarget({\n                  portal: elArray[i],\n                  button: elArray[i].querySelector<HTMLButtonElement>(\n                    'button[aria-haspopup=\"menu\"]'\n                  )\n                });\n\n                onEdit?.();\n              }\n            }\n          ];\n        }\n\n        if (onRemove) {\n          itemActions = [\n            ...itemActions,\n            {\n              id: 'remove',\n              text: t('remove'),\n              icon: 'trash',\n              onClick: () => {\n                onRemove?.();\n              }\n            }\n          ];\n        }\n\n        return {\n          ...rest,\n          ref: (el: HTMLLIElement) => {\n            elArray[i] = el;\n          },\n          actions: itemActions\n        };\n      });\n    };\n\n    const closePopover = () => {\n      if (!popoverTarget || (form.loading && progressMsgRef.current === t('submitting'))) return;\n      popoverTarget.button?.focus();\n      setPopoverTarget(null);\n      setEditing(false);\n      progressMsgRef.current = t('loading');\n    };\n\n    let formContent: ReactNode = null;\n    if (\n      (mode === 'add' || editing) &&\n      (!form.loading || progressMsgRef.current === t('submitting'))\n    ) {\n      formContent = (\n        <StakeholderForm\n          roles={form.roles}\n          currentRole={form.currentRole}\n          renderer={form.renderer}\n          rendererProps={form.rendererProps}\n          setSelectedRoleNameRef={setSelectedRoleNameRef}\n        />\n      );\n    }\n\n    // Actions used for add and edit both in the modal and the popover.\n    let formActions: ReactNode = null;\n    if (\n      (mode === 'add' || editing) &&\n      (!form.loading || progressMsgRef.current === t('submitting'))\n    ) {\n      const closeForm = () => {\n        if (mode === 'add') {\n          modalMethods.current?.dismiss();\n        } else {\n          closePopover();\n        }\n      };\n\n      formActions = (\n        <>\n          <Button\n            disabled={form.loading}\n            onClick={() => {\n              form.onDismiss({ closeForm });\n            }}\n          >\n            {t('cancel')}\n          </Button>\n          <Button\n            disabled={form.loading}\n            type='submit'\n            variant='primary'\n            onClick={() => {\n              progressMsgRef.current = t('submitting');\n              form.onSubmit({\n                selectedRoleName: selectedRoleNameRef.current,\n                closeForm\n              });\n            }}\n          >\n            {t('submit')}\n          </Button>\n        </>\n      );\n    }\n\n    // Content for the modal either for adding new or viewing all.\n    let modalContent: ReactNode = null;\n    if (mode === 'add') modalContent = formContent;\n\n    if (!viewAll.loading && (mode === 'viewAll' || (editing && modalMethods.current))) {\n      modalContent = (\n        <ViewAll\n          items={mergeItemActions(viewAll.items)}\n          actions={[\n            {\n              id: 'addStakeHolder',\n              text: 'Add new',\n              onClick: () => {\n                setMode('add');\n                onAddNew?.();\n              }\n            }\n          ]}\n          searchInputProps={\n            viewAll.onSearch\n              ? {\n                  value: viewAllSearchValue,\n                  onSearchChange: (value: string) => {\n                    setViewAllSearchValue(value);\n                    viewAll?.onSearch?.(value);\n                  }\n                }\n              : undefined\n          }\n        />\n      );\n    }\n\n    useEffect(() => {\n      if (!mode) {\n        modalMethods.current = undefined;\n        return;\n      }\n\n      const modalProps: OmitStrict<ModalProps, 'heading'> = {\n        progress:\n          (mode === 'add' && form.loading) || viewAll.loading\n            ? { message: progressMsgRef.current }\n            : undefined,\n        count: mode === 'viewAll' ? count : undefined,\n        children: modalContent,\n        actions: mode === 'add' ? formActions : undefined,\n        onRequestDismiss:\n          form.loading && progressMsgRef.current === t('submitting') ? () => false : undefined\n      };\n\n      if (modalMethods.current) {\n        modalMethods.current.update(modalProps);\n      } else if (mode === 'add' || mode === 'viewAll') {\n        modalMethods.current = createModal(Modal, {\n          ...modalProps,\n          heading: mode === 'add' ? t('add_stakeholders') : t('view_stakeholders'),\n          onAfterClose: () => {\n            if (mode === 'add') {\n              form.onAfterClose?.();\n            } else {\n              setViewAllSearchValue('');\n              viewAll.onAfterClose?.();\n            }\n\n            progressMsgRef.current = t('loading');\n            setMode(undefined);\n          }\n        });\n      }\n    }, [mode, modalContent, form.loading, formActions, count, viewAll.loading]);\n\n    // Using mousedown instead of click since drag selecting an input's value within the popover, then releasing outside the popover triggers outer click.\n    useOuterEvent('mousedown', [popoverRef], closePopover);\n\n    let editPopover: ReactNode = null;\n    if (popoverTarget) {\n      editPopover = (\n        <StyledPopover\n          ref={popoverRef}\n          target={popoverTarget.button}\n          placement='auto'\n          role='dialog'\n        >\n          <Flex container={{ direction: 'column', gap: 2, pad: 2 }}>\n            <Text variant='h3'>{t('edit_stakeholder')}</Text>\n            <StyledEditFormWrap aria-busy={form.loading ? 'true' : 'false'}>\n              <Progress placement='local' visible={form.loading} message={progressMsgRef.current} />\n              {(!form.loading || progressMsgRef.current === t('submitting')) && (\n                <StakeholderForm\n                  roles={form.roles}\n                  currentRole={form.currentRole}\n                  renderer={form.renderer}\n                  rendererProps={form.rendererProps}\n                  setSelectedRoleNameRef={setSelectedRoleNameRef}\n                />\n              )}\n            </StyledEditFormWrap>\n            {formActions && <Flex container={{ justify: 'between' }}>{formActions}</Flex>}\n          </Flex>\n        </StyledPopover>\n      );\n    }\n\n    const onKeydown = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        closePopover();\n      }\n    };\n\n    useEffect(() => {\n      if (!popoverTarget) return;\n      document.addEventListener('keydown', onKeydown);\n      return () => {\n        document.removeEventListener('keydown', onKeydown);\n      };\n    }, [popoverTarget]);\n\n    useAfterInitialEffect(() => {\n      if (!popoverTarget) form.onAfterClose?.();\n    }, [popoverTarget]);\n\n    return (\n      <>\n        <StyledStakeholders\n          {...restProps}\n          ref={ref}\n          icon='person'\n          name={t('view_stakeholders')}\n          headingTag='h3'\n          loading={loading}\n          count={count}\n          error={error}\n          items={useMemo(\n            () => mergeItemActions(itemsProp.slice(0, 3)),\n            [mergeItemActions, itemsProp]\n          )}\n          actions={\n            onAddNew\n              ? [\n                  {\n                    text: t('add'),\n                    id: 'add_new',\n                    icon: 'plus',\n                    onClick() {\n                      setMode('add');\n                      onAddNew?.();\n                    }\n                  }\n                ]\n              : undefined\n          }\n          onViewAll={\n            onViewAll && count && count > 3\n              ? () => {\n                  setMode('viewAll');\n                  onViewAll?.();\n                }\n              : undefined\n          }\n        />\n        {popoverTarget && createPortal(editPopover, popoverTarget.portal)}\n      </>\n    );\n  }\n);\n\nexport default Stakeholders;\n"],"names":["StyledSelectInput","styled","div","_ref","_ref$theme","theme","base","components","css","_templateObject","_taggedTemplateLiteral","input","height","spacing","StyledButton","defaultProps","defaultThemeProp","StyledComboBox","StyledFormControl","_templateObject2","StyledPopover","StyledMenu","StyledMenuListWrapper","StyledMultiSelectInput","background","badges","selectable","foreground","palette","boxShadowColor","tryCatch","transparentize","StyledSelectable","interactive","StyledBareButton","MultiSelectInput","forwardRef","props","ref","_props$selected","selected","value","onRemove","onChange","onKeyDown","onResolveSuggestion","actions","readOnly","disabled","status","placeholder","autoFocus","pauseDescendantEvaluation","onSelectedFocus","onSelectedBlur","ariaControls","restProps","_objectWithoutProperties","_excluded","t","useI18n","id","useUID","inputRef","useConsolidatedRef","listRef","useRef","_useState","useState","_useState2","_slicedToArray","focusDescendant","setFocusDescendant","_useState3","_useState4","activeItemId","setActiveItemId","_useDirection","useDirection","start","end","uadConfig","useMemo","focusEl","current","scope","selector","orientation","focusReturnEl","clearFocusReturn","onClick","el","click","activeDescendant","useActiveDescendant","handleSelectedRemoval","useCallback","selectionId","idx","_inputRef$current","_listRef$current","length","querySelectorAll","_listRef$current2","focus","useEffect","onInputKeyDown","e","_inputRef$current2","selectionStart","_listRef$current4","_listRef$current3","lastIndex","key","concat","cap","lastSelectableId","includes","ariaDescribedBy","_jsxs","Flex","_objectSpread","as","forwardedAs","hasSuggestion","container","alignItems","justify","children","alignContent","wrap","rowGap","colGap","pad","item","grow","_inputRef$current3","_inputRef$current4","target","HTMLElement","currentTarget","contains","closest","_jsx","role","map","element","Selectable","toString","mouseClick","detail","preventDefault","tabIndex","text","size","undefined","autoComplete","required","VisuallyHiddenText","registerIcon","caretRightIcon","StyledExpandButton","Button","animation","rtl","StyledIcon","speed","timing","ease","StyledFieldGroupName","span","StyledFieldGroupLegend","legend","withConfig","omitProps","_ref2","collapsed","_ref2$theme$base","_ref2$theme$base$hit","hitAreaMouse","hitAreaFinger","_templateObject3","_templateObject4","StyledFieldGroup","fieldset","_ref3","_ref3$theme","_ref3$theme$base","fontSize","fontScale","fontSizes","calculateFontSize","_templateObject5","h3","h4","h5","h6","FieldGroupLegend","_ref4","additionalInfo","gap","AdditionalInfo","heading","content","Actions","items","FieldGroup","_ref5","description","name","headingTag","onToggleCollapsed","_excluded2","uid","descAndChildren","Grid","cols","HTML","type","variant","direction","Icon","Text","_Fragment","ExpandCollapse","set","Component","d","viewBox","StyledToolbar","StyledSearchInput","StyledViewAll","loading","StyledCardContent","StyledCard","searchInputProps","searchValue","setSearchValue","SearchInput","onSearchChange","val","_searchInputProps$onS","call","iconOnly","Progress","placement","SummaryList","EmptyState","StyledSingleSelectInput","StyledVisualContainer","_props$theme","_props$theme$componen","formControl","visual","mode","SingleSelectInput","getComboBoxTestIds","createTestIds","_toConsumableArray","elements","caretDownIcon","caretUpIcon","isMobile","navigatorIsAvailable","navigator","userAgent","ComboBox","testId","_props$id","label","labelHidden","info","_props$mode","onFocus","onBlur","onDropdownButtonClickProp","onDropdownButtonClick","menu","testIds","useTestIds","pauseMenuDescendantEvaluation","setPauseMenuDescendantEvaluation","pauseSelectedDescendantEvaluation","setPauseSelectedDescendantEvaluation","listId","_useState5","_useState6","open","setOpen","menuRef","menuComponentId","_useElement","useElement","setContainerEl","containerRef","toggleMenuDescendantsActive","bool","toggleSelectedDescendantsActive","useFocusWithin","focused","setTimeout","_containerRef$current","scrollIntoView","behavior","block","useEscape","stopPropagation","altKey","dropdownButton","_menu$items","icon","onMouseDown","idString","onInputClick","inputActions","Comp","ComboBoxInput","control","spellCheck","Popover","show","modifiers","sameWidth","strategy","Menu","focusControlEl","onItemClick","itemId","_menu$onItemClick","_selected$onNew","clickedItem","menuHelpers","getItem","primary","onNew","arrowNavigationUnsupported","FormField","withTestIds","roles","currentRole","Renderer","renderer","rendererProps","setSelectedRoleNameRef","contentRef","find","selectedRoleName","setSelectedRoleName","RadioButtonGroup","inline","RadioButton","checked","Input","_getFocusables$","getFocusables","StyledStakeholders","StyledEditFormWrap","itemsProp","count","onAddNew","form","onViewAll","viewAll","error","createModal","useModalManager","create","modalMethods","setMode","editing","setEditing","viewAllSearchValue","setViewAllSearchValue","popoverRef","progressMsgRef","selectedRoleNameRef","_useState7","_useState8","popoverTarget","setPopoverTarget","itemElsRef","itemEls","viewAllItemEls","mergeItemActions","i","onEdit","rest","itemActions","elArray","portal","button","querySelector","closePopover","_popoverTarget$button","formContent","StakeholderForm","formActions","closeForm","_modalMethods$current","dismiss","onDismiss","onSubmit","modalContent","ViewAll","onSearch","_viewAll$onSearch","modalProps","progress","message","onRequestDismiss","update","Modal","onAfterClose","_form$onAfterClose","_viewAll$onAfterClose","useOuterEvent","editPopover","visible","onKeydown","document","addEventListener","removeEventListener","useAfterInitialEffect","_form$onAfterClose2","slice","createPortal"],"sourceRoot":""}