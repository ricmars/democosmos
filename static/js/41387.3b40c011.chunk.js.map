{"version":3,"file":"static/js/41387.3b40c011.chunk.js","mappings":"oQAMe,SAASA,IACtB,IAAAC,GAAyBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9BI,EAAKF,EAAA,GAAEG,EAAOH,EAAA,GACrBI,GAA6BL,EAAAA,EAAAA,WAAS,GAA7BM,GAAmCJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnB,IAEzBE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IACE,OACA,2FAECC,MAAK,SAAAC,GACkB,OAAlBA,EAASC,MAAiBD,EAASC,KAAKC,UAAYF,EAASC,KAAKC,SAASC,WAC7ET,EAAQM,EAASC,KAAKC,SAASC,WAEjCP,GAAiB,EACnB,IACCQ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACd,GACJ,GAAG,IAEH,IAAMG,EAAgB,SAACC,GACrB,OAAIA,EAAKN,WAAaM,EAAKN,UAAUO,OAAS,EACrCD,EAAKN,UAAUQ,KAAI,SAACC,GAAU,OACnCC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,GAAIH,EAAMI,SAEVC,QAASL,EAAMM,UACfC,SAAUP,EAAMQ,aAAaC,KAC7BC,SAAUV,EAAMQ,aAAaG,GAC7BC,cAAe,IAAIC,KAAKb,EAAMc,kBAC9BC,OAAO,EACPC,MAAO,GACPC,UAAWjB,EAAMkB,QAAQC,YACzBC,YAAa,WAAO,EACpBC,eAAgB,WAAO,GATlBrB,EAAMI,SAUX,IAGC,EACT,EAEA,OACEH,EAAAA,EAAAA,KAACqB,EAAAA,EAAI,CACHC,MAAM,OACNC,YAAa,CAAC,OAAQ,QACtBC,SAAU,CACRf,UAAUgB,EAAAA,EAAAA,MACVnB,UAAUmB,EAAAA,EAAAA,MACVC,WAAWC,EAAAA,EAAAA,IAAW,iBAAiBC,EAAAA,EAAAA,QAEzCC,eACE7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAW,CACV5B,GAAG,UACH6B,gBAAiB,CACfC,oBAAqB,uBACrBC,UAAW,QAEbC,aAAc,WAAO,EACrBC,SAAU,WAAO,IAGrBvD,MAAOA,EAAMkB,KAAI,SAACF,GAAS,OACzBI,EAAAA,EAAAA,KAACoC,EAAAA,GAAQ,CACPlC,GAAIN,EAAKO,SAETC,QAASR,EAAKS,UACdC,SAAUV,EAAKW,aAAaC,KAC5BC,SAAUb,EAAKW,aAAaG,GAC5BC,cAAe,IAAIC,KAAKhB,EAAKyC,OAAOC,YACpCC,QAAS5C,EAAcC,GACvB4C,YAAa,GACbC,iBAAkB,GAClBrB,eAAgB,WAAO,EACvBN,OAAO,EACPC,MAAO,GACPC,UAAWpB,EAAKqB,QAAQC,YACxBC,YAAa,WAAO,EACpBuB,YAAa,WAAO,EACpBC,QAAS,CAAC,CAAEC,KAAM,WAAY1C,GAAI,WAAY2C,QAAS,WAAO,IAC9DC,WAAY,CACVN,YAAa,GACbN,aAAc,WAAO,EACrBC,SAAU,WAAO,IAlBdvC,EAAKO,SAoBV,KAIV,C","sources":["components/Pulse.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchData } from '../services';\nimport { Feed, FeedNewPost, FeedPost, FeedReply } from '@pega/cosmos-react-social';\nimport { getOperatorName, getOperatorUrl } from '../utils/env';\nimport { getDataUrl } from '../services';\n\nexport default function Pulse() {\n  const [posts, setpost] = useState([]);\n  const [, setPulseIsLoaded] = useState(false);\n\n  useEffect(() => {\n    fetchData(\n      'feed',\n      'filterFor=DATA-PORTAL%20$DemoReact&feedClass=@baseclass&filterBy=&pageSize=9&olderThan='\n    )\n      .then(response => {\n        if (response.data !== null && response.data.FeedList && response.data.FeedList.pxResults) {\n          setpost(response.data.FeedList.pxResults);\n        }\n        setPulseIsLoaded(true);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  const renderReplies = (item: any) => {\n    if (item.pxResults && item.pxResults.length > 0) {\n      return item.pxResults.map((reply: any) => (\n        <FeedReply\n          id={reply.pzInsKey}\n          key={reply.pzInsKey}\n          content={reply.pyMessage}\n          fullname={reply.postedByUser.name}\n          username={reply.postedByUser.ID}\n          postTimestamp={new Date(reply.pxCreateDateTime)}\n          liked={false}\n          likes={[]}\n          likeCount={reply.pyLikes.pxLikeCount}\n          onLikeClick={() => {}}\n          onCommentClick={() => {}}\n        />\n      ));\n    }\n    return [];\n  };\n\n  return (\n    <Feed\n      title='Feed'\n      searchTypes={['user', 'case']}\n      userInfo={{\n        username: getOperatorName(),\n        fullname: getOperatorName(),\n        avatarSrc: getDataUrl('operatorimage', getOperatorUrl())\n      }}\n      newPostRegion={\n        <FeedNewPost\n          id='newpost'\n          interactionInfo={{\n            textAreaPlaceholder: 'Start a conversation',\n            postLabel: 'Post'\n          }}\n          onFilesAdded={() => {}}\n          onSubmit={() => {}}\n        />\n      }\n      posts={posts.map((item: any) => (\n        <FeedPost\n          id={item.pzInsKey}\n          key={item.pzInsKey}\n          content={item.pyMessage}\n          fullname={item.postedByUser.name}\n          username={item.postedByUser.ID}\n          postTimestamp={new Date(item.pyFeed.pyPostedOn)}\n          replies={renderReplies(item)}\n          attachments={[]}\n          maxContentHeight={80}\n          onCommentClick={() => {}}\n          liked={false}\n          likes={[]}\n          likeCount={item.pyLikes.pxLikeCount}\n          onLikeClick={() => {}}\n          onUserClick={() => {}}\n          actions={[{ text: 'Bookmark', id: 'Bookmark', onClick: () => {} }]}\n          replyInput={{\n            attachments: [],\n            onFilesAdded: () => {},\n            onSubmit: () => {}\n          }}\n        />\n      ))}\n    />\n  );\n}\n"],"names":["Pulse","_useState","useState","_useState2","_slicedToArray","posts","setpost","_useState3","setPulseIsLoaded","useEffect","fetchData","then","response","data","FeedList","pxResults","catch","error","console","log","renderReplies","item","length","map","reply","_jsx","FeedReply","id","pzInsKey","content","pyMessage","fullname","postedByUser","name","username","ID","postTimestamp","Date","pxCreateDateTime","liked","likes","likeCount","pyLikes","pxLikeCount","onLikeClick","onCommentClick","Feed","title","searchTypes","userInfo","getOperatorName","avatarSrc","getDataUrl","getOperatorUrl","newPostRegion","FeedNewPost","interactionInfo","textAreaPlaceholder","postLabel","onFilesAdded","onSubmit","FeedPost","pyFeed","pyPostedOn","replies","attachments","maxContentHeight","onUserClick","actions","text","onClick","replyInput"],"sourceRoot":""}