{"version":3,"file":"static/js/41903.343c8460.chunk.js","mappings":"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","sources":["components/Worklist.tsx","../node_modules/@pega/cosmos-react-core/src/components/Card/CardContent.tsx","../node_modules/@pega/cosmos-react-core/src/components/Card/CardFooter.tsx","../node_modules/@pega/cosmos-react-core/src/components/Card/CardHeader.tsx","../node_modules/@pega/cosmos-react-core/src/components/SummaryList/SummaryList.tsx","../node_modules/@pega/cosmos-react-work/src/components/Tasks/TaskList.tsx","../node_modules/@pega/cosmos-react-work/src/components/Tasks/Tasks.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Tasks } from '@pega/cosmos-react-work';\nimport { Button, Avatar, EmptyState, Text, MetaList, Link } from '@pega/cosmos-react-core';\nimport { getOperatorName, getOperatorUrl } from '../utils/env';\nimport { getDataUrl } from '../services';\nimport { genStatus } from '../utils/status';\n\nexport default function Worklist() {\n  const history = useNavigate();\n  const [isLimited, setIsLimited] = useState(true);\n\n  const page = (\n    window as any\n  ).portal.uiResources.context_data.pyPortal.summary_of_lists__.D_pyMyWorkList.pxResults.replace(\n    '.pxResults',\n    ''\n  );\n  let tasklist: any[] = [];\n  if ((window as any).portal.data[page].pxResults) {\n    tasklist = (window as any).portal.data[page].pxResults;\n  }\n\n  const openCaseType = (path: string, e: React.FormEvent<HTMLFormElement>) => {\n    history(path, {\n      state: {\n        token: (window as any).token,\n        portal: (window as any).portal,\n        config: (window as any).config\n      }\n    });\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const openAssignment = () => {};\n\n  const renderTasklist = () => {\n    return tasklist\n      .filter((item, i) => {\n        return !isLimited || i < 3;\n      })\n      .map((item, i) => {\n        const keys = item.pxRefObjectKey.split(' ');\n        const pyID = keys[2];\n        const path = encodeURI(`/case/${keys[1]} ${keys[2]}`);\n        return {\n          name: item.pxTaskLabel,\n          meta: (\n            <MetaList\n              items={[\n                <Text variant='secondary'>\n                  Task in{' '}\n                  <Link\n                    href={path}\n                    onClick={(e: React.FormEvent<HTMLFormElement>) => {\n                      openCaseType(path, e);\n                    }}\n                  >\n                    {pyID}\n                  </Link>\n                </Text>,\n                genStatus(item.pyAssignmentStatus),\n                <Text variant='secondary'>Urgency {item.pxUrgencyAssign}</Text>\n              ]}\n            />\n          ),\n          actions: (\n            <Button\n              variant='primary'\n              onClick={() => {\n                openAssignment();\n              }}\n            >\n              Go\n            </Button>\n          ),\n          content: null\n        };\n      });\n  };\n\n  return (\n    <Tasks\n      headerText='My Worklist'\n      count={tasklist.length}\n      items={renderTasklist()}\n      headerVisual={\n        <Avatar\n          size='l'\n          name={getOperatorName()}\n          imageSrc={getDataUrl('operatorimage', getOperatorUrl())}\n        />\n      }\n      emptyPlaceholder={<EmptyState />}\n      onExpandToggle={() => {\n        setIsLimited(cur => !cur);\n      }}\n    />\n  );\n}\n","import { FunctionComponent, PropsWithChildren, ReactNode } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../theme';\nimport { BaseProps, ForwardProps } from '../../types';\nimport Flex, { FlexProps } from '../Flex';\nimport { StyledPopover } from '../Popover';\n\nimport { StyledCard } from './Card';\nimport { StyledCardFooter } from './CardFooter';\n\nexport interface CardContentProps extends BaseProps {\n  /** The content of the Card. */\n  children: ReactNode;\n  container?: Exclude<FlexProps['container'], boolean>;\n}\n\nexport const StyledCardContent = styled.div(({ theme }) => {\n  return css`\n    ${StyledPopover} &, &:not(${StyledCard} ${StyledCard} > &) {\n      position: relative;\n      padding: calc(1.5 * ${theme.base.spacing}) calc(${theme.components.card.padding} * 2);\n\n      & + &,\n      & + ${StyledCardFooter} {\n        padding-block-start: 0;\n      }\n    }\n  `;\n});\n\nStyledCardContent.defaultProps = defaultThemeProp;\n\nconst CardContent: FunctionComponent<CardContentProps & ForwardProps> = ({\n  children,\n  container,\n  ...restProps\n}: PropsWithChildren<CardContentProps & ForwardProps>) => {\n  return (\n    <Flex {...restProps} container={{ direction: 'column', ...container }} as={StyledCardContent}>\n      {children}\n    </Flex>\n  );\n};\n\nexport default CardContent;\n","import { FunctionComponent, PropsWithChildren } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../theme';\nimport Flex, { FlexContainerProps } from '../Flex';\nimport { BaseProps, ForwardProps } from '../../types';\nimport { StyledPopover } from '../Popover';\n\nimport { StyledCard } from './Card';\n\nexport interface CardFooterProps extends BaseProps {\n  /** [justify-content](https://css-tricks.com/almanac/properties/j/justify-content/) */\n  justify?: FlexContainerProps['justify'];\n}\n\nexport const StyledCardFooter = styled.footer(({ theme }) => {\n  return css`\n    ${StyledPopover} &, &:not(${StyledCard} ${StyledCard} > &) {\n      padding: calc(1.5 * ${theme.base.spacing}) calc(${theme.components.card.padding} * 2);\n    }\n  `;\n});\n\nStyledCardFooter.defaultProps = defaultThemeProp;\n\nconst CardFooter: FunctionComponent<CardFooterProps & ForwardProps> = (\n  props: PropsWithChildren<CardFooterProps>\n) => {\n  const { children, justify, ...restProps } = props;\n\n  return (\n    <Flex\n      as={StyledCardFooter}\n      container={{\n        wrap: 'wrap',\n        alignItems: 'center',\n        justify\n      }}\n      {...restProps}\n    >\n      {children}\n    </Flex>\n  );\n};\n\nexport default CardFooter;\n","import { forwardRef, FunctionComponent, PropsWithChildren, ReactNode, Ref } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../theme';\nimport Flex from '../Flex';\nimport { BaseProps, ForwardProps } from '../../types';\nimport { StyledPopover } from '../Popover';\n\nimport { StyledCard } from './Card';\nimport { StyledCardContent } from './CardContent';\n\nexport interface CardHeaderProps extends BaseProps {\n  /** The Card header content. */\n  children: ReactNode;\n  /** Action Buttons that will render within the header. */\n  actions?: ReactNode;\n  /** Ref for the wrapping element. */\n  ref?: Ref<HTMLDivElement>;\n}\n\nexport const StyledCardHeader = styled.header<CardHeaderProps>(({ theme, onClick }) => {\n  return css`\n    ${StyledPopover} &, &:not(${StyledCard} ${StyledCard} > &) {\n      padding: calc(1.5 * ${theme.base.spacing}) calc(${theme.components.card.padding} * 2);\n\n      + ${StyledCardContent} {\n        padding-block-start: 0;\n      }\n\n      &:hover {\n        ${onClick ? 'cursor: pointer;' : undefined}\n      }\n    }\n  `;\n});\n\nStyledCardHeader.defaultProps = defaultThemeProp;\n\nconst CardHeader: FunctionComponent<CardHeaderProps & ForwardProps> = forwardRef(\n  (\n    { children, actions, ...restProps }: PropsWithChildren<CardHeaderProps>,\n    ref: CardHeaderProps['ref']\n  ) => {\n    return (\n      <Flex\n        container={{ alignItems: 'center', justify: 'between' }}\n        as={StyledCardHeader}\n        {...restProps}\n        ref={ref}\n      >\n        {actions ? (\n          <>\n            <Flex container={{ alignItems: 'center' }} item={{ grow: 1 }}>\n              {children}\n            </Flex>\n            <div>{actions}</div>\n          </>\n        ) : (\n          children\n        )}\n      </Flex>\n    );\n  }\n);\n\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;\n","import { forwardRef, PropsWithoutRef, Ref, FC, useMemo } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport Actions from '../Actions';\nimport Flex from '../Flex';\nimport Text from '../Text';\nimport Count from '../Badges/Count';\nimport Icon from '../Icon';\nimport Card, { CardHeader, CardContent, CardFooter } from '../Card';\nimport EmptyState, { EmptyStateProps } from '../EmptyState';\nimport { ForwardProps, NoChildrenProp, OmitStrict, Action } from '../../types';\nimport { omitProps } from '../../styles';\nimport { useI18n } from '../../hooks';\nimport { defaultThemeProp } from '../../theme';\nimport SummaryItem, { SummaryItemProps } from '../SummaryItem';\nimport Progress from '../Progress';\nimport Button from '../Button';\nimport ErrorState from '../ErrorState';\nimport type { ErrorStateProps } from '../ErrorState';\n\nexport interface SummaryListProps extends NoChildrenProp {\n  /** Name of the utility to be used as its heading along with associated actions and aria attributes. */\n  name?: string;\n  /** Identifier for the icon within Pega icons.  */\n  icon?: string;\n  /** Integer representing the total count of items for a list utility dataset. */\n  count?: number;\n  /** Top level actions for the utility. If more than one action is passed a consolidated ActionMenu will be generated. */\n  actions?: Action[];\n  /** If the utility is in a state of fetching data. */\n  loading?: boolean | string;\n  /** An array of SummaryListItem objects to render. Pass an appropriately limited length array with a desired sort order based on design system defaults or config. */\n  items: SummaryListItem[];\n  /** User click initiated callback for when to show view all modal. List lengths less than the count prop will display a \"View all\" button with this function is bound to. */\n  onViewAll?: (callback: Function) => void;\n  /** A simple message to display when there are no items. */\n  noItemsText?: EmptyStateProps['message'];\n  /**\n   * Indicate an error occurred while acquiring data for the list.\n   * The default error state may be overridden with custom props.\n   */\n  error?: boolean | ErrorStateProps;\n  /** Ref for the SummaryList's root element.  */\n  ref?: Ref<HTMLElement>;\n}\n\nexport interface SummaryListItem extends OmitStrict<SummaryItemProps, 'actions'>, ForwardProps {\n  /** A unique id to represent the item. */\n  id: string;\n  /** A set of Actions to render alongside the item. If more than one action is passed a consolidated ActionMenu will be generated. */\n  actions?: Action[];\n}\n\nexport const StyledSummaryListContent = styled(CardContent).withConfig<{ loading?: boolean }>(\n  omitProps('loading')\n)(\n  ({ theme, loading }) => css`\n    ${loading &&\n    css`\n      min-height: 4rem;\n    `}\n\n    &:not(:last-child) > ul > li:last-child {\n      border-bottom: 0.0625rem solid ${theme.base.palette['border-line']};\n    }\n  `\n);\n\nStyledSummaryListContent.defaultProps = defaultThemeProp;\n\nexport const StyledSummaryListItem: typeof SummaryItem = styled(SummaryItem)(\n  ({ theme }) =>\n    css`\n      padding: ${theme.base.spacing} 0;\n\n      &:not(:last-child) {\n        border-bottom: 0.0625rem solid ${theme.base.palette['border-line']};\n      }\n    `\n);\n\nStyledSummaryListItem.defaultProps = defaultThemeProp;\n\nexport const SummaryListItems = ({ items }: Pick<SummaryListProps, 'items'>) => {\n  return (\n    <ul>\n      {items.map(({ id, actions: itemActions, ...restItemProps }) => {\n        return (\n          <StyledSummaryListItem\n            key={id}\n            {...restItemProps}\n            forwardedAs='li'\n            actions={itemActions && <Actions items={itemActions} />}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nconst SummaryList: FC<SummaryListProps & ForwardProps> = forwardRef(\n  (\n    {\n      icon,\n      name,\n      count,\n      actions,\n      items,\n      onViewAll,\n      loading,\n      noItemsText,\n      error,\n      ...restProps\n    }: PropsWithoutRef<SummaryListProps>,\n    ref: SummaryListProps['ref']\n  ) => {\n    const t = useI18n();\n\n    const content = useMemo(() => {\n      if (loading) {\n        return (\n          <Progress placement='local' message={typeof loading === 'string' ? loading : undefined} />\n        );\n      }\n\n      if (error) {\n        return <ErrorState {...(error === true ? {} : error)} />;\n      }\n\n      return items.length > 0 ? (\n        <SummaryListItems items={items} />\n      ) : (\n        <EmptyState message={noItemsText} />\n      );\n    }, [loading, items, noItemsText, error]);\n\n    return (\n      <Card ref={ref} {...restProps}>\n        {(icon || name || typeof count === 'number' || actions) && (\n          <CardHeader>\n            <Flex container={{ alignItems: 'center', gap: 1 }}>\n              {icon && <Icon name={icon} />}\n              {name && <Text variant='h2'>{name}</Text>}\n              {typeof count === 'number' && <Count>{count}</Count>}\n            </Flex>\n            {actions && <Actions items={actions} />}\n          </CardHeader>\n        )}\n\n        <StyledSummaryListContent loading={loading}>{content}</StyledSummaryListContent>\n\n        {!error && typeof count === 'number' && count > items.length && onViewAll && (\n          <CardFooter justify='center'>\n            <Button\n              variant='link'\n              aria-label={name ? t('view_all_noun', [name.toLowerCase()]) : t('view_all')}\n              onClick={onViewAll}\n            >\n              {t('view_all')}\n            </Button>\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n);\n\nexport default SummaryList;\n","import { forwardRef, FunctionComponent, PropsWithoutRef, ReactNode, Ref } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport {\n  ForwardProps,\n  SummaryItem,\n  StyledSummaryListItem,\n  Flex,\n  defaultThemeProp\n} from '@pega/cosmos-react-core';\n\nexport interface TaskItemProps {\n  /** Name of the task displayed in the list. */\n  name: NonNullable<ReactNode>;\n  /** Avatar element to represent the task's assignee. */\n  avatar?: ReactNode;\n  /** MetaList element with info related to the task. */\n  meta?: ReactNode;\n  /** Region for task level actions such as opening or dismissing. */\n  actions?: ReactNode;\n  /** Content for the task when open. */\n  content?: ReactNode;\n  [key: string]: unknown;\n}\n\nexport interface TaskListProps {\n  items: TaskItemProps[];\n  hasFooter?: boolean;\n  /** Ref for the wrapping element. */\n  ref?: Ref<HTMLElement>;\n}\n\nconst StyledTaskList = styled.ul<{ hasFooter: boolean }>(({ theme, hasFooter }) => {\n  return css`\n    ${hasFooter &&\n    css`\n      > li:last-child {\n        border-bottom: 0.0625rem solid ${theme.base.palette['border-line']};\n      }\n    `}\n  `;\n});\n\nStyledTaskList.defaultProps = defaultThemeProp;\n\nexport const TaskItem = ({ name, avatar, meta, actions, content, ...restProps }: TaskItemProps) => {\n  const summary = (\n    <SummaryItem\n      visual={avatar}\n      primary={name}\n      secondary={meta}\n      actions={content ? null : actions}\n    />\n  );\n  return (\n    <Flex\n      container={{ direction: 'column', gap: 2 }}\n      item={{ grow: 1 }}\n      as={StyledSummaryListItem}\n      forwardedAs='li'\n      {...restProps}\n    >\n      {content ? (\n        <>\n          {summary}\n          {content}\n        </>\n      ) : (\n        summary\n      )}\n    </Flex>\n  );\n};\n\nconst TaskList: FunctionComponent<TaskListProps & ForwardProps> = forwardRef(\n  ({ items, hasFooter = false }: PropsWithoutRef<TaskListProps>, ref) => {\n    return (\n      <Flex container={{ direction: 'column' }} as={StyledTaskList} hasFooter={hasFooter} ref={ref}>\n        {items.map((item, i) => (\n          <TaskItem {...item} key={`${i + 1}`} />\n        ))}\n      </Flex>\n    );\n  }\n);\n\nexport default TaskList;\n","import { ReactNode, FC, ReactElement, useMemo, MouseEvent } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardFooter,\n  Flex,\n  Text,\n  SummaryItem,\n  Count,\n  Button,\n  useI18n,\n  ForwardProps,\n  NoChildrenProp\n} from '@pega/cosmos-react-core';\n\nimport TaskList, { TaskItem, TaskItemProps } from './TaskList';\n\nexport interface TasksProps extends NoChildrenProp {\n  /** An array of TaskItemProps to generate the list.  */\n  items: TaskItemProps[];\n  /** Content to render when the list is empty. */\n  emptyPlaceholder: ReactNode;\n  /** Heading text to render at the top of the list. */\n  headerText: string;\n  /** A visual element i.e. (Avatar | Icon) to accompany the header text. */\n  headerVisual?: ReactElement;\n  /** A region for supplemental task list info or controls. */\n  headerSecondary?: ReactNode;\n  /** Integer representing the total count of tasks. */\n  count?: number | null;\n  /** Callback for when to show more/less button is clicked. Lists greater than 3 items will display the show toggle button in its footer. */\n  onExpandToggle?: () => void;\n}\n\nconst StyledTasks = styled(Card)<{ openItem?: boolean }>(({ theme, openItem }) => {\n  return openItem\n    ? css`\n        box-shadow: ${theme.base.shadow.low};\n      `\n    : null;\n});\n\nconst Tasks: FC<ForwardProps & TasksProps> = (props: TasksProps) => {\n  const {\n    items = [],\n    headerText,\n    headerVisual,\n    headerSecondary,\n    count,\n    onExpandToggle,\n    emptyPlaceholder,\n    ...restProps\n  } = props;\n  const openItem = items.find(item => item.content);\n  const t = useI18n();\n\n  const hasFooter = useMemo(() => {\n    return !openItem && typeof count === 'number' && count > 3;\n  }, [openItem, count]);\n\n  const TaskItems = useMemo(() => {\n    return openItem ? <TaskItem {...openItem} /> : <TaskList items={items} hasFooter={hasFooter} />;\n  }, [items, openItem]);\n\n  return (\n    <StyledTasks {...restProps} openItem={!!openItem}>\n      {!openItem && (\n        <CardHeader>\n          <SummaryItem\n            visual={headerVisual}\n            primary={\n              <Flex container={{ alignItems: 'center', gap: 1 }}>\n                <Text variant='h2'>{headerText}</Text>\n                <Count>{count ?? null}</Count>\n              </Flex>\n            }\n            secondary={headerSecondary}\n          />\n        </CardHeader>\n      )}\n      <CardContent>{items.length > 0 ? TaskItems : emptyPlaceholder}</CardContent>\n\n      {hasFooter && (\n        <CardFooter justify='center'>\n          <Button\n            variant='link'\n            aria-label={t(!!count && count > items.length ? 'show_more' : 'show_less', ['tasks'])}\n            onClick={(e: MouseEvent<HTMLButtonElement>) => {\n              onExpandToggle?.();\n              if (!!count && count <= items.length) {\n                const { currentTarget } = e;\n                requestAnimationFrame(() => {\n                  if (currentTarget.getBoundingClientRect().top < 0) currentTarget.scrollIntoView();\n                });\n              }\n            }}\n          >\n            {t(!!count && count > items.length ? 'show_more' : 'show_less')}\n          </Button>\n        </CardFooter>\n      )}\n    </StyledTasks>\n  );\n};\n\nexport default Tasks;\n"],"names":["Worklist","history","useNavigate","_useState","useState","_useState2","_slicedToArray","isLimited","setIsLimited","page","window","portal","uiResources","context_data","pyPortal","summary_of_lists__","D_pyMyWorkList","pxResults","replace","tasklist","data","_jsx","Tasks","headerText","count","length","items","filter","item","i","map","keys","pxRefObjectKey","split","pyID","path","encodeURI","concat","name","pxTaskLabel","meta","MetaList","_jsxs","Text","variant","children","Link","href","onClick","e","state","token","config","preventDefault","stopPropagation","openCaseType","genStatus","pyAssignmentStatus","pxUrgencyAssign","actions","Button","content","headerVisual","Avatar","size","getOperatorName","imageSrc","getDataUrl","getOperatorUrl","emptyPlaceholder","EmptyState","onExpandToggle","cur","StyledCardContent","styled","div","_ref","theme","css","_templateObject","_taggedTemplateLiteral","StyledPopover","StyledCard","base","spacing","components","card","padding","StyledCardFooter","defaultProps","defaultThemeProp","_ref2","container","restProps","_objectWithoutProperties","_excluded","Flex","_objectSpread","direction","as","footer","props","justify","wrap","alignItems","StyledCardHeader","header","undefined","CardHeader","forwardRef","ref","_Fragment","grow","displayName","StyledSummaryListContent","CardContent","withConfig","omitProps","loading","_templateObject2","palette","StyledSummaryListItem","SummaryItem","_templateObject3","SummaryListItems","_ref3","_ref4","id","itemActions","restItemProps","forwardedAs","Actions","SummaryList","_ref5","icon","onViewAll","noItemsText","error","_excluded2","t","useI18n","useMemo","Progress","placement","message","ErrorState","Card","gap","Icon","Count","CardFooter","toLowerCase","StyledTaskList","ul","hasFooter","TaskItem","avatar","summary","visual","primary","secondary","_ref3$hasFooter","_createElement","key","StyledTasks","openItem","shadow","low","_props$items","headerSecondary","find","TaskItems","TaskList","currentTarget","requestAnimationFrame","getBoundingClientRect","top","scrollIntoView"],"sourceRoot":""}