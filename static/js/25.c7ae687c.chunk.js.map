{"version":3,"sources":["../../../../src/components/Card/CardContent.tsx","../../../../src/components/Card/CardFooter.tsx","../../../../src/components/SummaryList/SummaryList.tsx","utils/datetime.tsx","components/Pulse.tsx","../../../../src/components/Card/CardHeader.tsx","../../../../src/components/Form/Form.tsx","../../../../../src/components/Icon/icons/check.icon.tsx"],"names":["StyledCardContent","div","theme","base","spacing","components","card","padding","defaultProps","children","container","restProps","direction","as","StyledCardFooter","footer","props","justify","wrap","alignItems","StyledSummaryListContent","withConfig","loading","palette","StyledSummaryListItem","SummaryListItems","items","map","id","itemActions","actions","restItemProps","forwardedAs","SummaryList","ref","icon","name","count","onViewAll","noItemsText","error","t","content","placement","message","undefined","length","gap","variant","toLowerCase","onClick","unitsInMs","year","month","day","hour","minute","second","getRelativeTime","date","elapsed","getTime","Date","now","Math","abs","unit","Object","keys","find","u","Intl","RelativeTimeFormat","window","config","locale","replace","style","numeric","format","round","Pulse","useState","posts","setpost","isLoaded","setPulseIsLoaded","useEffect","fetchData","then","response","data","FeedList","pxResults","catch","console","log","renderReplies","item","reply","FeedReply","pzInsKey","pyMessage","info","fullname","postedByUser","fullnameLabel","username","ID","avatarSrc","getDataUrl","userImage","timeElapsed","pxCreateDateTime","interactionInfo","likeLabel","likeCount","pyLikes","pxLikeCount","commentLabel","onLikeClick","onCommentClick","Feed","searchTypes","userInfo","getOperatorName","getOperatorUrl","FeedNewPost","textAreaPlaceholder","postLabel","onFilesAdded","onPost","FeedPost","postContext","context","pxContextType","Link","href","pyContext","split","previewable","target","pyContextDescription","pyFeed","pyPostedOn","replies","attachments","maxContentHeight","onUserClick","text","replyInput","onSubmit","placeholder","Card","Progress","StyledCardHeader","header","CardHeader","grow","displayName","StyledForm","form","StyledFormContent","Form","heading","description","banners","uid","Component","d","viewBox"],"mappings":"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","file":"static/js/25.c7ae687c.chunk.js","sourcesContent":["import { FunctionComponent, PropsWithChildren, ReactNode } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../theme';\nimport { BaseProps, ForwardProps } from '../../types';\nimport Flex, { FlexProps } from '../Flex';\nimport { StyledPopover } from '../Popover';\n\nimport { StyledCard } from './Card';\nimport { StyledCardFooter } from './CardFooter';\n\nexport interface CardContentProps extends BaseProps {\n  /** The content of the Card. */\n  children: ReactNode;\n  container?: Exclude<FlexProps['container'], boolean>;\n}\n\nexport const StyledCardContent = styled.div(({ theme }) => {\n  return css`\n    ${StyledPopover} &, &:not(${StyledCard} ${StyledCard} > &) {\n      position: relative;\n      padding: calc(1.5 * ${theme.base.spacing}) calc(${theme.components.card.padding} * 2);\n\n      & + &,\n      & + ${StyledCardFooter} {\n        padding-block-start: 0;\n      }\n    }\n  `;\n});\n\nStyledCardContent.defaultProps = defaultThemeProp;\n\nconst CardContent: FunctionComponent<CardContentProps & ForwardProps> = ({\n  children,\n  container,\n  ...restProps\n}: PropsWithChildren<CardContentProps & ForwardProps>) => {\n  return (\n    <Flex {...restProps} container={{ direction: 'column', ...container }} as={StyledCardContent}>\n      {children}\n    </Flex>\n  );\n};\n\nexport default CardContent;\n","import { FunctionComponent, PropsWithChildren } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../theme';\nimport Flex, { FlexContainerProps } from '../Flex';\nimport { BaseProps, ForwardProps } from '../../types';\nimport { StyledPopover } from '../Popover';\n\nimport { StyledCard } from './Card';\n\nexport interface CardFooterProps extends BaseProps {\n  /** [justify-content](https://css-tricks.com/almanac/properties/j/justify-content/) */\n  justify?: FlexContainerProps['justify'];\n}\n\nexport const StyledCardFooter = styled.footer(({ theme }) => {\n  return css`\n    ${StyledPopover} &, &:not(${StyledCard} ${StyledCard} > &) {\n      padding: calc(1.5 * ${theme.base.spacing}) calc(${theme.components.card.padding} * 2);\n    }\n  `;\n});\n\nStyledCardFooter.defaultProps = defaultThemeProp;\n\nconst CardFooter: FunctionComponent<CardFooterProps & ForwardProps> = (\n  props: PropsWithChildren<CardFooterProps>\n) => {\n  const { children, justify, ...restProps } = props;\n\n  return (\n    <Flex\n      as={StyledCardFooter}\n      container={{\n        wrap: 'wrap',\n        alignItems: 'center',\n        justify\n      }}\n      {...restProps}\n    >\n      {children}\n    </Flex>\n  );\n};\n\nexport default CardFooter;\n","import { forwardRef, PropsWithoutRef, Ref, FC, useMemo } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport Actions from '../Actions';\nimport Flex from '../Flex';\nimport Text from '../Text';\nimport Count from '../Badges/Count';\nimport Icon from '../Icon';\nimport Card, { CardHeader, CardContent, CardFooter } from '../Card';\nimport EmptyState, { EmptyStateProps } from '../EmptyState';\nimport { ForwardProps, NoChildrenProp, OmitStrict, Action } from '../../types';\nimport { omitProps } from '../../styles';\nimport { useI18n } from '../../hooks';\nimport { defaultThemeProp } from '../../theme';\nimport SummaryItem, { SummaryItemProps } from '../SummaryItem';\nimport Progress from '../Progress';\nimport Button from '../Button';\nimport ErrorState from '../ErrorState';\nimport type { ErrorStateProps } from '../ErrorState';\n\nexport interface SummaryListProps extends NoChildrenProp {\n  /** Name of the utility to be used as its heading along with associated actions and aria attributes. */\n  name?: string;\n  /** Identifier for the icon within Pega icons.  */\n  icon?: string;\n  /** Integer representing the total count of items for a list utility dataset. */\n  count?: number;\n  /** Top level actions for the utility. If more than one action is passed a consolidated ActionMenu will be generated. */\n  actions?: Action[];\n  /** If the utility is in a state of fetching data. */\n  loading?: boolean | string;\n  /** An array of SummaryListItem objects to render. Pass an appropriately limited length array with a desired sort order based on design system defaults or config. */\n  items: SummaryListItem[];\n  /** User click initiated callback for when to show view all modal. List lengths less than the count prop will display a \"View all\" button with this function is bound to. */\n  onViewAll?: (callback: Function) => void;\n  /** A simple message to display when there are no items. */\n  noItemsText?: EmptyStateProps['message'];\n  /**\n   * Indicate an error occurred while acquiring data for the list.\n   * The default error state may be overridden with custom props.\n   */\n  error?: boolean | ErrorStateProps;\n  /** Ref for the SummaryList's root element.  */\n  ref?: Ref<HTMLElement>;\n}\n\nexport interface SummaryListItem extends OmitStrict<SummaryItemProps, 'actions'>, ForwardProps {\n  /** A unique id to represent the item. */\n  id: string;\n  /** A set of Actions to render alongside the item. If more than one action is passed a consolidated ActionMenu will be generated. */\n  actions?: Action[];\n}\n\nexport const StyledSummaryListContent = styled(CardContent).withConfig<{ loading?: boolean }>(\n  omitProps('loading')\n)(\n  ({ theme, loading }) => css`\n    ${loading &&\n    css`\n      min-height: 4rem;\n    `}\n\n    &:not(:last-child) > ul > li:last-child {\n      border-bottom: 0.0625rem solid ${theme.base.palette['border-line']};\n    }\n  `\n);\n\nStyledSummaryListContent.defaultProps = defaultThemeProp;\n\nexport const StyledSummaryListItem: typeof SummaryItem = styled(SummaryItem)(\n  ({ theme }) =>\n    css`\n      padding: ${theme.base.spacing} 0;\n\n      &:not(:last-child) {\n        border-bottom: 0.0625rem solid ${theme.base.palette['border-line']};\n      }\n    `\n);\n\nStyledSummaryListItem.defaultProps = defaultThemeProp;\n\nexport const SummaryListItems = ({ items }: Pick<SummaryListProps, 'items'>) => {\n  return (\n    <ul>\n      {items.map(({ id, actions: itemActions, ...restItemProps }) => {\n        return (\n          <StyledSummaryListItem\n            key={id}\n            {...restItemProps}\n            forwardedAs='li'\n            actions={itemActions && <Actions items={itemActions} />}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nconst SummaryList: FC<SummaryListProps & ForwardProps> = forwardRef(\n  (\n    {\n      icon,\n      name,\n      count,\n      actions,\n      items,\n      onViewAll,\n      loading,\n      noItemsText,\n      error,\n      ...restProps\n    }: PropsWithoutRef<SummaryListProps>,\n    ref: SummaryListProps['ref']\n  ) => {\n    const t = useI18n();\n\n    const content = useMemo(() => {\n      if (loading) {\n        return (\n          <Progress placement='local' message={typeof loading === 'string' ? loading : undefined} />\n        );\n      }\n\n      if (error) {\n        return <ErrorState {...(error === true ? {} : error)} />;\n      }\n\n      return items.length > 0 ? (\n        <SummaryListItems items={items} />\n      ) : (\n        <EmptyState message={noItemsText} />\n      );\n    }, [loading, items, noItemsText, error]);\n\n    return (\n      <Card ref={ref} {...restProps}>\n        {(icon || name || typeof count === 'number' || actions) && (\n          <CardHeader>\n            <Flex container={{ alignItems: 'center', gap: 1 }}>\n              {icon && <Icon name={icon} />}\n              {name && <Text variant='h2'>{name}</Text>}\n              {typeof count === 'number' && <Count>{count}</Count>}\n            </Flex>\n            {actions && <Actions items={actions} />}\n          </CardHeader>\n        )}\n\n        <StyledSummaryListContent loading={loading}>{content}</StyledSummaryListContent>\n\n        {!error && typeof count === 'number' && count > items.length && onViewAll && (\n          <CardFooter justify='center'>\n            <Button\n              variant='link'\n              aria-label={name ? t('view_all_noun', [name.toLowerCase()]) : t('view_all')}\n              onClick={onViewAll}\n            >\n              {t('view_all')}\n            </Button>\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n);\n\nexport default SummaryList;\n","const unitsInMs = {\n  year: 24 * 60 * 60 * 1000 * 365,\n  month: (24 * 60 * 60 * 1000 * 365) / 12,\n  day: 24 * 60 * 60 * 1000,\n  hour: 60 * 60 * 1000,\n  minute: 60 * 1000,\n  second: 1000\n};\n\ntype TimeUnit = keyof typeof unitsInMs;\n\nexport const getRelativeTime = (date: Date) => {\n  let elapsed = date.getTime() - Date.now();\n  // Deliberately reduce precision to 1 minute\n  if (Math.abs(elapsed) < 60000) elapsed = 0;\n  const unit = (Object.keys(unitsInMs).find(u => Math.abs(elapsed) >= unitsInMs[u as TimeUnit]) ||\n    'second') as TimeUnit;\n  return new Intl.RelativeTimeFormat(\n    (window as any).config && (window as any).config.locale\n      ? (window as any).config.locale.replace('_', '-')\n      : 'en',\n    {\n      style: 'long',\n      numeric: 'auto'\n    }\n  ).format(Math.round(elapsed / unitsInMs[unit]), unit);\n};\n","import { useState, useEffect } from 'react';\nimport { fetchData } from '../services';\nimport { Card, Link, Progress } from '@pega/cosmos-react-core';\nimport { Feed, FeedNewPost, FeedPost, FeedReply } from '@pega/cosmos-react-social';\nimport { getRelativeTime } from '../utils/datetime';\nimport { getOperatorName, getOperatorUrl } from '../utils/env';\nimport { getDataUrl } from '../services';\n\nexport default function Pulse() {\n  const [posts, setpost] = useState([]);\n  const [isLoaded, setPulseIsLoaded] = useState(false);\n\n  useEffect(() => {\n    fetchData(\n      'feed',\n      'filterFor=DATA-PORTAL%20$DemoReact&feedClass=@baseclass&filterBy=&pageSize=9&olderThan='\n    )\n      .then(response => {\n        if (response.data !== null && response.data.FeedList && response.data.FeedList.pxResults) {\n          setpost(response.data.FeedList.pxResults);\n        }\n        setPulseIsLoaded(true);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  const renderContent = (context: any) => {\n    if (context.pxContextType === 'case') {\n      return (\n        <Link href={`/case/${context.pyContext.split(' ')[1]}`} previewable target='_blank'>\n          {context.pyContextDescription}\n        </Link>\n      );\n    }\n    return context.pyContextDescription;\n  };\n\n  const renderReplies = (item: any) => {\n    if (item.pxResults && item.pxResults.length > 0) {\n      return item.pxResults.map((reply: any) => (\n        <FeedReply\n          id={reply.pzInsKey}\n          key={reply.pzInsKey}\n          content={reply.pyMessage}\n          info={{\n            fullname: reply.postedByUser.name,\n            fullnameLabel: reply.postedByUser.name,\n            username: reply.postedByUser.ID,\n            avatarSrc: getDataUrl('operatorimage', reply.postedByUser.userImage),\n            content: reply.pyMessage,\n            timeElapsed: getRelativeTime(new Date(reply.pxCreateDateTime))\n          }}\n          interactionInfo={{\n            likeLabel: 'Like',\n            likeCount: reply.pyLikes.pxLikeCount,\n            commentLabel: 'Comment'\n          }}\n          onLikeClick={() => {}}\n          onCommentClick={() => {}}\n        />\n      ));\n    }\n    return null;\n  };\n\n  return (\n    <Feed\n      searchTypes={['user', 'case']}\n      userInfo={{\n        username: getOperatorName(),\n        fullname: getOperatorName(),\n        avatarSrc: getDataUrl('operatorimage', getOperatorUrl())\n      }}\n    >\n      <FeedNewPost\n        id='newpost'\n        interactionInfo={{\n          textAreaPlaceholder: 'Start a conversation',\n          postLabel: 'Post'\n        }}\n        onFilesAdded={() => {}}\n        onPost={() => {}}\n      />\n      {!isLoaded ? (\n        <Card style={{ alignItems: 'center', padding: '2rem 0' }}>\n          <Progress placement='inline' aria-label='Loading feed' message='' />\n        </Card>\n      ) : (\n        posts.map((item: any) => (\n          <FeedPost\n            id={item.pzInsKey}\n            key={item.pzInsKey}\n            info={{\n              fullname: item.postedByUser.name,\n              username: item.postedByUser.ID,\n              avatarSrc: getDataUrl('operatorimage', item.postedByUser.userImage),\n              content: item.pyMessage,\n              postContext: renderContent(item),\n              timeElapsed: getRelativeTime(new Date(item.pyFeed.pyPostedOn))\n            }}\n            interactionInfo={{\n              likeLabel: 'Like',\n              likeCount: item.pyLikes.pxLikeCount,\n              commentLabel: 'Comment'\n            }}\n            replies={renderReplies(item)}\n            attachments={[]}\n            maxContentHeight={80}\n            onLikeClick={() => {}}\n            onUserClick={() => {}}\n            actions={[{ text: 'Bookmark', id: 'Bookmark', onClick: () => {} }]}\n            replyInput={{\n              commentLabel: 'Send Comment',\n              attachments: [],\n              onFilesAdded: () => {},\n              onSubmit: () => {},\n              placeholder: 'Add a comment'\n            }}\n          />\n        ))\n      )}\n    </Feed>\n  );\n}\n","import { forwardRef, FunctionComponent, PropsWithChildren, ReactNode, Ref } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { defaultThemeProp } from '../../theme';\nimport Flex from '../Flex';\nimport { BaseProps, ForwardProps } from '../../types';\nimport { StyledPopover } from '../Popover';\n\nimport { StyledCard } from './Card';\nimport { StyledCardContent } from './CardContent';\n\nexport interface CardHeaderProps extends BaseProps {\n  /** The Card header content. */\n  children: ReactNode;\n  /** Action Buttons that will render within the header. */\n  actions?: ReactNode;\n  /** Ref for the wrapping element. */\n  ref?: Ref<HTMLDivElement>;\n}\n\nexport const StyledCardHeader = styled.header<CardHeaderProps>(({ theme, onClick }) => {\n  return css`\n    ${StyledPopover} &, &:not(${StyledCard} ${StyledCard} > &) {\n      padding: calc(1.5 * ${theme.base.spacing}) calc(${theme.components.card.padding} * 2);\n\n      + ${StyledCardContent} {\n        padding-block-start: 0;\n      }\n\n      &:hover {\n        ${onClick ? 'cursor: pointer;' : undefined}\n      }\n    }\n  `;\n});\n\nStyledCardHeader.defaultProps = defaultThemeProp;\n\nconst CardHeader: FunctionComponent<CardHeaderProps & ForwardProps> = forwardRef(\n  (\n    { children, actions, ...restProps }: PropsWithChildren<CardHeaderProps>,\n    ref: CardHeaderProps['ref']\n  ) => {\n    return (\n      <Flex\n        container={{ alignItems: 'center', justify: 'between' }}\n        as={StyledCardHeader}\n        {...restProps}\n        ref={ref}\n      >\n        {actions ? (\n          <>\n            <Flex container={{ alignItems: 'center' }} item={{ grow: 1 }}>\n              {children}\n            </Flex>\n            <div>{actions}</div>\n          </>\n        ) : (\n          children\n        )}\n      </Flex>\n    );\n  }\n);\n\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;\n","import { forwardRef, FC, ReactNode, Ref, PropsWithoutRef } from 'react';\nimport styled from 'styled-components';\n\nimport { useUID } from '../../hooks';\nimport { BaseProps, ForwardProps } from '../../types';\nimport Flex from '../Flex';\nimport Text from '../Text';\n\nexport interface FormProps extends BaseProps {\n  /** The Form content. Recommended composing form elements within a layout template such as Grid or Flex as the only child. */\n  children: ReactNode;\n  /** Region for Form Actions. */\n  actions?: ReactNode;\n  /** The heading of the form. */\n  heading?: string;\n  /** A description of the form to be displayed above the controls. */\n  description?: string;\n  /** Region for Banners above the Form. */\n  banners?: ReactNode;\n  /** Ref forwarded to the wrapping element. */\n  ref?: Ref<HTMLFormElement>;\n}\n\nexport const StyledForm = styled.form``;\nexport const StyledFormContent = styled.div``;\n\nconst Form: FC<FormProps & ForwardProps> = forwardRef(\n  (props: PropsWithoutRef<FormProps>, ref: FormProps['ref']) => {\n    const { children, actions, heading, description, banners, ...restProps } = props;\n\n    const uid = useUID();\n\n    return (\n      <Flex\n        container={{ direction: 'column', gap: 3 }}\n        as={StyledForm}\n        ref={ref}\n        {...restProps}\n        aria-labelledby={heading ? `${uid}-heading` : undefined}\n        aria-describedby={description ? `${uid}-description` : undefined}\n      >\n        {banners}\n        {(heading || description) && (\n          <Flex container={{ direction: 'column', gap: 1 }}>\n            {heading && (\n              <Text id={`${uid}-heading`} variant='h3'>\n                {heading}\n              </Text>\n            )}\n            {description && (\n              <Text id={`${uid}-description`} as='p'>\n                {description}\n              </Text>\n            )}\n          </Flex>\n        )}\n        <Flex as={StyledFormContent} container={{ direction: 'column', gap: 3 }}>\n          {children}\n        </Flex>\n\n        {actions && <Flex container={{ justify: 'between', alignItems: 'center' }}>{actions}</Flex>}\n      </Flex>\n    );\n  }\n);\n\nexport default Form;\n","// This file is autogenerated. Any changes will be overwritten.\nexport const name = 'check';\n\nexport const Component = () => (\n  <path d='M3.5328125,10.8960938 C3.5328125,10.8960938 10.0460938,17.3617188 10.0460938,17.3617188 C10.0460938,17.3617188 22.4984375,4 22.4984375,4 C22.4984375,4 23.9828125,5.484375 23.9828125,5.484375 C23.9828125,5.484375 10.09375,20.2351562 10.09375,20.2351562 C10.09375,20.2351562 2,12.3804687 2,12.3804687 C2,12.3804687 3.5328125,10.8960937 3.5328125,10.8960937 L3.5328125,10.8960938 Z' />\n);\n\nexport const viewBox = '0 0 25 25';\n"],"sourceRoot":""}